[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T12-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T12-4/tp/actions)","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"* `SOCket` is a **desktop app for NUS Software Engineering Students to manage the contact information of their peers and professors, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).\u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"  * If you can type fast, SOCket can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"* It is named `SOCket` to refer to the School of Computing, SOC, as well as how it helps with contacting others, like a network socket.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"* For the detailed documentation of this project, see the **[SOCket Product Website](https://ay2223s2-cs2103t-t12-4.github.io/tp/)**.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"chia-yh":6,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"mainClassName \u003d \u0027seedu.socket.Main\u0027","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"run {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"    archiveFileName \u003d \u0027socket.jar\u0027","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chia-yh":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":"### Carmen Ang","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"\u003cimg src\u003d\"images/cmang12.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"[[github](https://github.com/cmang12)]","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"[[portfolio](team/cmang12.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"* Responsibilities: Development","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"### Chia Yu Hong","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"\u003cimg src\u003d\"images/chia-yh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"[[github](https://github.com/chia-yh)]","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"[[portfolio](team/chia-yh.md)]","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"* Role: Developer","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"* Responsibilities: Development","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"### Dillon Goh","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"\u003cimg src\u003d\"images/dillongoh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"[[github](http://github.com/dillongoh)] [[portfolio](team/dillongoh.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"* Responsibilities: Development","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"### Huang Hao","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"\u003cimg src\u003d\"images/huanghao1998.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"[[github](http://github.com/huanghao1998)]","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"[[portfolio](team/huanghao1998.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"### Jeff Lee","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"\u003cimg src\u003d\"images/nus-jeff.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"[[github](http://github.com/nus-jeff)]","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"[[portfolio](team/nus-jeff.md)]","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cmang12":6,"huanghao1998":5,"chia-yh":6,"-":34,"dillongoh":4,"nus-jeff":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2223S2-CS2103T-T12-4/tp/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/socket/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/socket/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/socket/ui/Ui.java)","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/socket/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/socket/logic/Logic.java)","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"1. When `Logic` is called upon to execute a command, it uses the `SocketParser` class to parse the user command.","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"* When called upon to parse a user command, the `SocketParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `SocketParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/socket/model/Model.java)","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"chia-yh"},"content":"* stores the `Socket` data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `Socket`, which `Person` references. This allows `Socket` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"chia-yh"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T12-4/tp/blob/master/src/main/java/seedu/socket/storage/Storage.java)","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"chia-yh"},"content":"* can save both \u0027Socket\u0027 data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"* inherits from both `SocketStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"chia-yh"},"content":"Classes used by multiple components are in the `seedu.socket.commons` package.","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"chia-yh"},"content":"### Undo/redo feature","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"chia-yh"},"content":"This feature was implemented as proposed in [AddressBook-Level3](https://se-education.org/addressbook-level3/DeveloperGuide.html#proposed-undoredo-feature) ","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"chia-yh"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedSocket`. It extends `Socket` with an undo/redo history, stored internally as an `socketStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"* `VersionedSocket#commit()` — Saves the current \u0027Socket\u0027 state in its history.","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"chia-yh"},"content":"* `VersionedSocket#undo()` — Restores the previous \u0027Socket\u0027 state from its history.","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"chia-yh"},"content":"* `VersionedSocket#redo()` — Restores a previously undone \u0027Socket\u0027 state from its history.","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"chia-yh"},"content":"These operations are exposed in the `Model` interface as `Model#commitSocket()`, `Model#undoSocket()` and `Model#redoSocket()` respectively.","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"chia-yh"},"content":"Step 1. The user launches the application for the first time. The `VersionedSocket` will be initialized with the initial `Socket` state, and the `currentStatePointer` pointing to that single `Socket` state.","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"chia-yh"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in \u0027Socket\u0027. The `delete` command calls `Model#commitSocket()`, causing the modified state of `Socket` after the `delete 5` command executes to be saved in the `socketStateList`, and the `currentStatePointer` is shifted to the newly inserted `Socket` state.","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"chia-yh"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitSocket()`, causing another modified `Socket` state to be saved into the `socketStateList`.","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"chia-yh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitSocket()`, so the `Socket` state will not be saved into the `socketStateList`.","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoSocket()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous `Socket` state, and restores `Socket` to that state.","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"chia-yh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial `Socket` state, then there are no previous `Socket` states to restore. The `undo` command uses `Model#canUndoSocket()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"chia-yh"},"content":"The `redo` command does the opposite — it calls `Model#redoSocket()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores `Socket` to that state.","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"chia-yh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `socketStateList.size() - 1`, pointing to the latest `Socket` state, then there are no undone `Socket` states to restore. The `redo` command uses `Model#canRedoSocket()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"chia-yh"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the `Socket`, such as `list`, will usually not call `Model#commitSocket()`, `Model#undoSocket()` or `Model#redoSocket()`. Thus, the `socketStateList` remains unchanged.","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"chia-yh"},"content":"Step 6. The user executes `clear`, which calls `Model#commitSocket()`. Since the `currentStatePointer` is not pointing at the end of the `socketStateList`, all `Socket` states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"chia-yh"},"content":"* **Alternative 1 (current choice):** Saves the entire `Socket`.","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"chia-yh"},"content":"* has a need to manage a significant number of contacts (peers, professors in NUS Computing)","lastModifiedDate":"2023-02-27"},{"lineNumber":259,"author":{"gitId":"chia-yh"},"content":"* has a need to group and manage groups of contacts","lastModifiedDate":"2023-02-27"},{"lineNumber":260,"author":{"gitId":"chia-yh"},"content":"* has a need to view the skills and proficiencies of contacts (programming languages, modules)","lastModifiedDate":"2023-02-27"},{"lineNumber":261,"author":{"gitId":"chia-yh"},"content":"* has a need to access the GitHub profiles/repositories of contacts","lastModifiedDate":"2023-02-27"},{"lineNumber":262,"author":{"gitId":"chia-yh"},"content":"* has a need to track deadlines and responsibilities associated with contacts","lastModifiedDate":"2023-02-27"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"chia-yh"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app, store information relevant to NUS Computing students (GitHub profile, repository, programming language proficiencies, modules taken), quickly find contacts that satisfy certain criteria (taken a particular module, in a group)","lastModifiedDate":"2023-02-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"chia-yh"},"content":"| Priority | As a …​                                                          | I can…​                                                    | So that I can…​                                                                           |","lastModifiedDate":"2023-02-27"},{"lineNumber":276,"author":{"gitId":"dillongoh"},"content":"|----------|------------------------------------------------------------------|------------------------------------------------------------|-------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                                         | see usage instructions                                     | refer to instructions when I forget how to use the App                                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                             | add a new person                                           |                                                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                             | delete a person                                            | remove entries that I no longer need                                                      |","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"| `* * *`  | user                                                             | find a person by name                                      | locate details of persons without having to go through the entire list                    |","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"chia-yh"},"content":"| `* * *`  | student with many friends                                        | save my friend\u0027s details                                   | easily contact them                                                                       |","lastModifiedDate":"2023-02-27"},{"lineNumber":282,"author":{"gitId":"chia-yh"},"content":"| `* * *`  | student who likes to ask questions                               | save my professors\u0027 details                                | easily contact them to ask questions                                                      |","lastModifiedDate":"2023-02-27"},{"lineNumber":283,"author":{"gitId":"chia-yh"},"content":"| `* * *`  | student with fast typing speed                                   | use command based inputs to search for contacts            | quickly pull out contacts without needing to spend time moving my mouse                   |","lastModifiedDate":"2023-02-27"},{"lineNumber":284,"author":{"gitId":"chia-yh"},"content":"| `* *`    | user                                                             | hide private contact details                               | minimize the chance of someone else seeing them by accident                               |","lastModifiedDate":"2023-02-27"},{"lineNumber":285,"author":{"gitId":"chia-yh"},"content":"| `* *`    | student involved in project work                                 | search contacts belonging to a certain group               | contact my groupmates easily                                                              |","lastModifiedDate":"2023-02-27"},{"lineNumber":286,"author":{"gitId":"chia-yh"},"content":"| `* *`    | student with many assignments                                    | tag deadlines and responsibilities to my contacts          | easily keep track of which tasks are more urgent and who is taking care of it             |","lastModifiedDate":"2023-03-01"},{"lineNumber":287,"author":{"gitId":"dillongoh"},"content":"| `* *`    | organised user                                                   | group contacts into different groups                       | manage my contacts easily                                                                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":288,"author":{"gitId":"dillongoh"},"content":"| `* *`    | software engineering student with many SE projects               | access the github repositories of my peers                 | easily keep track of the github repos that I\u0027m involved and interested in                 |","lastModifiedDate":"2023-03-01"},{"lineNumber":289,"author":{"gitId":"dillongoh"},"content":"| `* *`    | student interested in hackathons                                 | find students based on skills                              | form groups with them                                                                     |","lastModifiedDate":"2023-03-01"},{"lineNumber":290,"author":{"gitId":"dillongoh"},"content":"| `* *`    | software engineering student                                     | find repositories of group projects I am involved in       | easily access team repositories                                                           |","lastModifiedDate":"2023-03-01"},{"lineNumber":291,"author":{"gitId":"dillongoh"},"content":"| `* *`    | student who is organised                                         | sort all my peers\u0027 contact information                     | have only one platform where I know my contacts are organized                             |","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"dillongoh"},"content":"| `* *`    | software engineering student                                     | tag contacts with their skills                             | know what skills they have and can easily find those with a particular skill              |","lastModifiedDate":"2023-03-01"},{"lineNumber":293,"author":{"gitId":"dillongoh"},"content":"| `* *`    | advanced user                                                    | use the shortcut keys                                      | get things done more effectively                                                          |","lastModifiedDate":"2023-03-01"},{"lineNumber":294,"author":{"gitId":"dillongoh"},"content":"| `* *`    | busy software engineering student                                | create shortcuts to long commands                          | not type out long commands repeatedly to save time                                        |","lastModifiedDate":"2023-03-01"},{"lineNumber":295,"author":{"gitId":"dillongoh"},"content":"| `* *`    | student constantly getting into new projects with other memebers | quickly remove tags of specific groups and delete contacts | not be flooded with too much irrelevant contacts which can cause accidental wrong contact |","lastModifiedDate":"2023-03-01"},{"lineNumber":296,"author":{"gitId":"dillongoh"},"content":"| `* *`    | software engineering student with many peers                     | save and access my peers\u0027 github information               | easily access their profiles and view their repositories                                  |","lastModifiedDate":"2023-03-01"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"chia-yh"},"content":"(For all use cases below, the **System** is the `SOCket` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-27"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"chia-yh"},"content":"**Use case: UC01 - Add a contact**","lastModifiedDate":"2023-02-27"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":304,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"huanghao1998"},"content":"1.  User requests to add a contact.","lastModifiedDate":"2023-03-03"},{"lineNumber":307,"author":{"gitId":"huanghao1998"},"content":"2.  SOCket adds the contact.","lastModifiedDate":"2023-03-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":311,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":312,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":313,"author":{"gitId":"chia-yh"},"content":"* 1a. There are no details provided.","lastModifiedDate":"2023-02-27"},{"lineNumber":314,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":315,"author":{"gitId":"chia-yh"},"content":"    * 1a1. SOCket shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":316,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":317,"author":{"gitId":"chia-yh"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-02-27"},{"lineNumber":318,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":319,"author":{"gitId":"chia-yh"},"content":"* 1b. There is no name provided.","lastModifiedDate":"2023-03-01"},{"lineNumber":320,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":321,"author":{"gitId":"chia-yh"},"content":"    * 1b1. SOCket shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":322,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":323,"author":{"gitId":"chia-yh"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-01"},{"lineNumber":324,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":325,"author":{"gitId":"chia-yh"},"content":"**Use case: UC02 - Edit a contact**","lastModifiedDate":"2023-02-27"},{"lineNumber":326,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":327,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":328,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":329,"author":{"gitId":"huanghao1998"},"content":"1.  User requests to list contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":330,"author":{"gitId":"huanghao1998"},"content":"2.  SOCket shows a list of contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":331,"author":{"gitId":"huanghao1998"},"content":"3.  User requests to edit a specific contact\u0027s details in the list.","lastModifiedDate":"2023-03-03"},{"lineNumber":332,"author":{"gitId":"huanghao1998"},"content":"4.  SOCket edits the contact\u0027s details.","lastModifiedDate":"2023-03-03"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"chia-yh"},"content":"    * 3a1. SOCket shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":343,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":344,"author":{"gitId":"chia-yh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-27"},{"lineNumber":345,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":346,"author":{"gitId":"chia-yh"},"content":"* 3b. There are no details provided.","lastModifiedDate":"2023-02-27"},{"lineNumber":347,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":348,"author":{"gitId":"chia-yh"},"content":"    * 3b1. SOCket shows an error message.","lastModifiedDate":"2023-02-27"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"chia-yh"},"content":"* 3c. There are no tags provided.","lastModifiedDate":"2023-02-27"},{"lineNumber":353,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":354,"author":{"gitId":"chia-yh"},"content":"    * 3b1. SOCket removes all tags associated with the contact.","lastModifiedDate":"2023-02-27"},{"lineNumber":355,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":356,"author":{"gitId":"chia-yh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":357,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":358,"author":{"gitId":"chia-yh"},"content":"* 3d. There are tag(s) provided.","lastModifiedDate":"2023-02-27"},{"lineNumber":359,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":360,"author":{"gitId":"chia-yh"},"content":"    * 3b1. SOCket removes existing tags associated with the contact and adds the tag(s) provided.","lastModifiedDate":"2023-02-27"},{"lineNumber":361,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":362,"author":{"gitId":"chia-yh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":363,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":364,"author":{"gitId":"dillongoh"},"content":"**Use case: UC03 Delete a contact**","lastModifiedDate":"2023-03-01"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"huanghao1998"},"content":"1.  User requests to list contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":369,"author":{"gitId":"huanghao1998"},"content":"2.  SOCket shows a list of contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":370,"author":{"gitId":"huanghao1998"},"content":"3.  User requests to delete a specific contact in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":371,"author":{"gitId":"huanghao1998"},"content":"4.  SOCket deletes the contact.","lastModifiedDate":"2023-03-01"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"dillongoh"},"content":"    * 3a1. SOCket shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"chia-yh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"dillongoh"},"content":"**Use case: UC04 Sort contacts**","lastModifiedDate":"2023-03-01"},{"lineNumber":388,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":389,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":390,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":391,"author":{"gitId":"huanghao1998"},"content":"1.  User requests to list contact.","lastModifiedDate":"2023-03-01"},{"lineNumber":392,"author":{"gitId":"huanghao1998"},"content":"2.  SOCket shows a list of contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":393,"author":{"gitId":"huanghao1998"},"content":"3.  User requests to sort the list by a category.","lastModifiedDate":"2023-03-01"},{"lineNumber":394,"author":{"gitId":"huanghao1998"},"content":"4.  SOCket sorts alphanumerically by that category and shows the sorted list of contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":395,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":396,"author":{"gitId":"dillongoh"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":397,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":398,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":399,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":400,"author":{"gitId":"dillongoh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-01"},{"lineNumber":401,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":402,"author":{"gitId":"dillongoh"},"content":"  Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":403,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":404,"author":{"gitId":"dillongoh"},"content":"* 3a. The given category is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":405,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":406,"author":{"gitId":"dillongoh"},"content":"  * 3a1. SOCket shows an error message. ","lastModifiedDate":"2023-03-01"},{"lineNumber":407,"author":{"gitId":"dillongoh"},"content":"  ","lastModifiedDate":"2023-03-01"},{"lineNumber":408,"author":{"gitId":"huanghao1998"},"content":"    Use case resumes from step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":409,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":410,"author":{"gitId":"huanghao1998"},"content":"* 3b. No category is given.","lastModifiedDate":"2023-03-03"},{"lineNumber":411,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":412,"author":{"gitId":"huanghao1998"},"content":"    * 3b1. SOCket sorts the list by name and shows the sorted list of contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":413,"author":{"gitId":"huanghao1998"},"content":"  ","lastModifiedDate":"2023-03-03"},{"lineNumber":414,"author":{"gitId":"huanghao1998"},"content":"* 3b. No category is given.","lastModifiedDate":"2023-03-03"},{"lineNumber":415,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":416,"author":{"gitId":"huanghao1998"},"content":"  * 3b1. SOCket sorts the list by name and shows the sorted list of contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":417,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-03-01"},{"lineNumber":418,"author":{"gitId":"huanghao1998"},"content":"     Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":419,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":420,"author":{"gitId":"nus-jeff"},"content":"**Use case: UC05 Find contact(s)**","lastModifiedDate":"2023-03-03"},{"lineNumber":421,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":422,"author":{"gitId":"nus-jeff"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":423,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":424,"author":{"gitId":"nus-jeff"},"content":"1.  User request to find a contact with the given keywords in their respective fields.","lastModifiedDate":"2023-03-16"},{"lineNumber":425,"author":{"gitId":"nus-jeff"},"content":"2.  SOCket shows a list of contacts that contains any of the given keyword in their respective fields.","lastModifiedDate":"2023-03-16"},{"lineNumber":426,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":427,"author":{"gitId":"nus-jeff"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":428,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":429,"author":{"gitId":"nus-jeff"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":430,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":431,"author":{"gitId":"nus-jeff"},"content":"* 1a. No contact matches any of the given keywords in their respective fields.","lastModifiedDate":"2023-03-16"},{"lineNumber":432,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":433,"author":{"gitId":"nus-jeff"},"content":"    * 1a1. SOCket shows an empty list of contacts. ","lastModifiedDate":"2023-03-03"},{"lineNumber":434,"author":{"gitId":"nus-jeff"},"content":"      ","lastModifiedDate":"2023-03-03"},{"lineNumber":435,"author":{"gitId":"nus-jeff"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":436,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":437,"author":{"gitId":"nus-jeff"},"content":"* 1b. No keywords are given for all fields.","lastModifiedDate":"2023-03-16"},{"lineNumber":438,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":439,"author":{"gitId":"nus-jeff"},"content":"    * 1b1. SOCket shows an empty list of contacts.","lastModifiedDate":"2023-03-16"},{"lineNumber":440,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":441,"author":{"gitId":"nus-jeff"},"content":"      Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":442,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":443,"author":{"gitId":"huanghao1998"},"content":"**Use case: UC06 Clear contacts/tag**","lastModifiedDate":"2023-03-01"},{"lineNumber":444,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":445,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":446,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":447,"author":{"gitId":"huanghao1998"},"content":"1. User chooses to clear off group of contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":448,"author":{"gitId":"huanghao1998"},"content":"2. SOCket requests for confirmation to delete the contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":449,"author":{"gitId":"huanghao1998"},"content":"3. User confirms.","lastModifiedDate":"2023-03-01"},{"lineNumber":450,"author":{"gitId":"huanghao1998"},"content":"4. SOcket deletes all the contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":451,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":452,"author":{"gitId":"huanghao1998"},"content":"Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":453,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":454,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":455,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":456,"author":{"gitId":"huanghao1998"},"content":"* 1a. All the given tags are present in SOCket.","lastModifiedDate":"2023-03-01"},{"lineNumber":457,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":458,"author":{"gitId":"huanghao1998"},"content":"  * 1a1. SOCket request to delete all the contacts under the tags.","lastModifiedDate":"2023-03-01"},{"lineNumber":459,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":460,"author":{"gitId":"huanghao1998"},"content":"* 1b. Some given tags are not present in SOCket.","lastModifiedDate":"2023-03-01"},{"lineNumber":461,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":462,"author":{"gitId":"huanghao1998"},"content":"  * 1b1. SOCket shows an error message, listing all the wrong tags.","lastModifiedDate":"2023-03-01"},{"lineNumber":463,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":464,"author":{"gitId":"huanghao1998"},"content":"  * 1b2. SOCket request to delete all the contacts under the correct tags.","lastModifiedDate":"2023-03-03"},{"lineNumber":465,"author":{"gitId":"huanghao1998"},"content":"    ","lastModifiedDate":"2023-03-01"},{"lineNumber":466,"author":{"gitId":"chia-yh"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-15"},{"lineNumber":467,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":468,"author":{"gitId":"huanghao1998"},"content":"* 1c. All the given tag are not present in SOCket.","lastModifiedDate":"2023-03-01"},{"lineNumber":469,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":470,"author":{"gitId":"huanghao1998"},"content":"    * 1c1. SOCket shows an error message, listing all the wrong tags.","lastModifiedDate":"2023-03-01"},{"lineNumber":471,"author":{"gitId":"huanghao1998"},"content":"  ","lastModifiedDate":"2023-03-01"},{"lineNumber":472,"author":{"gitId":"huanghao1998"},"content":"    * 1c2. SOCket requests for correct tags. ","lastModifiedDate":"2023-03-01"},{"lineNumber":473,"author":{"gitId":"huanghao1998"},"content":"  ","lastModifiedDate":"2023-03-01"},{"lineNumber":474,"author":{"gitId":"huanghao1998"},"content":"      Steps 1c1-1c2 are repeated until a tag is entered correctly.","lastModifiedDate":"2023-03-01"},{"lineNumber":475,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":476,"author":{"gitId":"chia-yh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-15"},{"lineNumber":477,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":478,"author":{"gitId":"huanghao1998"},"content":"* 1d. No tag is provided.","lastModifiedDate":"2023-03-01"},{"lineNumber":479,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":480,"author":{"gitId":"huanghao1998"},"content":"    * 1d1. SOCket request to delete all the contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":481,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":482,"author":{"gitId":"chia-yh"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-15"},{"lineNumber":483,"author":{"gitId":"huanghao1998"},"content":"  ","lastModifiedDate":"2023-03-01"},{"lineNumber":484,"author":{"gitId":"huanghao1998"},"content":"* *a. At any time, User choose to cancel the operation.","lastModifiedDate":"2023-03-01"},{"lineNumber":485,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":486,"author":{"gitId":"chia-yh"},"content":"    * *a1. SOCKet stops the operation.","lastModifiedDate":"2023-03-15"},{"lineNumber":487,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":488,"author":{"gitId":"nus-jeff"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":489,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":490,"author":{"gitId":"cmang12"},"content":"**Use case: UC07 List contacts**","lastModifiedDate":"2023-03-01"},{"lineNumber":491,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":492,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":493,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":494,"author":{"gitId":"huanghao1998"},"content":"1. User requests to list contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":495,"author":{"gitId":"huanghao1998"},"content":"2. SOCket shows a list of contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":496,"author":{"gitId":"cmang12"},"content":"3. User requests to list contacts by language(s) and tag(s).","lastModifiedDate":"2023-03-16"},{"lineNumber":497,"author":{"gitId":"cmang12"},"content":"4. SOCket shows a list of contacts with given language(s) and tag(s).","lastModifiedDate":"2023-03-16"},{"lineNumber":498,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":499,"author":{"gitId":"cmang12"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":500,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":501,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":502,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":503,"author":{"gitId":"cmang12"},"content":"* 3a. The given tag(s) or language(s) is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":504,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":505,"author":{"gitId":"cmang12"},"content":"    * 3a1. SOCket shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":507,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":508,"author":{"gitId":"cmang12"},"content":"      ","lastModifiedDate":"2023-03-01"},{"lineNumber":509,"author":{"gitId":"cmang12"},"content":"* 3b. No contact matches the given language(s) or tag(s). ","lastModifiedDate":"2023-03-16"},{"lineNumber":510,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":511,"author":{"gitId":"cmang12"},"content":"    * 3b1. SOCket shows an empty list of contacts. ","lastModifiedDate":"2023-03-16"},{"lineNumber":512,"author":{"gitId":"nus-jeff"},"content":"    ","lastModifiedDate":"2023-03-03"},{"lineNumber":513,"author":{"gitId":"cmang12"},"content":"      Use case resumes at step 2. ","lastModifiedDate":"2023-03-16"},{"lineNumber":514,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":515,"author":{"gitId":"cmang12"},"content":"* 3c. No category is given.","lastModifiedDate":"2023-03-16"},{"lineNumber":516,"author":{"gitId":"cmang12"},"content":"      ","lastModifiedDate":"2023-03-16"},{"lineNumber":517,"author":{"gitId":"cmang12"},"content":"  Use case resumes at step 2. ","lastModifiedDate":"2023-03-16"},{"lineNumber":518,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":519,"author":{"gitId":"cmang12"},"content":"**Use case: UC08 Access Help page**","lastModifiedDate":"2023-03-01"},{"lineNumber":520,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":521,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":522,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":523,"author":{"gitId":"huanghao1998"},"content":"1. User requests for help.","lastModifiedDate":"2023-03-03"},{"lineNumber":524,"author":{"gitId":"huanghao1998"},"content":"2. SOCket shows the help page.","lastModifiedDate":"2023-03-03"},{"lineNumber":525,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":526,"author":{"gitId":"cmang12"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":527,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":528,"author":{"gitId":"cmang12"},"content":"**Use case: UC09 - Exit SOCket**","lastModifiedDate":"2023-03-01"},{"lineNumber":529,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":530,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":531,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":532,"author":{"gitId":"nus-jeff"},"content":"1.  User requests to exit SOCket.","lastModifiedDate":"2023-03-03"},{"lineNumber":533,"author":{"gitId":"nus-jeff"},"content":"2.  SOCket exits.","lastModifiedDate":"2023-03-03"},{"lineNumber":534,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":535,"author":{"gitId":"cmang12"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":536,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":537,"author":{"gitId":"cmang12"},"content":"**Use case: UC10 Hide contact details**","lastModifiedDate":"2023-03-01"},{"lineNumber":538,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":539,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":540,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":541,"author":{"gitId":"huanghao1998"},"content":"1. User requests to list contact.","lastModifiedDate":"2023-03-03"},{"lineNumber":542,"author":{"gitId":"huanghao1998"},"content":"2. SOCket shows a list of contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":543,"author":{"gitId":"huanghao1998"},"content":"3. User requests to hide a category of a specific contact.","lastModifiedDate":"2023-03-03"},{"lineNumber":544,"author":{"gitId":"huanghao1998"},"content":"4. SOCket hides the specific category of that user.","lastModifiedDate":"2023-03-03"},{"lineNumber":545,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":546,"author":{"gitId":"cmang12"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":547,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":548,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":549,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":550,"author":{"gitId":"cmang12"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-01"},{"lineNumber":551,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":552,"author":{"gitId":"cmang12"},"content":"  Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":553,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":554,"author":{"gitId":"cmang12"},"content":"* 3a. The given category is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":555,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":556,"author":{"gitId":"cmang12"},"content":"    * 3a1. SOCket shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":557,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":558,"author":{"gitId":"cmang12"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":559,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":560,"author":{"gitId":"cmang12"},"content":"* 3b. The contact does not have that category.","lastModifiedDate":"2023-03-01"},{"lineNumber":561,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":562,"author":{"gitId":"cmang12"},"content":"    * 3b1. SOCket shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":563,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":564,"author":{"gitId":"cmang12"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":565,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":566,"author":{"gitId":"chia-yh"},"content":"      Use case ends.","lastModifiedDate":"2023-02-27"},{"lineNumber":567,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":568,"author":{"gitId":"nus-jeff"},"content":"**Use case: UC11 Using shortcut command**","lastModifiedDate":"2023-03-03"},{"lineNumber":569,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":570,"author":{"gitId":"nus-jeff"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":571,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":572,"author":{"gitId":"nus-jeff"},"content":"1.  User binds a command to a given keyword of their choice.","lastModifiedDate":"2023-03-03"},{"lineNumber":573,"author":{"gitId":"nus-jeff"},"content":"2.  SOCket shows a message to confirm shortcut key created.","lastModifiedDate":"2023-03-03"},{"lineNumber":574,"author":{"gitId":"nus-jeff"},"content":"3.  User types the keyword bound to the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":575,"author":{"gitId":"nus-jeff"},"content":"4.  SOCket will execute the command.","lastModifiedDate":"2023-03-03"},{"lineNumber":576,"author":{"gitId":"nus-jeff"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":577,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":578,"author":{"gitId":"nus-jeff"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":579,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":580,"author":{"gitId":"nus-jeff"},"content":"*  3a. Command bounded to the keyword is not valid.","lastModifiedDate":"2023-03-03"},{"lineNumber":581,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":582,"author":{"gitId":"nus-jeff"},"content":"    * 3a1. SOCket shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":583,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":584,"author":{"gitId":"nus-jeff"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":585,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":586,"author":{"gitId":"dillongoh"},"content":"**Use case: UC12 Access peer GitHub information**","lastModifiedDate":"2023-03-01"},{"lineNumber":587,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":588,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":589,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":590,"author":{"gitId":"huanghao1998"},"content":"1.  User requests to list contact.","lastModifiedDate":"2023-03-01"},{"lineNumber":591,"author":{"gitId":"huanghao1998"},"content":"2.  SOCket shows a list of contacts.","lastModifiedDate":"2023-03-01"},{"lineNumber":592,"author":{"gitId":"dillongoh"},"content":"3.  User requests to view a specific contact\u0027s github information.","lastModifiedDate":"2023-03-01"},{"lineNumber":593,"author":{"gitId":"huanghao1998"},"content":"4.  SOCket opens the contact\u0027s github profile in a browser.","lastModifiedDate":"2023-03-01"},{"lineNumber":594,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":595,"author":{"gitId":"dillongoh"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":596,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":597,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":598,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":599,"author":{"gitId":"dillongoh"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-01"},{"lineNumber":600,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":601,"author":{"gitId":"dillongoh"},"content":"  Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":602,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":603,"author":{"gitId":"dillongoh"},"content":"* 3a. The contact does not have github information.","lastModifiedDate":"2023-03-01"},{"lineNumber":604,"author":{"gitId":"dillongoh"},"content":"    ","lastModifiedDate":"2023-03-01"},{"lineNumber":605,"author":{"gitId":"chia-yh"},"content":"   Use case resumes at step 2.","lastModifiedDate":"2023-03-15"},{"lineNumber":606,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":607,"author":{"gitId":"chia-yh"},"content":"**Use case: UC13 Undo recent changes**","lastModifiedDate":"2023-03-15"},{"lineNumber":608,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":609,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":610,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":611,"author":{"gitId":"chia-yh"},"content":"1. User requests to undo changes.","lastModifiedDate":"2023-03-15"},{"lineNumber":612,"author":{"gitId":"chia-yh"},"content":"2. SOCket undoes changes.","lastModifiedDate":"2023-03-15"},{"lineNumber":613,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":614,"author":{"gitId":"huanghao1998"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":615,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":616,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":617,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":618,"author":{"gitId":"chia-yh"},"content":"* 1a. No changes exist.","lastModifiedDate":"2023-03-15"},{"lineNumber":619,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":620,"author":{"gitId":"chia-yh"},"content":"    * 1a1. SOCket shows an error message.","lastModifiedDate":"2023-03-15"},{"lineNumber":621,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":622,"author":{"gitId":"huanghao1998"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":623,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":624,"author":{"gitId":"chia-yh"},"content":"**Use case: UC14 Redo recent undone changes**","lastModifiedDate":"2023-03-15"},{"lineNumber":625,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":626,"author":{"gitId":"chia-yh"},"content":"**MSS:**","lastModifiedDate":"2023-03-15"},{"lineNumber":627,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":628,"author":{"gitId":"chia-yh"},"content":"1. User requests to restore recent undone changes.","lastModifiedDate":"2023-03-15"},{"lineNumber":629,"author":{"gitId":"chia-yh"},"content":"2. SOCket restores undone changes.","lastModifiedDate":"2023-03-15"},{"lineNumber":630,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":631,"author":{"gitId":"chia-yh"},"content":"   Use case ends.","lastModifiedDate":"2023-03-15"},{"lineNumber":632,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":633,"author":{"gitId":"chia-yh"},"content":"**Extensions:**","lastModifiedDate":"2023-03-15"},{"lineNumber":634,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":635,"author":{"gitId":"chia-yh"},"content":"* 1a. No undone changes exist.","lastModifiedDate":"2023-03-15"},{"lineNumber":636,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":637,"author":{"gitId":"chia-yh"},"content":"    * 1a1. SOCket shows an error message.","lastModifiedDate":"2023-03-15"},{"lineNumber":638,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":639,"author":{"gitId":"chia-yh"},"content":"      Use case ends.","lastModifiedDate":"2023-03-15"},{"lineNumber":640,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":641,"author":{"gitId":"chia-yh"},"content":"**Use case: UC15 Tagging a contact**","lastModifiedDate":"2023-03-15"},{"lineNumber":642,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":643,"author":{"gitId":"nus-jeff"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":644,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":645,"author":{"gitId":"nus-jeff"},"content":"1.  User \u003cins\u003efind contact(s) (UC05)\u003c/ins\u003e they wish to tag.","lastModifiedDate":"2023-03-03"},{"lineNumber":646,"author":{"gitId":"nus-jeff"},"content":"2.  User tags the list of contacts currently shown with a tag name.","lastModifiedDate":"2023-03-03"},{"lineNumber":647,"author":{"gitId":"nus-jeff"},"content":"3.  SOCket tags all contacts in the list currently shown, displays all contacts with the given tag name to the user.","lastModifiedDate":"2023-03-03"},{"lineNumber":648,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":649,"author":{"gitId":"nus-jeff"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":650,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":651,"author":{"gitId":"chia-yh"},"content":"**Use case: UC16 Set deadlines \u0026 responsibilities**","lastModifiedDate":"2023-03-15"},{"lineNumber":652,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":653,"author":{"gitId":"huanghao1998"},"content":"**MSS:**","lastModifiedDate":"2023-03-03"},{"lineNumber":654,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":655,"author":{"gitId":"huanghao1998"},"content":"1. User has a team project and creates an event.","lastModifiedDate":"2023-03-16"},{"lineNumber":656,"author":{"gitId":"huanghao1998"},"content":"2. SOCket creates the event.","lastModifiedDate":"2023-03-01"},{"lineNumber":657,"author":{"gitId":"huanghao1998"},"content":"3. User request to groups all the team members contact under the event created.","lastModifiedDate":"2023-03-01"},{"lineNumber":658,"author":{"gitId":"huanghao1998"},"content":"4. SOCket groups the contacts together.","lastModifiedDate":"2023-03-01"},{"lineNumber":659,"author":{"gitId":"huanghao1998"},"content":"5. User enters a deadline date to each milestone of the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":660,"author":{"gitId":"huanghao1998"},"content":"6. SOCket allocates the date to respective milestone.","lastModifiedDate":"2023-03-01"},{"lineNumber":661,"author":{"gitId":"huanghao1998"},"content":"7. User chooses to give role to each team members.","lastModifiedDate":"2023-03-01"},{"lineNumber":662,"author":{"gitId":"huanghao1998"},"content":"8. SOCket assigned the given roles to respective team members.","lastModifiedDate":"2023-03-01"},{"lineNumber":663,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":664,"author":{"gitId":"huanghao1998"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":665,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":666,"author":{"gitId":"huanghao1998"},"content":"**Extensions:**","lastModifiedDate":"2023-03-03"},{"lineNumber":667,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":668,"author":{"gitId":"huanghao1998"},"content":"* 5a. SOCket detects a syntax error in the entered date.","lastModifiedDate":"2023-03-01"},{"lineNumber":669,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":670,"author":{"gitId":"huanghao1998"},"content":"    * 5a1. SOCket shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":671,"author":{"gitId":"huanghao1998"},"content":"  ","lastModifiedDate":"2023-03-01"},{"lineNumber":672,"author":{"gitId":"chia-yh"},"content":"      Use case resume at step 6 when the date entered is correct.","lastModifiedDate":"2023-03-15"},{"lineNumber":673,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":674,"author":{"gitId":"dillongoh"},"content":"   Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":675,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":676,"author":{"gitId":"huanghao1998"},"content":"**Use case: UC17 Removing tag/language(s)**","lastModifiedDate":"2023-03-16"},{"lineNumber":677,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":678,"author":{"gitId":"huanghao1998"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":679,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":680,"author":{"gitId":"huanghao1998"},"content":"1. User found that he/she has place a wrong tag to a person.","lastModifiedDate":"2023-03-16"},{"lineNumber":681,"author":{"gitId":"huanghao1998"},"content":"2. User request to remove the specific tag.","lastModifiedDate":"2023-03-16"},{"lineNumber":682,"author":{"gitId":"huanghao1998"},"content":"3. SOCket find the person and removes the tag associated to it.","lastModifiedDate":"2023-03-16"},{"lineNumber":683,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":684,"author":{"gitId":"huanghao1998"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":685,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":686,"author":{"gitId":"huanghao1998"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":687,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":688,"author":{"gitId":"huanghao1998"},"content":"* 2a. SOCket detects that user inputs an empty field after the tag prefix.","lastModifiedDate":"2023-03-16"},{"lineNumber":689,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":690,"author":{"gitId":"huanghao1998"},"content":"    * 2a1. SOCket removes all tags associated to it.","lastModifiedDate":"2023-03-16"},{"lineNumber":691,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":692,"author":{"gitId":"huanghao1998"},"content":"      Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":693,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":694,"author":{"gitId":"huanghao1998"},"content":"**Use case: UC18 Viewing a person\u0027s detail**","lastModifiedDate":"2023-03-16"},{"lineNumber":695,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":696,"author":{"gitId":"huanghao1998"},"content":"**MSS**","lastModifiedDate":"2023-03-16"},{"lineNumber":697,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":698,"author":{"gitId":"huanghao1998"},"content":"1. User \u003cins\u003efind contact(s) (UC05)\u003c/ins\u003e he/she wishes to view.","lastModifiedDate":"2023-03-16"},{"lineNumber":699,"author":{"gitId":"huanghao1998"},"content":"2. SOCket lists out all the contact associated to the category.","lastModifiedDate":"2023-03-16"},{"lineNumber":700,"author":{"gitId":"huanghao1998"},"content":"3. User wishes to view the first contact in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":701,"author":{"gitId":"huanghao1998"},"content":"4. SOCket displays all the person\u0027s information at the detail display window.","lastModifiedDate":"2023-03-16"},{"lineNumber":702,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":703,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"chia-yh"},"content":"2.  Should work on 64-bit environments.","lastModifiedDate":"2023-02-27"},{"lineNumber":709,"author":{"gitId":"chia-yh"},"content":"3.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-27"},{"lineNumber":710,"author":{"gitId":"chia-yh"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-02-27"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"chia-yh"},"content":"* **GitHub profiles/repositories**: GitHub username e.g. `chia-yh` or repository path e.g. `AY2223S2-CS2103T-T12-4/tp`","lastModifiedDate":"2023-02-27"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cmang12":52,"huanghao1998":149,"chia-yh":120,"-":341,"dillongoh":49,"nus-jeff":60}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"   1. Run the `seedu.socket.Main` and try a few commands.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"chia-yh":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"   e.g. `seedu.socket.commons.StringUtilTest`","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"   e.g. `seedu.socket.storage.StorageManagerTest`","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"   e.g. `seedu.socket.logic.LogicManagerTest`","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"chia-yh":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"SOCket is a **desktop app for NUS Software Engineering Students to manage the contact information of their peers and professors, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, SOCket can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"1. Download the latest `socket.jar` from [here](https://github.com/AY2223S2-CS2103T-T12-4/tp/releases).","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your SOCket.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar socket.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"* `INDEX` must be a positive integer starting from 1 and ending with corresponding number of Person in SOCket. e.g. `1,2,...`","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"Adds a person to SOCket.","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"Format: `add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GITHUB_PROFILE] [l/LANGUAGE] [t/TAG]…​`","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"A person can have any number of languages/tags (including 0)","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 g/johndoe l/Python`","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"cmang12"},"content":"Lists all persons in SOCket or based on language and tag.","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"cmang12"},"content":"Format: `list [l/LANGUAGE] [t/TAG]`","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"cmang12"},"content":"* The search for language or tag is case sensitive. ","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"cmang12"},"content":"* If no language or tag are given, all persons are displayed. ","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"cmang12"},"content":"  * e.g. `list` will list out all persons ","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"cmang12"},"content":"* There can be one or more keywords for each field (language/ tag).","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"cmang12"},"content":"  * e.g. `list l/Python l/Java` will match out all persons whose language contains `Python` AND `Java`","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"cmang12"},"content":"  * e.g. `list l/Python t/friend` will match out all persons whose language contains `Python` AND tag contains `friend`","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"cmang12"},"content":"* Languages and tags given are specific.","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"cmang12"},"content":"  *  e.g. `list t/school` will not match `list t/school friend`","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"cmang12"},"content":"* Persons with field values matching all keyword for that respective field will be returned (i.e. `AND` search). ","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"cmang12"},"content":"  * e.g. `list t/friend l/C++` will return Persons containing tag `friend` AND language `C++`","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"cmang12"},"content":"* Each person is accompanied by an index number in the list","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"cmang12"},"content":"* The list by default is sorted by time added  i.e most recently added person being last in the list","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"Edits an existing person in SOCket.","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GITHUBPROFILE] [l/LANGUAGE] [t/TAG]…​`","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"* Edits the person at the specified `INDEX`.","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"* When editing languages, the existing languages of the person will **not** be removed i.e. adding of languages is cumulative","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is **not** cumulative.","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"chia-yh"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"nus-jeff"},"content":"### Locating persons by keyword(s): `find`","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"nus-jeff"},"content":"Finds persons stored in address book based on the given keyword(s) for the respective fields.","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"nus-jeff"},"content":"Format: `find [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GITHUBPROFILE] [l/LANGUAGE] [t/TAG]`","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"nus-jeff"},"content":"* The search for keyword(s) is case-insensitive. ","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"nus-jeff"},"content":"  * e.g `find n/hans` will match `find n/Hans`","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"nus-jeff"},"content":"  * e.g `find t/cs2103t` will match `find t/CS2103T`","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"nus-jeff"},"content":"* There can be one or more keyword(s) for each field. ","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `find n/Hans Bo` will match all persons whose name contains either `Hans` or `Bo`","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"nus-jeff"},"content":"* The order of the keyword(s) and field(s) does not matter.","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `find n/Hans Bo` will match `find n/Bo Hans`","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `find n/Hans Bo t/cs2103t` will match `find t/cs2103t n/Hans Bo`","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"nus-jeff"},"content":"* Only full words will be matched.","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `t/2103t` will not match `t/cs2103t` ","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"nus-jeff"},"content":"* Persons with field values matching at least one keyword for that respective field will be returned (i.e. `OR` search). ","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `find n/Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `find n/Hans l/Java` will return persons whose name contains `Hans` or language contains `Java` or both","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"nus-jeff"},"content":"  * e.g. `find t/friend` will return persons who have either tag `friend` or `best friend` or both","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"nus-jeff"},"content":"* If no field is specified, zero persons will be returned.","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"nus-jeff"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"nus-jeff"},"content":"* `find n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"chia-yh"},"content":"Deletes the specified person from SOCket.","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"huanghao1998"},"content":"### Removing a person\u0027s field : `remove`","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"huanghao1998"},"content":"Removes the specific field value based on the given input","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"huanghao1998"},"content":"Format: `remove INDEX [p/[PHONE]] [p/[GITHUBPROFILE]] [e/[EMAIL]] [a/[ADDRESS]] [l/[LANGUAGE]] [t/[TAG]]...`","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"huanghao1998"},"content":"* Removes field value of person at the specific `INDEX`.","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"huanghao1998"},"content":"* Removes all the corresponding field value in respect of the `KEYWORD`.","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"huanghao1998"},"content":"  * e.g. `l/Java` will remove `Java` in person’s **Language** field.","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"huanghao1998"},"content":"* Removes the entire field value when that field has no keyword provided.","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"huanghao1998"},"content":"  * e.g. `t/` will remove all the tags associate to the person.","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"huanghao1998"},"content":"### Clearing all persons or tags : `clear`","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"huanghao1998"},"content":"Clears all persons\u0027 entries from the SOCket based on the given tags; if tag is not included, clears all persons in SOCket.","lastModifiedDate":"2023-02-26"},{"lineNumber":187,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":188,"author":{"gitId":"huanghao1998"},"content":"Format: `clear [t/TAG]...`","lastModifiedDate":"2023-02-26"},{"lineNumber":189,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":190,"author":{"gitId":"huanghao1998"},"content":"* Removes all the persons related to the specific tags.","lastModifiedDate":"2023-02-26"},{"lineNumber":191,"author":{"gitId":"huanghao1998"},"content":"* Tag included is **case-insensitive**.","lastModifiedDate":"2023-02-26"},{"lineNumber":192,"author":{"gitId":"huanghao1998"},"content":"  * e.g. `t/CS2103T` is equivalent to `t/cs2103t`.","lastModifiedDate":"2023-02-26"},{"lineNumber":193,"author":{"gitId":"huanghao1998"},"content":"* The tags **must be an existing tag** in SOCket.","lastModifiedDate":"2023-02-26"},{"lineNumber":194,"author":{"gitId":"huanghao1998"},"content":"* If tags are provided, only remove existing tags.","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"huanghao1998"},"content":"  * e.g. `clear t/cs2103t t/cs2103` will only remove the persons associated with `t/cs2103t` if there exists the `cs2103t` tag but not `cs2103` in SOCket.","lastModifiedDate":"2023-02-26"},{"lineNumber":196,"author":{"gitId":"huanghao1998"},"content":"* If no tag is provided, remove all the persons in SOCket.","lastModifiedDate":"2023-02-26"},{"lineNumber":197,"author":{"gitId":"huanghao1998"},"content":"* A confirmation prompt will be asked before removal of persons.","lastModifiedDate":"2023-02-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"dillongoh"},"content":"### Sorting persons (by other fields) : `sort`","lastModifiedDate":"2023-02-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"dillongoh"},"content":"Sorts and displays the persons according to the provided category. Sorts the list of persons by name if no argument is provided.","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":203,"author":{"gitId":"dillongoh"},"content":"Format: `sort [CATEGORY]`","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"dillongoh"},"content":"* If no category is provided, the persons are sorted by their names alphanumerically","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"dillongoh"},"content":"* If a category is provided, the persons are sorted by that category alphanumerically","lastModifiedDate":"2023-02-25"},{"lineNumber":206,"author":{"gitId":"dillongoh"},"content":"  * e.g. sort address will sort the persons by their addresses alphanumerically. Persons without addresses will be at the bottom.","lastModifiedDate":"2023-02-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"chia-yh"},"content":"### Undoing a change : `undo`","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"chia-yh"},"content":"Undoes the last change made to SOCket.","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"chia-yh"},"content":"Format: `undo`","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"chia-yh"},"content":"* A message is shown if no changes were made to SOCket","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"chia-yh"},"content":"### Redoing an undone change : `redo`","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":217,"author":{"gitId":"chia-yh"},"content":"Restores a previously undone change made to SOCket","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"chia-yh"},"content":"Format: `redo`","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"chia-yh"},"content":"* A message is shown if no undone changes exist","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"chia-yh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"chia-yh"},"content":"Changes made to SOCket are **not** saved upon exit.","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"chia-yh"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"huanghao1998"},"content":"### Viewing a person\u0027s detailed infomation: `view`","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"huanghao1998"},"content":"Views a person\u0027s details whose in the filtered list","lastModifiedDate":"2023-03-16"},{"lineNumber":229,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":230,"author":{"gitId":"huanghao1998"},"content":"Format: `view INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":231,"author":{"gitId":"huanghao1998"},"content":"* Views the person\u0027s detailed information at the specified `INDEX`.","lastModifiedDate":"2023-03-16"},{"lineNumber":232,"author":{"gitId":"huanghao1998"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"chia-yh"},"content":"SOCket data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"chia-yh"},"content":"SOCket data is saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":249,"author":{"gitId":"chia-yh"},"content":"If your changes to the data file makes its format invalid, SOCket will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"chia-yh"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SOCket home folder.","lastModifiedDate":"2023-02-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"chia-yh"},"content":"|  Action    | Format, Examples                                                                                                                                                                                                 |","lastModifiedDate":"2023-03-16"},{"lineNumber":268,"author":{"gitId":"chia-yh"},"content":"|------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| ","lastModifiedDate":"2023-03-16"},{"lineNumber":269,"author":{"gitId":"chia-yh"},"content":"| **Add**    | `add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GITHUB_PROFILE] [l/LANGUAGE] [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 g/johndoe l/Python`  |","lastModifiedDate":"2023-03-16"},{"lineNumber":270,"author":{"gitId":"chia-yh"},"content":"| **Clear**  | `clear`                                                                                                                                                                                                          |","lastModifiedDate":"2023-03-16"},{"lineNumber":271,"author":{"gitId":"chia-yh"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                              |","lastModifiedDate":"2023-03-16"},{"lineNumber":272,"author":{"gitId":"chia-yh"},"content":"| **Remove** | `remove INDEX [p/[PHONE]] [p/[GITHUBPROFILE]] [e/[EMAIL]] [a/[ADDRESS]] [l/[LANGUAGE]] [t/[TAG]]…​` \u003cbr\u003e e.g., `remove 1 t/ l/Java e/`                                                                        |","lastModifiedDate":"2023-03-16"},{"lineNumber":273,"author":{"gitId":"chia-yh"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [g/GITHUBPROFILE] [l/LANGUAGE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                    |","lastModifiedDate":"2023-03-16"},{"lineNumber":274,"author":{"gitId":"chia-yh"},"content":"| **Sort**   | `sort [CATEGORY]`\u003cbr\u003e e.g. `sort address`                                                                                                                                                                        |","lastModifiedDate":"2023-03-16"},{"lineNumber":275,"author":{"gitId":"chia-yh"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]…​ [t/TAG]…​`\u003cbr\u003e e.g., `find James Jake t/cs2103t`                                                                                                                           |","lastModifiedDate":"2023-03-16"},{"lineNumber":276,"author":{"gitId":"chia-yh"},"content":"| **List**   | `list [t/tag]`                                                                                                                                                                                                   |","lastModifiedDate":"2023-03-16"},{"lineNumber":277,"author":{"gitId":"chia-yh"},"content":"| **Help**   | `help`                                                                                                                                                                                                           |","lastModifiedDate":"2023-03-16"},{"lineNumber":278,"author":{"gitId":"chia-yh"},"content":"| **Undo**   | `undo`                                                                                                                                                                                                           |","lastModifiedDate":"2023-03-16"},{"lineNumber":279,"author":{"gitId":"chia-yh"},"content":"| **Redo**   | `redo`                                                                                                                                                                                                           |","lastModifiedDate":"2023-03-16"},{"lineNumber":280,"author":{"gitId":"chia-yh"},"content":"| **View**   | `view INDEX`\u003cbr\u003e e.g., `view 1`                                                                                                                                                                                  |","lastModifiedDate":"2023-03-16"},{"lineNumber":281,"author":{"gitId":"chia-yh"},"content":"| **Exit**   | `exit`                                                                                                                                                                                                           |","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"cmang12":15,"huanghao1998":34,"chia-yh":52,"-":151,"dillongoh":7,"nus-jeff":22}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"chia-yh"},"content":"    content: \"SOCket\";","lastModifiedDate":"2023-02-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"chia-yh":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(socket)","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"chia-yh":1,"-":37}},{"path":"docs/team/chia-yh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"layout: page","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"title: Chia Yu Hong\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"### Project: SOCket","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"SOCket is a desktop application for NUS Software Engineering Students to manage the contact information of their peers and professors. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"  * What it does: `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"  * Justification: `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"  * Highlights: `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"  * Credits: *{`to be added soon`}*","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dchia-yh\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"* **Project management**:","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"  * Set up the GitHub [team org](https://github.com/AY2223S2-CS2103T-T12-4)/[repo](https://github.com/AY2223S2-CS2103T-T12-4/tp)","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"  * Set up and helped maintain the [issue tracker](https://github.com/AY2223S2-CS2103T-T12-4/tp/issues)","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"  * Set up GitHub Projects to manage [User Stories](https://github.com/orgs/AY2223S2-CS2103T-T12-4/projects/2)","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"  * Set up milestones for [v1.1](https://github.com/AY2223S2-CS2103T-T12-4/tp/milestone/1), [v1.2](https://github.com/AY2223S2-CS2103T-T12-4/tp/milestone/2), [v1.3](https://github.com/AY2223S2-CS2103T-T12-4/tp/milestone/3), [v1.4](https://github.com/AY2223S2-CS2103T-T12-4/tp/milestone/4)","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"  * Opened issues with tag `type.Task` to manage project tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"  * User Guide:","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    * Added documentation for the features `add` and `edit` [\\#44](https://github.com/AY2223S2-CS2103T-T12-4/tp/pull/44)","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"    * Did minor tweaks to existing documentation [\\#44](https://github.com/AY2223S2-CS2103T-T12-4/tp/pull/44)","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"* **Community**:","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"  * PRs reviewed (with non-trivial review comments): `to be added soon`","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"  * Contributed to forum discussions (examples: `to be added soon`)","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: `to be added soon`)","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"  * Some parts of the history feature I added was adopted by several other classmates (`to be added soon`)","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"* **Tools**:","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"chia-yh":46}},{"path":"docs/team/cmang12.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cmang12"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"cmang12"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"cmang12"},"content":"title: Carmen Ang\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"cmang12"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"cmang12"},"content":"### Project: SOCket","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"SOCket is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cmang12"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"cmang12"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"    * Credits: *{`to be added soon`}*","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dcmang12\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"    * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"        * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"cmang12"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"        * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"cmang12"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"cmang12"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cmang12":40}},{"path":"docs/team/dillongoh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"title: Dillon Goh\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"### Project: SOCket","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"SOCket is a desktop application for NUS Software Engineering Students to manage the contact information of their peers and professors. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    * Credits: *{`to be added soon`}*","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003ddillongoh\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        * Added documentation for the feature sort [\\#49](https://github.com/AY2223S2-CS2103T-T12-4/tp/pull/49)","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        * `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    * PRs reviewed (with non-trivial review comments): `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    * Contributed to forum discussions (examples: `to be added soon`)","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: `to be added soon`)","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    * Some parts of the history feature I added was adopted by several other classmates (`to be added soon`)","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"dillongoh":38}},{"path":"docs/team/huanghao1998.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huanghao1998"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"title: Huang Hao\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"### Project: SOCket","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"SOCket is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"    * What it does: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"    * Justification: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"    * Highlights: `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"    * Credits: *{`to be added soon`}*","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dhuanghao1998\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByAuthors\u0026breakdown\u003dtrue\u0026since\u003d2023-02-17\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"        * `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"        * `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"    * `to be added soon`","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"huanghao1998":36}},{"path":"docs/team/nus-jeff.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nus-jeff"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"title: Jeff Lee\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"### Project: SOCket","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"SOCket is a desktop app for NUS Software Engineering Students to manage the contact information of their peers and professors.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"It manages it by using CLI while still having a GUI, easy on the eyes yet faster management through typing.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"  * What it does: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"  * Justification: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"  * Highlights: `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"  * Credits: *{`to be added soon`}*","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnus-jeff\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"    * Added documentation for the feature `find` [\\#63](https://github.com/AY2223S2-CS2103T-T12-4/tp/pull/63)","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"  * PRs reviewed (with non-trivial review comments): `to be added soon`","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"  * Contributed to team discussions (examples: `to be added soon`)","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: `to be added soon`)","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nus-jeff":37}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"chia-yh"},"content":"Create a `RemarkCommandParser` class in the `seedu.socket.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"chia-yh"},"content":"Create a new `Remark` in `seedu.socket.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"chia-yh"},"content":"Simply add the following to [`seedu.socket.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-16"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"chia-yh":6,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"The `address` field in `Person` is actually an instance of the `seedu.socket.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chia-yh":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.socket.logic.Logic`.","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"A quick look at the `seedu.socket.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"chia-yh":2,"-":299}},{"path":"src/main/java/seedu/socket/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.FileUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chia-yh":3,"-":61}},{"path":"src/main/java/seedu/socket/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":" * This is a workaround for the following error when {@code MainApp} is made the","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":" *     {@code Error: JavaFX runtime components are missing, and are required to run this application}","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":" * The reason is that {@code MainApp} extends {@code Application}. In that case, the","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":" * {@code LauncherHelper} will check for the {@code javafx.graphics} module to be present","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":" * find the {@code javafx.graphics} module, and so the launch is aborted.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":" * By having a separate main class ({@code Main}) that doesn\u0027t extend {@code Application}","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"chia-yh":7,"-":18}},{"path":"src/main/java/seedu/socket/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Config;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Version;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.Logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.LogicManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.JsonSocketStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.SocketStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.Storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.StorageManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.ui.Ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.ui.UiManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    private static HostServices services;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Socket ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        SocketStorage socketStorage \u003d new JsonSocketStorage(userPrefs.getSocketFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"        storage \u003d new StorageManager(socketStorage, userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        services \u003d getHostServices();","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s {@code Socket} and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"     * The data from the sample {@code Socket} will be used instead if {@code storage}\u0027s {@code Socket} is not found,","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"     * or an empty {@code Socket} will be used instead if errors occur when reading {@code storage}\u0027s {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"        Optional\u003cReadOnlySocket\u003e socketOptional;","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"        ReadOnlySocket initialData;","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"            socketOptional \u003d storage.readSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"            if (!socketOptional.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Socket\");","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"            initialData \u003d socketOptional.orElseGet(SampleDataUtil::getSampleSocket);","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Socket\");","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"            initialData \u003d new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Socket\");","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"            initialData \u003d new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"chia-yh"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Socket\");","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"chia-yh"},"content":"        logger.info(\"Starting Socket \" + MainApp.VERSION);","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"chia-yh"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Socket ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"chia-yh"},"content":"     * Opens the given {@code String} URL in a browser.","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"chia-yh"},"content":"    public static void openUrl(String url) {","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"chia-yh"},"content":"        services.showDocument(url);","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":54,"-":140}},{"path":"src/main/java/seedu/socket/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":1,"-":62}},{"path":"src/main/java/seedu/socket/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":1,"-":78}},{"path":"src/main/java/seedu/socket/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    private static final String LOG_FILE \u003d \"socket.log\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":2,"-":110}},{"path":"src/main/java/seedu/socket/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX \u003d \"The project index provided is invalid\";","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":2,"-":12}},{"path":"src/main/java/seedu/socket/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":1,"-":115}},{"path":"src/main/java/seedu/socket/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core.index;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chia-yh":1,"-":53}},{"path":"src/main/java/seedu/socket/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":1,"-":10}},{"path":"src/main/java/seedu/socket/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":1,"-":20}},{"path":"src/main/java/seedu/socket/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.MainApp;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chia-yh":2,"-":40}},{"path":"src/main/java/seedu/socket/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":1,"-":34}},{"path":"src/main/java/seedu/socket/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Config;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chia-yh":3,"-":20}},{"path":"src/main/java/seedu/socket/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":1,"-":82}},{"path":"src/main/java/seedu/socket/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":3,"-":140}},{"path":"src/main/java/seedu/socket/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"     * Returns a {@code List\u003cString\u003e} by splitting the given {@code args} by whitespace.","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"     * Will return an empty List if argument is an empty string.","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"    public static List\u003cString\u003e convertArgumentsIntoList(String args) {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"            return Collections.emptyList();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"        return Arrays.asList(nameKeywords);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":2,"-":66,"nus-jeff":16}},{"path":"src/main/java/seedu/socket/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.CommandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"     * Returns the SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"     * @see seedu.socket.model.Model#getSocket()","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    ReadOnlySocket getSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"    /** Returns a person to be viewed */","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"    ObservableList\u003cPerson\u003e getViewedPerson();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"     * Set the viewed person.","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"    void setViewedPerson(int index);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"     * Returns the user prefs\u0027 SOCket file path.","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"    Path getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"huanghao1998":8,"chia-yh":12,"-":38}},{"path":"src/main/java/seedu/socket/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.CommandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.SocketParser;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.Storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":" * The main {@code LogicManager} of the app.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    private final SocketParser socketParser;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        socketParser \u003d new SocketParser();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        Command command \u003d socketParser.parseCommand(commandText);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"            storage.saveSocket(model.getSocket());","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"    public ReadOnlySocket getSocket() {","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        return model.getSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"    public ObservableList\u003cPerson\u003e getViewedPerson() {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"        return model.getViewedPerson();","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"    public void setViewedPerson(int index) {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"            model.updateViewedPerson(null);","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"            model.updateViewedPerson(getFilteredPersonList().get(index));","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"    public Path getSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"        return model.getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"huanghao1998":13,"chia-yh":21,"-":61}},{"path":"src/main/java/seedu/socket/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":" * Adds a person to SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to SOCket. \"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"            + \"[\" + PREFIX_PROFILE + \"GITHUBPROFILE] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_LANGUAGE + \"LANGUAGE]... \"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"            + PREFIX_PROFILE + \"john-doe \"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"            + PREFIX_LANGUAGE + \"Java \"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"            + PREFIX_LANGUAGE + \"JavaScript \"","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in SOCket\";","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huanghao1998":1,"chia-yh":22,"-":52}},{"path":"src/main/java/seedu/socket/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.model.person.predicate.FindCommandTagPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":" * Clears SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears all persons or persons whose tag \"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"            + \"contain any of the keyword(s) (case-insensitive) in the tag fields.\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TAG + \"friend OR \" + COMMAND_WORD;;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"SOCket has been cleared!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_NOT_SUCCESS \u003d \"No such tag found!\";","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"    private final FindCommandTagPredicate tagPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"    public ClearCommand(FindCommandTagPredicate tagPredicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"        this.tagPredicate \u003d tagPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"        if (tagPredicate.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"            model.setSocket(new Socket());","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"        } else if (!model.hasDeleteMultiplePerson(tagPredicate)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"            throw new CommandException(MESSAGE_NOT_SUCCESS);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"                || (other instanceof ClearCommand // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"                \u0026\u0026 tagPredicate.equals(((ClearCommand) other).tagPredicate)); // state check for predicate","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huanghao1998":28,"chia-yh":7,"-":16}},{"path":"src/main/java/seedu/socket/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":3,"-":17}},{"path":"src/main/java/seedu/socket/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":1,"-":70}},{"path":"src/main/java/seedu/socket/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":" * Deletes a person identified using its displayed index from SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"        if (!model.getViewedPerson().isEmpty()","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"                \u0026\u0026 personToDelete.isSamePerson(model.getViewedPerson().get(0))) {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"            model.updateViewedPerson(null);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huanghao1998":4,"chia-yh":8,"-":46}},{"path":"src/main/java/seedu/socket/logic/commands/DeleteProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":" * Deletes a project identified using its displayed index from SOCket.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"public class DeleteProjectCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    public static final String COMMAND_WORD \u003d \"deletepj\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"            + \": Deletes the project identified by the index number used in the displayed project list.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_DELETE_PROJECT_SUCCESS \u003d \"Deleted Project: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    public DeleteProjectCommand(Index targetIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        Project projectToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        if (!model.getViewedProject().isEmpty()","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 projectToDelete.isSameProject(model.getViewedProject().get(0))) {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"            model.updateViewedProject(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        model.deleteProject(projectToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete));","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"                || (other instanceof DeleteProjectCommand // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteProjectCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"chia-yh":58}},{"path":"src/main/java/seedu/socket/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":" * Edits the details of an existing person in SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"            + \"[\" + PREFIX_PROFILE + \"GITHUBPROFILE] \"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_LANGUAGE + \"LANGUAGE]... \"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in SOCket.\";","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"        GitHubProfile updatedProfile \u003d editPersonDescriptor.getProfile().orElse(personToEdit.getProfile());","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"        Set\u003cLanguage\u003e newLanguages \u003d editPersonDescriptor.getLanguages().orElse(null);","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"        Set\u003cLanguage\u003e updatedLanguages \u003d personToEdit.getLanguages();","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"        if (newLanguages !\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"chia-yh"},"content":"            updatedLanguages \u003d new HashSet\u003c\u003e(updatedLanguages);","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"            updatedLanguages.addAll(newLanguages);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"        return new Person(updatedName, updatedProfile, updatedPhone, updatedEmail, updatedAddress, updatedLanguages,","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"                updatedTags);","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"        private GitHubProfile profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"chia-yh"},"content":"        private Set\u003cLanguage\u003e languages;","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"         * A defensive copy of {@code languages} and {@code tags} is used internally.","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"chia-yh"},"content":"            setProfile(toCopy.profile);","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"            setLanguages(toCopy.languages);","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"chia-yh"},"content":"            return CollectionUtil.isAnyNonNull(name, profile, phone, email, address, languages, tags);","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"chia-yh"},"content":"        public void setProfile(GitHubProfile profile) {","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"chia-yh"},"content":"            this.profile \u003d profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"chia-yh"},"content":"        public Optional\u003cGitHubProfile\u003e getProfile() {","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"            return Optional.ofNullable(profile);","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"chia-yh"},"content":"        /**","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"chia-yh"},"content":"         * Sets {@code languages} to this object\u0027s {@code languages}.","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"chia-yh"},"content":"         * A defensive copy of {@code languages} is used internally.","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"chia-yh"},"content":"         */","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"chia-yh"},"content":"        public void setLanguages(Set\u003cLanguage\u003e languages) {","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"chia-yh"},"content":"            this.languages \u003d (languages !\u003d null) ? new HashSet\u003c\u003e(languages) : null;","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"chia-yh"},"content":"        /**","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"chia-yh"},"content":"         * Returns an unmodifiable language set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"chia-yh"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"chia-yh"},"content":"         * Returns {@code Optional#empty()} if {@code languages} is null.","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"chia-yh"},"content":"         */","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"chia-yh"},"content":"        public Optional\u003cSet\u003cLanguage\u003e\u003e getLanguages() {","lastModifiedDate":"2023-03-05"},{"lineNumber":228,"author":{"gitId":"chia-yh"},"content":"            return (languages !\u003d null) ? Optional.of(Collections.unmodifiableSet(languages)) : Optional.empty();","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":241,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":264,"author":{"gitId":"chia-yh"},"content":"                    \u0026\u0026 getProfile().equals(e.getProfile())","lastModifiedDate":"2023-03-05"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":268,"author":{"gitId":"chia-yh"},"content":"                    \u0026\u0026 getLanguages().equals(e.getLanguages())","lastModifiedDate":"2023-03-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"huanghao1998":1,"chia-yh":66,"-":203,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting SOCket as requested ...\";","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chia-yh":3,"-":16}},{"path":"src/main/java/seedu/socket/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.FindCommandPersonPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":" * Finds \u0026 lists all persons in SOCket whose fields contain any of the argument keyword(s) for the respective fields.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose fields contain any of \"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"            + \"the specified keyword(s) (case-insensitive) in the respective fields \"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"            + \"[\" + PREFIX_PROFILE + \"GITHUBPROFILE] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"            + \"[\" + PREFIX_LANGUAGE + \"LANGUAGE]\"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/alice l/python\";","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"    private final FindCommandPersonPredicate personPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"    public FindCommand(FindCommandPersonPredicate personPredicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        this.personPredicate \u003d personPredicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        model.updateFilteredPersonList(personPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 personPredicate.equals(((FindCommand) other).personPredicate)); // state check for predicate","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chia-yh":13,"-":25,"nus-jeff":19}},{"path":"src/main/java/seedu/socket/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":2,"-":19}},{"path":"src/main/java/seedu/socket/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"cmang12"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandLanguagePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandTagPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":" * Lists all persons in SOCket to the user or based on tag or language.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"    private final ListCommandTagPredicate predicateTag;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"    private final ListCommandLanguagePredicate predicateLang;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"    private final boolean isKeywordPresent;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"     * Initializes a ListCommand with the given predicates and whether a keyword is present.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"cmang12"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"    public ListCommand(ListCommandTagPredicate predicateTag, ListCommandLanguagePredicate predicateLang,","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"                       boolean isKeywordPresent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"        this.predicateTag \u003d predicateTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"        this.predicateLang \u003d predicateLang;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"        this.predicate \u003d predicateTag.and(predicateLang);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"        this.isKeywordPresent \u003d isKeywordPresent;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"cmang12"},"content":"        if (!isKeywordPresent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":44,"author":{"gitId":"cmang12"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"cmang12"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"cmang12"},"content":"            model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"cmang12"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"cmang12"},"content":"                    String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"cmang12"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"cmang12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"cmang12"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"cmang12"},"content":"                || (other instanceof ListCommand // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"cmang12"},"content":"                \u0026\u0026 predicateTag.equals(((ListCommand) other).predicateTag)","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"cmang12"},"content":"                \u0026\u0026 predicateLang.equals(((ListCommand) other).predicateLang)","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"cmang12"},"content":"                \u0026\u0026 (isKeywordPresent \u003d\u003d ((ListCommand) other).isKeywordPresent)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cmang12":31,"chia-yh":6,"-":18,"nus-jeff":5}},{"path":"src/main/java/seedu/socket/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":" * Restores a previously undone SOCket state.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\\n\" + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Restored the previously undone change to SOCket.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_CANNOT_REDO \u003d \"No undone changes to restore.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"        if (!model.canRedoSocket()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"            throw new CommandException(MESSAGE_CANNOT_REDO);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"        model.redoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chia-yh":27}},{"path":"src/main/java/seedu/socket/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":" * Removes the details of an existing person in the SOCket.","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes the field of the person identified \"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_PROFILE + \"[GITHUBPROFILE]] \"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_PHONE + \"[PHONE]] \"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_EMAIL + \"[EMAIL]] \"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_ADDRESS + \"[ADDRESS]] \"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_LANGUAGE + \"[LANGUAGE]]... \"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"            + \"[\" + PREFIX_TAG + \"[TAG]]...\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"            + PREFIX_LANGUAGE + \" \"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_REMOVE_FIELD_SUCCESS \u003d \"Remove field: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_NOT_REMOVE \u003d \"At least one field to remove must be provided.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_REMOVE_FIELD_NOT_MATCH \u003d \"The field provided does not exist in the SOCket.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"    private final Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"    private final RemovePersonDescriptor removePersonDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"     * @param index of the person in the filtered person list to remove","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"     * @param removePersonDescriptor details to remove from the person","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"    public RemoveCommand(Index index, RemovePersonDescriptor removePersonDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"        this.removePersonDescriptor \u003d new RemovePersonDescriptor(removePersonDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"        Person personFieldToRemove \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"huanghao1998"},"content":"        Person removedFieldPerson \u003d createRemoveFieldPerson(personFieldToRemove, removePersonDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"        if (!removePersonDescriptor.isAnyFieldRemoved()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"            throw new CommandException(MESSAGE_REMOVE_FIELD_NOT_MATCH);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"huanghao1998"},"content":"        model.setPerson(personFieldToRemove, removedFieldPerson);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_FIELD_SUCCESS, removedFieldPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"    private static Person createRemoveFieldPerson(Person personToRemoveField,","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"                                                  RemoveCommand.RemovePersonDescriptor removePersonDescriptor) {","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"huanghao1998"},"content":"        assert personToRemoveField !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"huanghao1998"},"content":"        removePersonDescriptor.setPerson(personToRemoveField);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"        Name defaultName \u003d personToRemoveField.getName();","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"        GitHubProfile updatedProfile \u003d removePersonDescriptor.getRemoveProfile()","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"                .orElse(personToRemoveField.getProfile());","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"        Phone updatedPhone \u003d removePersonDescriptor.getRemovePhone()","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"                .orElse(personToRemoveField.getPhone());","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"        Email updatedEmail \u003d removePersonDescriptor.getRemoveEmail()","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"                .orElse(personToRemoveField.getEmail());","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"huanghao1998"},"content":"        Address updatedAddress \u003d removePersonDescriptor.getRemoveAddress()","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"huanghao1998"},"content":"                .orElse(personToRemoveField.getAddress());","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"huanghao1998"},"content":"        Set\u003cLanguage\u003e updatedLanguages \u003d removePersonDescriptor.getRemoveLanguages()","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"huanghao1998"},"content":"                .orElse(personToRemoveField.getLanguages());","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"huanghao1998"},"content":"        Set\u003cTag\u003e updatedTags \u003d removePersonDescriptor.getRemoveTags()","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"huanghao1998"},"content":"                .orElse(personToRemoveField.getTags());","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"huanghao1998"},"content":"        return new Person(defaultName, updatedProfile, updatedPhone,","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"huanghao1998"},"content":"                updatedEmail, updatedAddress, updatedLanguages, updatedTags);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"huanghao1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"huanghao1998"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"huanghao1998"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"huanghao1998"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"huanghao1998"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"huanghao1998"},"content":"        if (!(other instanceof RemoveCommand)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"huanghao1998"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"huanghao1998"},"content":"        // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand e \u003d (RemoveCommand) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"huanghao1998"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"huanghao1998"},"content":"                \u0026\u0026 removePersonDescriptor.equals(e.removePersonDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"huanghao1998"},"content":"     * Stores the details to remove the person with. Each non-empty field value will remove the","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"huanghao1998"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"huanghao1998"},"content":"    public static class RemovePersonDescriptor {","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"huanghao1998"},"content":"        private GitHubProfile profile;","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"huanghao1998"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"huanghao1998"},"content":"        private Email email;","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"huanghao1998"},"content":"        private Address address;","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"huanghao1998"},"content":"        private Set\u003cLanguage\u003e languages;","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"huanghao1998"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"huanghao1998"},"content":"        private Person person;","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"huanghao1998"},"content":"        public RemovePersonDescriptor() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"huanghao1998"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"huanghao1998"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"huanghao1998"},"content":"         * A defensive copy of {@code languages} and {@code tags} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"huanghao1998"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"huanghao1998"},"content":"        public RemovePersonDescriptor(RemoveCommand.RemovePersonDescriptor toCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"huanghao1998"},"content":"            setProfile(toCopy.profile);","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"huanghao1998"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"huanghao1998"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"huanghao1998"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"huanghao1998"},"content":"            setLanguages(toCopy.languages);","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"huanghao1998"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"huanghao1998"},"content":"        public boolean isAnyFieldRemoved() {","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"huanghao1998"},"content":"            return CollectionUtil.isAnyNonNull(profile, phone, email, address, languages, tags);","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"huanghao1998"},"content":"        public void setPerson(Person person) {","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"huanghao1998"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"huanghao1998"},"content":"        public void setProfile(GitHubProfile profile) {","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"huanghao1998"},"content":"            this.profile \u003d profile;","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"huanghao1998"},"content":"        public Optional\u003cGitHubProfile\u003e getRemoveProfile() {","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"huanghao1998"},"content":"            if (profile \u003d\u003d null || person \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"huanghao1998"},"content":"            if (!profile.equals(person.getProfile()) \u0026\u0026 !profile.isEmptyProfile()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"huanghao1998"},"content":"                setProfile(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"huanghao1998"},"content":"            return Optional.of(new GitHubProfile(\"\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"huanghao1998"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"huanghao1998"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"huanghao1998"},"content":"        public Optional\u003cPhone\u003e getRemovePhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"huanghao1998"},"content":"            if (phone \u003d\u003d null || person \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"huanghao1998"},"content":"            if (!phone.equals(person.getPhone()) \u0026\u0026 !phone.isEmptyPhone()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"huanghao1998"},"content":"                setPhone(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"huanghao1998"},"content":"            return Optional.of(new Phone(\"\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"huanghao1998"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"huanghao1998"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"huanghao1998"},"content":"        public Optional\u003cEmail\u003e getRemoveEmail() {","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"huanghao1998"},"content":"            if (email \u003d\u003d null || person \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"huanghao1998"},"content":"            if (!email.equals(person.getEmail()) \u0026\u0026 !email.isEmptyEmail()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"huanghao1998"},"content":"                setEmail(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"huanghao1998"},"content":"            return Optional.of(new Email(\"\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"huanghao1998"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"huanghao1998"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"huanghao1998"},"content":"        public Optional\u003cAddress\u003e getRemoveAddress() {","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"huanghao1998"},"content":"            if (address \u003d\u003d null || person \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"huanghao1998"},"content":"            if (!address.equals(person.getAddress()) \u0026\u0026 !address.isEmptyAddress()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"huanghao1998"},"content":"                setAddress(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"huanghao1998"},"content":"            return Optional.of(new Address(\"\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"huanghao1998"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"huanghao1998"},"content":"         * Sets {@code languages} to this object\u0027s {@code languages}.","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"huanghao1998"},"content":"         * A defensive copy of {@code languages} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"huanghao1998"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"huanghao1998"},"content":"        public void setLanguages(Set\u003cLanguage\u003e languages) {","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"huanghao1998"},"content":"            this.languages \u003d (languages !\u003d null) ? new HashSet\u003c\u003e(languages) : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"huanghao1998"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"huanghao1998"},"content":"         * Returns an unmodifiable language set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"huanghao1998"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"huanghao1998"},"content":"         * Returns {@code Optional#empty()} if {@code languages} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"huanghao1998"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"huanghao1998"},"content":"        public Optional\u003cSet\u003cLanguage\u003e\u003e getRemoveLanguages() {","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"huanghao1998"},"content":"            if (languages \u003d\u003d null || person \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":256,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"huanghao1998"},"content":"            Set\u003cLanguage\u003e newLanguages \u003d new HashSet\u003c\u003e(person.getLanguages());","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"huanghao1998"},"content":"            if (newLanguages.removeAll(languages)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":262,"author":{"gitId":"huanghao1998"},"content":"                return Optional.of(Collections.unmodifiableSet(newLanguages));","lastModifiedDate":"2023-03-09"},{"lineNumber":263,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":264,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":265,"author":{"gitId":"huanghao1998"},"content":"            if (!languages.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":266,"author":{"gitId":"huanghao1998"},"content":"                setLanguages(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":267,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":268,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":269,"author":{"gitId":"huanghao1998"},"content":"            return Optional.of(Collections.unmodifiableSet(languages));","lastModifiedDate":"2023-03-09"},{"lineNumber":270,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":271,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":272,"author":{"gitId":"huanghao1998"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":273,"author":{"gitId":"huanghao1998"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-08"},{"lineNumber":274,"author":{"gitId":"huanghao1998"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":275,"author":{"gitId":"huanghao1998"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"huanghao1998"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"huanghao1998"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"huanghao1998"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"huanghao1998"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-08"},{"lineNumber":282,"author":{"gitId":"huanghao1998"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-08"},{"lineNumber":283,"author":{"gitId":"huanghao1998"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-08"},{"lineNumber":284,"author":{"gitId":"huanghao1998"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":285,"author":{"gitId":"huanghao1998"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getRemoveTags() {","lastModifiedDate":"2023-03-08"},{"lineNumber":286,"author":{"gitId":"huanghao1998"},"content":"            if (tags \u003d\u003d null || person \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":287,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":288,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":289,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":290,"author":{"gitId":"huanghao1998"},"content":"            Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(person.getTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":291,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"huanghao1998"},"content":"            if (newTags.removeAll(tags)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":293,"author":{"gitId":"huanghao1998"},"content":"                return Optional.of(Collections.unmodifiableSet(newTags));","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":295,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":296,"author":{"gitId":"huanghao1998"},"content":"            if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":297,"author":{"gitId":"huanghao1998"},"content":"                setTags(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":298,"author":{"gitId":"huanghao1998"},"content":"                return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":299,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":300,"author":{"gitId":"huanghao1998"},"content":"            return Optional.of(Collections.unmodifiableSet(tags));","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":302,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":303,"author":{"gitId":"huanghao1998"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":304,"author":{"gitId":"huanghao1998"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":305,"author":{"gitId":"huanghao1998"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":306,"author":{"gitId":"huanghao1998"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":307,"author":{"gitId":"huanghao1998"},"content":"                return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":308,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":309,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":310,"author":{"gitId":"huanghao1998"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":311,"author":{"gitId":"huanghao1998"},"content":"            if (!(other instanceof RemoveCommand.RemovePersonDescriptor)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":312,"author":{"gitId":"huanghao1998"},"content":"                return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":313,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":314,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"huanghao1998"},"content":"            // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"huanghao1998"},"content":"            RemoveCommand.RemovePersonDescriptor e \u003d (RemoveCommand.RemovePersonDescriptor) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"huanghao1998"},"content":"            return getRemoveProfile().equals(e.getRemoveProfile())","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"huanghao1998"},"content":"                    \u0026\u0026 getRemovePhone().equals(e.getRemovePhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"huanghao1998"},"content":"                    \u0026\u0026 getRemoveEmail().equals(e.getRemoveEmail())","lastModifiedDate":"2023-03-08"},{"lineNumber":321,"author":{"gitId":"huanghao1998"},"content":"                    \u0026\u0026 getRemoveAddress().equals(e.getRemoveAddress())","lastModifiedDate":"2023-03-08"},{"lineNumber":322,"author":{"gitId":"huanghao1998"},"content":"                    \u0026\u0026 getRemoveLanguages().equals(e.getRemoveLanguages())","lastModifiedDate":"2023-03-08"},{"lineNumber":323,"author":{"gitId":"huanghao1998"},"content":"                    \u0026\u0026 getRemoveTags().equals(e.getRemoveTags());","lastModifiedDate":"2023-03-08"},{"lineNumber":324,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":325,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":326,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"huanghao1998":304,"chia-yh":20,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":" * Sorts all persons in SOCket and lists them to the user.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted by: \";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"        + \": Sorts the list of contacts by the given category. \"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        + \"Sorts by name if none is given.\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        + \"Parameters: [KEYWORD]\\n\"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        + \"Example: \\\"\" + COMMAND_WORD + \" address\\\" will sort the list by address.\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    private final String category;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public SortCommand(String category) {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        this.category \u003d category;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        model.sortPersonList(category);","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        return new CommandResult(MESSAGE_SUCCESS + category);","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"            || (other instanceof SortCommand // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 category.equals(((SortCommand) other).category)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"chia-yh":4,"dillongoh":36}},{"path":"src/main/java/seedu/socket/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":" * Restores the previous SOCket state.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \"\\n\" + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Reverted the previous change to SOCket.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_CANNOT_UNDO \u003d \"No changes to revert.\";","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"        if (!model.canUndoSocket()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"            throw new CommandException(MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"        model.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chia-yh":27}},{"path":"src/main/java/seedu/socket/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":" * Views the details of a person in the filtered list.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"            + \": Views the person identified by the index number used in the contact list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Viewed Person: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"    private final Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"     * @param index of the person in the filtered person list to view","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"    public ViewCommand(Index index) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"        Person viewedPerson \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"        model.updateViewedPerson(viewedPerson);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, viewedPerson));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"                \u0026\u0026 index.equals(((ViewCommand) other).index)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"huanghao1998":48,"chia-yh":6}},{"path":"src/main/java/seedu/socket/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chia-yh":2,"-":17}},{"path":"src/main/java/seedu/socket/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.AddCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PROFILE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"                        PREFIX_ADDRESS, PREFIX_LANGUAGE, PREFIX_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        GitHubProfile profile \u003d ParserUtil.parseProfile(argMultimap.getValue(PREFIX_PROFILE).orElse(\"\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        Set\u003cLanguage\u003e languageList \u003d ParserUtil.parseLanguages(argMultimap.getAllValues(PREFIX_LANGUAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        Person person \u003d new Person(name, profile, phone, email, address, languageList, tagList);","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"chia-yh":28,"-":38,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"chia-yh":1,"-":59}},{"path":"src/main/java/seedu/socket/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chia-yh":1,"-":147}},{"path":"src/main/java/seedu/socket/logic/parser/ClearCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huanghao1998"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.model.person.predicate.FindCommandTagPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":" * Parses the clear command entered by user","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"public class ClearCommandParser implements Parser\u003cClearCommand\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"     * Parses the given {@code String} of arguments in the context of the ClearCommand","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"     * and returns an ClearCommand object for execution.","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    public ClearCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_TAG);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ClearCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"        List\u003cString\u003e tagArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"                argMultimap.getValue(PREFIX_TAG).orElse(\"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"        return new ClearCommand(new FindCommandTagPredicate(tagArguments));","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"huanghao1998":34}},{"path":"src/main/java/seedu/socket/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"    public static final Prefix PREFIX_PROFILE \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    public static final Prefix PREFIX_LANGUAGE \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chia-yh":3,"-":14}},{"path":"src/main/java/seedu/socket/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chia-yh":5,"-":24}},{"path":"src/main/java/seedu/socket/logic/parser/DeleteProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"public class DeleteProjectCommandParser implements Parser\u003cDeleteProjectCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteProjectCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"     * and returns a DeleteProjectCommand object for execution.","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    public DeleteProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"            return new DeleteProjectCommand(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"chia-yh":29}},{"path":"src/main/java/seedu/socket/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PROFILE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"                        PREFIX_ADDRESS, PREFIX_LANGUAGE, PREFIX_TAG);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        if (argMultimap.getValue(PREFIX_PROFILE).isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"            String updatedProfile \u003d argMultimap.getValue(PREFIX_PROFILE).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"            if (!updatedProfile.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"                editPersonDescriptor.setProfile(ParserUtil.parseProfile(updatedProfile));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"                throw new ParseException(GitHubProfile.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"            String updatedPhone \u003d argMultimap.getValue(PREFIX_PHONE).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"            if (!updatedPhone.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"                editPersonDescriptor.setPhone(ParserUtil.parsePhone(updatedPhone));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"                throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"            String updatedEmail \u003d argMultimap.getValue(PREFIX_EMAIL).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"            if (!updatedEmail.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"                editPersonDescriptor.setEmail(ParserUtil.parseEmail(updatedEmail));","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"                throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"            String updatedAddress \u003d argMultimap.getValue(PREFIX_ADDRESS).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"            if (!updatedAddress.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"                editPersonDescriptor.setAddress(ParserUtil.parseAddress(updatedAddress));","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"                throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"        parseLanguagesForEdit(argMultimap.getAllValues(PREFIX_LANGUAGE)).ifPresent(editPersonDescriptor::setLanguages);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"     * Parses {@code Collection\u003cString\u003e languages} into a {@code Set\u003cLanguage\u003e} if {@code languages} is non-empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"     * If {@code languages} contain only one element which is an empty string, it will be return","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"     * {@code Optional.empty()}.","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"    private Optional\u003cSet\u003cLanguage\u003e\u003e parseLanguagesForEdit(Collection\u003cString\u003e languages) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"        assert languages !\u003d null;","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"        if (languages.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"        Collection\u003cString\u003e languageSet \u003d languages.size() \u003d\u003d 1 \u0026\u0026 languages.contains(\"\")","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"chia-yh"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"                : languages;","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"        if (languageSet.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"        return Optional.of(ParserUtil.parseLanguages(languageSet));","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chia-yh":66,"-":65,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.FindCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.FindCommandPersonPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PROFILE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"                        PREFIX_ADDRESS, PREFIX_LANGUAGE, PREFIX_TAG);","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        // ensure no text before first valid prefix","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e nameArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"                argMultimap.getValue(PREFIX_NAME).orElse(\"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e profileArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"                argMultimap.getValue(PREFIX_PROFILE).orElse(\"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e phoneArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"                argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e emailArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"                argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e addressArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e languageArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                argMultimap.getValue(PREFIX_LANGUAGE).orElse(\"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e tagArguments \u003d StringUtil.convertArgumentsIntoList(","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                argMultimap.getValue(PREFIX_TAG).orElse(\"\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate personPredicate \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"                new FindCommandPersonPredicate(nameArguments,","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"                profileArguments,","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                phoneArguments,","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                emailArguments,","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"                addressArguments,","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"                languageArguments,","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"                tagArguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"        return new FindCommand(personPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"chia-yh":12,"-":21,"nus-jeff":33}},{"path":"src/main/java/seedu/socket/logic/parser/ListCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"cmang12"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"cmang12"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ListCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandLanguagePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandTagPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":" * Parses the list command entered by user","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"public class ListCommandParser implements Parser\u003cListCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"     * Parses the given {@code String} of arguments in the context of the ListCommand","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"     * and returns an ListCommand object for execution.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"    public ListCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"        boolean areKeywordsPresent \u003d true;","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_LANGUAGE, PREFIX_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"                \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_LANGUAGE))) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"cmang12"},"content":"            areKeywordsPresent \u003d false;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e langList \u003d ParserUtil.parseLanguages(argMultimap.getAllValues(PREFIX_LANGUAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"        return new ListCommand(new ListCommandTagPredicate(tagList),","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"                new ListCommandLanguagePredicate(langList), areKeywordsPresent);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"cmang12"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"cmang12"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"cmang12"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"cmang12"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"cmang12"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"cmang12"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"cmang12":38,"chia-yh":5,"nus-jeff":6}},{"path":"src/main/java/seedu/socket/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chia-yh":3,"-":13}},{"path":"src/main/java/seedu/socket/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"     * Parses a {@code String profile} into a {@code GitHubProfile}.","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"     * @throws ParseException if the given {@code profile} is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"    public static GitHubProfile parseProfile(String profile) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(profile);","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        String trimmedProfile \u003d profile.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        if (!GitHubProfile.isValidProfile(trimmedProfile)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"            throw new ParseException(GitHubProfile.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        return new GitHubProfile(trimmedProfile);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"     * Parses a {@code String language} into a {@code Language}.","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"     * @throws ParseException if the given {@code language} is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"chia-yh"},"content":"    public static Language parseLanguage(String language) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(language);","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"        String trimmedLanguage \u003d language.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"chia-yh"},"content":"        if (!Language.isValidLanguageName(trimmedLanguage)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"chia-yh"},"content":"            throw new ParseException(Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"chia-yh"},"content":"        return new Language(trimmedLanguage);","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"chia-yh"},"content":"     * Parses {@code Collection\u003cString\u003e languages} into a {@code Set\u003cLanguage\u003e}.","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"chia-yh"},"content":"    public static Set\u003cLanguage\u003e parseLanguages(Collection\u003cString\u003e languages) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(languages);","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"chia-yh"},"content":"        final Set\u003cLanguage\u003e languageSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"chia-yh"},"content":"        for (String languageName : languages) {","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"chia-yh"},"content":"            languageSet.add(parseLanguage(languageName));","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"        return languageSet;","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"chia-yh":51,"-":115,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chia-yh":1,"-":38}},{"path":"src/main/java/seedu/socket/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":" * Parses input arguments and creates a new RemoveCommand object","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"public class RemoveCommandParser implements Parser\u003cRemoveCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"     * and returns an RemoveCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"    public RemoveCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PROFILE, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"                        PREFIX_ADDRESS, PREFIX_LANGUAGE, PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"        Index index;","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand.RemovePersonDescriptor removePersonDescriptor \u003d new RemoveCommand.RemovePersonDescriptor();","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"        if (argMultimap.getValue(PREFIX_PROFILE).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"            removePersonDescriptor.setProfile(ParserUtil.parseProfile(argMultimap.getValue(PREFIX_PROFILE).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"            removePersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"            removePersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"            removePersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"        parseLanguagesForRemove(argMultimap.getAllValues(PREFIX_LANGUAGE))","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"                .ifPresent(removePersonDescriptor::setLanguages);","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"        parseTagsForRemove(argMultimap.getAllValues(PREFIX_TAG))","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"                .ifPresent(removePersonDescriptor::setTags);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"        if (!removePersonDescriptor.isAnyFieldRemoved()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"            throw new ParseException(RemoveCommand.MESSAGE_NOT_REMOVE);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"        return new RemoveCommand(index, removePersonDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"     * Parses {@code Collection\u003cString\u003e languages} into a {@code Set\u003cLanguage\u003e} if {@code languages} is non-empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"     * If {@code languages} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"     * {@code Set\u003cLanguage\u003e} containing zero languages.","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"    private Optional\u003cSet\u003cLanguage\u003e\u003e parseLanguagesForRemove(Collection\u003cString\u003e languages) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"        assert languages !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"        if (languages.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"huanghao1998"},"content":"        Collection\u003cString\u003e languageSet \u003d languages.size() \u003d\u003d 1 \u0026\u0026 languages.contains(\"\")","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"huanghao1998"},"content":"                ? Collections.emptySet()","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"                : languages;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"        return Optional.of(ParserUtil.parseLanguages(languageSet));","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"huanghao1998"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForRemove(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"huanghao1998"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"huanghao1998"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"huanghao1998":91,"chia-yh":11,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/logic/parser/SocketParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.AddCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.FindCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ListCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.SortCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"public class SocketParser {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"            return new ClearCommandParser().parse(arguments);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"cmang12"},"content":"            return new ListCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"            return new SortCommandParser().parse(arguments);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"            return new RemoveCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"        case DeleteProjectCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"            return new DeleteProjectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cmang12":1,"huanghao1998":7,"chia-yh":29,"-":61,"dillongoh":2}},{"path":"src/main/java/seedu/socket/logic/parser/SortCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORIES;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.SortCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":" * Parses input arguments and creates a new SortCommand object","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"public class SortCommandParser implements Parser\u003cSortCommand\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"     * Parses the given {@code String} of arguments in the context of the SortCommand","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"     * and returns a SortCommand object for execution.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    public SortCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"            return new SortCommand(CATEGORY_NAME);","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        } else if (CATEGORIES.contains(trimmedArgs)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"            return new SortCommand(trimmedArgs);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"chia-yh":6,"dillongoh":26}},{"path":"src/main/java/seedu/socket/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"huanghao1998":22,"chia-yh":5}},{"path":"src/main/java/seedu/socket/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"chia-yh":2,"-":15}},{"path":"src/main/java/seedu/socket/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    Predicate\u003cProject\u003e PREDICATE_SHOW_ALL_PROJECTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"     * Returns the user prefs\u0027 {@code Socket} file path.","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"    Path getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"     * Sets the user prefs\u0027 {@code Socket} file path.","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"    void setSocketFilePath(Path socketFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"     * Replaces {@code Socket} data with the data in {@code socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    void setSocket(ReadOnlySocket socket);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"    /** Returns the {@code Socket} */","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    ReadOnlySocket getSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"     * The person must exist in the {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"     * Deletes persons by the given {@code predicate}.","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"    boolean hasDeleteMultiplePerson(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"     * {@code person} must not already exist in the {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"     * {@code target} must exist in the {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"     * {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"    /** Returns a person to be viewed */","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"    ObservableList\u003cPerson\u003e getViewedPerson();","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"     * Updates the person to be viewed in filtered person list by the given {@code predicate}.","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"    void updateViewedPerson(Person person);","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"dillongoh"},"content":"     * Sorts the list of people by given {@code category}","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"    void sortPersonList(String category);","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"     * Returns true if a project with the same identity as {@code project} exists in the {@code Socket}.","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"    boolean hasProject(Project project);","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"     * Deletes the given project.","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"chia-yh"},"content":"     * The project must exist in the {@code Socket}.","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"    void deleteProject(Project target);","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"chia-yh"},"content":"     * Adds the given project.","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"chia-yh"},"content":"     * {@code project} must not already exist in the {@code Socket}.","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"chia-yh"},"content":"    void addProject(Project project);","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"chia-yh"},"content":"     * Replaces the given project {@code target} with {@code editedProject}.","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"chia-yh"},"content":"     * {@code target} must exist in the {@code Socket}.","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"chia-yh"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project in the","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"     * {@code Socket}.","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"chia-yh"},"content":"    void setProject(Project target, Project editedProject);","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"chia-yh"},"content":"    /** Returns an unmodifiable view of the filtered project list */","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectList();","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"    /** Returns a project to be viewed */","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"chia-yh"},"content":"    ObservableList\u003cProject\u003e getViewedProject();","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"chia-yh"},"content":"     * Updates the filter of the filtered project list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"chia-yh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"chia-yh"},"content":"    void updateFilteredProjectList(Predicate\u003cProject\u003e predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"chia-yh"},"content":"     * Updates the project to be viewed in filtered person list by the given {@code predicate}.","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"chia-yh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"    void updateViewedProject(Project project);","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"chia-yh"},"content":"     * Sorts the list of projects by given {@code category}","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"chia-yh"},"content":"    void sortProjectList(String category);","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"chia-yh"},"content":"     * Saves the current {@code Socket} state.","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"chia-yh"},"content":"    void commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"chia-yh"},"content":"     * Restores the previous {@code Socket} state.","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"chia-yh"},"content":"    void undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"chia-yh"},"content":"     * Restores a previously undone {@code Socket} state.","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"chia-yh"},"content":"    void redoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"chia-yh"},"content":"     * Checks if there are any previous {@code Socket} states to restore.","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"chia-yh"},"content":"    boolean canUndoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"chia-yh"},"content":"     * Checks if there are any undone {@code Socket} states to restore.","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"chia-yh"},"content":"    boolean canRedoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"huanghao1998":15,"chia-yh":94,"-":71,"dillongoh":5}},{"path":"src/main/java/seedu/socket/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":" * Represents the in-memory model of the {@code Socket} data.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    private final Socket socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    private final VersionedSocket versionedSocket;","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    private FilteredList\u003cProject\u003e filteredProjects;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"    private FilteredList\u003cPerson\u003e viewedPerson;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    private FilteredList\u003cProject\u003e viewedProject;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"     * Initializes a {@code ModelManager} with the given {@code ReadOnlySocket} socket","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"     * and {@code ReadOnlyUserPrefs} userPrefs.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"    public ModelManager(ReadOnlySocket socket, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        requireAllNonNull(socket, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        logger.fine(\"Initializing with address book: \" + socket + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        this.socket \u003d new Socket(socket);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        this.versionedSocket \u003d new VersionedSocket(this.socket);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.socket.getPersonList());","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        viewedPerson \u003d new FilteredList\u003c\u003e(this.socket.getPersonList());","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"        viewedPerson.setPredicate(x -\u003e false);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        filteredProjects \u003d new FilteredList\u003c\u003e(this.socket.getProjectList());","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        viewedProject \u003d new FilteredList\u003c\u003e(this.socket.getProjectList());","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        viewedProject.setPredicate(x -\u003e false);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        this(new Socket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"    public Path getSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"        return userPrefs.getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"    public void setSocketFilePath(Path socketFilePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(socketFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"        userPrefs.setSocketFilePath(socketFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Socket \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"    public void setSocket(ReadOnlySocket socket) {","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"        this.socket.resetData(socket);","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"    public ReadOnlySocket getSocket() {","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"        return socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"        return socket.hasPerson(person);","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"        socket.removePerson(target);","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"huanghao1998"},"content":"    public boolean hasDeleteMultiplePerson(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"huanghao1998"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"huanghao1998"},"content":"        return socket.removeAllPerson(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"        socket.addPerson(person);","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":131,"author":{"gitId":"chia-yh"},"content":"        socket.setPerson(target, editedPerson);","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"chia-yh"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"chia-yh"},"content":"        return socket.hasProject(project);","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"    public void deleteProject(Project target) {","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"chia-yh"},"content":"        socket.removeProject(target);","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"chia-yh"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"chia-yh"},"content":"        socket.addProject(project);","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"chia-yh"},"content":"        updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"chia-yh"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"chia-yh"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"        socket.setProject(target, editedProject);","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"chia-yh"},"content":"    public void commitSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"chia-yh"},"content":"        versionedSocket.commit(socket);","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"chia-yh"},"content":"    public void undoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"chia-yh"},"content":"        versionedSocket.undo();","lastModifiedDate":"2023-03-11"},{"lineNumber":166,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":168,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"chia-yh"},"content":"    public void redoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":170,"author":{"gitId":"chia-yh"},"content":"        versionedSocket.redo();","lastModifiedDate":"2023-03-11"},{"lineNumber":171,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":172,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":173,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":174,"author":{"gitId":"chia-yh"},"content":"    public boolean canUndoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":175,"author":{"gitId":"chia-yh"},"content":"        return versionedSocket.canUndoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":177,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":178,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"chia-yh"},"content":"    public boolean canRedoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":180,"author":{"gitId":"chia-yh"},"content":"        return versionedSocket.canRedoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":181,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":182,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"     * {@code versionedSocket}","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":200,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"huanghao1998"},"content":"    public ObservableList\u003cPerson\u003e getViewedPerson() {","lastModifiedDate":"2023-03-15"},{"lineNumber":202,"author":{"gitId":"huanghao1998"},"content":"        return viewedPerson;","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"huanghao1998"},"content":"    public void updateViewedPerson(Person person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":207,"author":{"gitId":"huanghao1998"},"content":"        viewedPerson.setPredicate(x -\u003e x.isSamePerson(person));","lastModifiedDate":"2023-03-15"},{"lineNumber":208,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":209,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"dillongoh"},"content":"    public void sortPersonList(String category) {","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"chia-yh"},"content":"        socket.sort(category);","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"dillongoh"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"chia-yh"},"content":"     * Returns an unmodifiable view of the list of {@code Project} backed by the internal list of","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"chia-yh"},"content":"     * {@code versionedSocket}","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"chia-yh"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"chia-yh"},"content":"        return filteredProjects;","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"chia-yh"},"content":"    public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"chia-yh"},"content":"        filteredProjects.setPredicate(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":232,"author":{"gitId":"chia-yh"},"content":"    public ObservableList\u003cProject\u003e getViewedProject() {","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"chia-yh"},"content":"        return viewedProject;","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":236,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":237,"author":{"gitId":"chia-yh"},"content":"    public void updateViewedProject(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"chia-yh"},"content":"        viewedProject.setPredicate(x -\u003e x.isSameProject(project));","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":240,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"chia-yh"},"content":"    public void sortProjectList(String category) {","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"chia-yh"},"content":"        // TODO modify to sort project","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"chia-yh"},"content":"        // socket.sort(category);","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"chia-yh"},"content":"        updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"chia-yh"},"content":"        return socket.equals(other.socket)","lastModifiedDate":"2023-03-16"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":264,"author":{"gitId":"huanghao1998"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 viewedPerson.equals(other.viewedPerson)","lastModifiedDate":"2023-03-20"},{"lineNumber":266,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 filteredProjects.equals(other.filteredProjects)","lastModifiedDate":"2023-03-20"},{"lineNumber":267,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 viewedProject.equals(other.viewedProject);","lastModifiedDate":"2023-03-20"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"huanghao1998":20,"chia-yh":126,"-":118,"dillongoh":6}},{"path":"src/main/java/seedu/socket/model/ReadOnlySocket.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":" * Unmodifiable view of a {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"public interface ReadOnlySocket {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"     * Returns an unmodifiable view of the projects list.","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"     * This list will not contain any duplicate projects.","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    ObservableList\u003cProject\u003e getProjectList();","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":10,"-":13}},{"path":"src/main/java/seedu/socket/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    Path getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chia-yh":3,"-":13}},{"path":"src/main/java/seedu/socket/model/Socket.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.UniquePersonList;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.UniqueProjectList;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":" * Wraps all data at the SOCket level.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":" * Duplicates are not allowed (by {@link Person#isSamePerson} comparison)","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"public class Socket implements ReadOnlySocket {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    private final UniqueProjectList projects;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        projects \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"    public Socket() {}","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"     * Creates a {@code Socket} using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    public Socket(ReadOnlySocket toBeCopied) {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"     * Replaces the contents of the project list with {@code projects}.","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        this.projects.setProjects(projects);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"     * Resets the existing data of this {@code Socket} with {@code newData}.","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    public void resetData(ReadOnlySocket newData) {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        setProjects(newData.getProjectList());","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"     * Returns true if a person with the same identity as {@code person} exists in {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"     * Returns person reference with the same identity as {@code person} in {@code persons} in (@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"    public Person getPerson(Person person) {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        return persons.getPerson(person);","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"     * Adds a person to {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"     * The person must not already exist in {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"     * {@code target} must exist in {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"     * Removes {@code key} from this {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"     * {@code key} must exist in {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"        // remove key references","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"chia-yh"},"content":"        ArrayList\u003cProject\u003e projectsToEdit \u003d new ArrayList\u003c\u003e(); // store projects to edit to avoid concurrent update","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"chia-yh"},"content":"        for (Project project : projects) {","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"            if (project.getMembers().contains(key)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"                projectsToEdit.add(project);","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"chia-yh"},"content":"        while (!projectsToEdit.isEmpty()) { // update matching projects in projects","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"chia-yh"},"content":"            Project projectToUpdate \u003d projectsToEdit.remove(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"chia-yh"},"content":"            Set\u003cPerson\u003e updatedMembers \u003d new HashSet\u003c\u003e(projectToUpdate.getMembers());","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"            updatedMembers.remove(key);","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"chia-yh"},"content":"            Project updatedProject \u003d new Project(projectToUpdate.getName(), projectToUpdate.getRepoHost(),","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"cmang12"},"content":"                    projectToUpdate.getRepoName(), projectToUpdate.getDeadline(),","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"cmang12"},"content":"                    projectToUpdate.getMeeting(), updatedMembers);","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"chia-yh"},"content":"            setProject(projectToUpdate, updatedProject);","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"huanghao1998"},"content":"     * Removes all persons by the given {@code predicate}.","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"huanghao1998"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"huanghao1998"},"content":"    public boolean removeAllPerson(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"huanghao1998"},"content":"        return persons.removeAll(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"huanghao1998"},"content":"    //// project-level operations","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"chia-yh"},"content":"     * Returns true if a project with the same identity as {@code project} exists in {@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"chia-yh"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(project);","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"chia-yh"},"content":"        return projects.contains(project);","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":153,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"     * Adds a project to {@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"chia-yh"},"content":"     * The project must not already exist in {@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"chia-yh"},"content":"    public void addProject(Project p) {","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"chia-yh"},"content":"        projects.add(p);","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"     * Replaces the given project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"chia-yh"},"content":"     * {@code target} must exist in {@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"chia-yh"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project in {@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"chia-yh"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(editedProject);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"chia-yh"},"content":"        projects.setProject(target, editedProject);","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"chia-yh"},"content":"     * Removes {@code key} from this {@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"chia-yh"},"content":"     * {@code key} must exist in {@code Socket}.","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"chia-yh"},"content":"    public void removeProject(Project key) {","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"chia-yh"},"content":"        projects.remove(key);","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"chia-yh"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons | \"","lastModifiedDate":"2023-03-19"},{"lineNumber":186,"author":{"gitId":"chia-yh"},"content":"                + projects.asUnmodifiableObservableList().size() + \" projects\";","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":195,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"chia-yh"},"content":"    public ObservableList\u003cProject\u003e getProjectList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"chia-yh"},"content":"        return projects.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"chia-yh"},"content":"                || (other instanceof Socket // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 persons.equals(((Socket) other).persons)","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 projects.equals(((Socket) other).projects));","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":212,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"dillongoh"},"content":"    public void sort(String category) {","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"dillongoh"},"content":"        persons.sort(category);","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cmang12":2,"huanghao1998":12,"chia-yh":99,"-":99,"dillongoh":4}},{"path":"src/main/java/seedu/socket/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"    private Path socketFilePath \u003d Paths.get(\"data\" , \"socket.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        setSocketFilePath(newUserPrefs.getSocketFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"    public Path getSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"        return socketFilePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    public void setSocketFilePath(Path socketFilePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(socketFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"        this.socketFilePath \u003d socketFilePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 socketFilePath.equals(o.socketFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        return Objects.hash(guiSettings, socketFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"        sb.append(\"\\nLocal data file location : \" + socketFilePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":12,"-":75}},{"path":"src/main/java/seedu/socket/model/VersionedSocket.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":" * Facilitates undo/redo mechanism by maintaining {@code Socket} states.","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"public class VersionedSocket extends Socket {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"    /** The initial value of currentStatePointer. */","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"    private static final int INIT_POINTER \u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"    /** The {@code ArrayList\u003cReadOnlySocket\u003e} in which the {@code Socket} states are stored. */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    private final ArrayList\u003cReadOnlySocket\u003e socketStateList;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    /** The pointer to the current {@code Socket} state. */","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    private int currentStatePointer;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    /** The associated {@code Socket} instance. */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    private final Socket socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"     * Constructs a {@code VersionedSocket} with the given {@code Socket} and initializes the","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"     * {@code currenStatePointer}.","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"     * @param initialSocket {@code Socket} to initialize the {@code VersionedSocket} with.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    public VersionedSocket(Socket initialSocket) {","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"        socket \u003d initialSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"        socketStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        socketStateList.add(new Socket(initialSocket));","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"        currentStatePointer \u003d INIT_POINTER;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"     * Saves the current {@code Socket} state.","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    public void commit(Socket socket) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        assert currentStatePointer \u003e\u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        if (currentStatePointer !\u003d (socketStateList.size() - 1)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"            socketStateList.subList(currentStatePointer + 1, socketStateList.size()).clear();","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        socketStateList.add(new Socket(socket));","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        currentStatePointer++;","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"     * Restores the previous {@code Socket} state.","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"    public void undo() {","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        --currentStatePointer;","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        socket.resetData(socketStateList.get(currentStatePointer));","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"     * Restores a previously undone {@code Socket} state.","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"    public void redo() {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"        ++currentStatePointer;","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        socket.resetData(socketStateList.get(currentStatePointer));","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"     * Returns {@code false} if {@code currentStatePointer} is at index 0, {@code true} otherwise.","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"     * @return {@code false} if {@code currentStatePointer} is at index 0, {@code true} otherwise.","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"    public boolean canUndoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        return currentStatePointer !\u003d 0;","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"     * Returns {@code false} if {@code currentStatePointer} is at index {@code socketStateList.size() - 1},","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"     * {@code true} otherwise.","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"     * @return {@code false} if {@code currentStatePointer} is at index {@code socketStateList.size() - 1},","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"     *     {@code true} otherwise.","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"    public boolean canRedoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"        return currentStatePointer !\u003d (socketStateList.size() - 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chia-yh":76}},{"path":"src/main/java/seedu/socket/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" * Represents a Person\u0027s address in SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"            \"Addresses can take any values, and it should not be a blank string\";","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input. May be empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*|^$\";","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"     * Returns true if address is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"     * @return {@code true} if address is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"    public boolean isEmptyAddress() {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"        return value.equals(\"\");","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huanghao1998":9,"chia-yh":8,"-":49}},{"path":"src/main/java/seedu/socket/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" * Represents a Person\u0027s email in SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"            + \"characters\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"            + \"separated by periods\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any\";","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"     * {@value MESSAGE_CONSTRAINTS}. May be empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX + \"|^$\";","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"     * Returns true if Email is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"     * @return {@code true} if Email is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"    public boolean isEmptyEmail() {","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"        return value.equals(\"\");","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huanghao1998":9,"chia-yh":10,"-":63}},{"path":"src/main/java/seedu/socket/model/person/GitHubProfile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" * Represents a Person\u0027s GitHub profile in SOCket.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProfile(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"public class GitHubProfile {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"    /** As specified in form validation on \u003ca href\u003d\"https://github.com/join\"\u003eJoin GitHub\u003c/a\u003e */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"            \"Username may only contain alphanumeric characters or single hyphens, cannot begin or end with a \"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"            + \"hyphen, and may not exceed 39 characters\";","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"     * May only contain alphanumeric characters or single hyphens, and cannot begin or end with a hyphen. Maximum 39","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"     * characters. May be empty","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.{1,39}$)(?!-)(?!.*--)[-a-zA-Z0-9]+(?\u003c!-)$|^$\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    public final String value;","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"     * Constructs a {@code GitHubProfile}.","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"     * @param profile A valid GitHubProfile.","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    public GitHubProfile(String profile) {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(profile);","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        checkArgument(isValidProfile(profile), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        value \u003d profile;","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"    public static boolean isValidProfile(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"     * Returns true if GitHub username is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"     * @return {@code true} if GitHub username is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"    public boolean isEmptyProfile() {","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"        return value.equals(\"\");","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        return value;","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"                || (other instanceof GitHubProfile // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 value.equals(((GitHubProfile) other).value)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"huanghao1998":8,"chia-yh":59}},{"path":"src/main/java/seedu/socket/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" * Represents a Person\u0027s name in SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank or include \"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"            + \"consecutive whitespaces\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input. No","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"     * consecutive whitespaces \"  \", or trailing whitespaces","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"     * allowed.","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!.*  )[\\\\p{Alnum}][\\\\p{Alnum} ]*(?\u003c! )$\";","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 fullName.toLowerCase().equals(((Name) other).fullName.toLowerCase())); // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":12,"-":49}},{"path":"src/main/java/seedu/socket/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":" * Represents a {@code Person} in SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    public static final String CATEGORY_NAME \u003d \"name\";","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    public static final String CATEGORY_GITHUB \u003d \"github\";","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    public static final String CATEGORY_PHONE \u003d \"phone\";","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public static final String CATEGORY_EMAIL \u003d \"email\";","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    public static final String CATEGORY_ADDRESS \u003d \"address\";","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    private static final String[] categories \u003d {CATEGORY_NAME, CATEGORY_PHONE, CATEGORY_ADDRESS,","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        CATEGORY_EMAIL, CATEGORY_GITHUB};","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    public static final List\u003cString\u003e CATEGORIES \u003d Arrays.asList(categories);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    /** {@code Name} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"    /** {@code GitHubProfile} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    private final GitHubProfile profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"    /** {@code Phone} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"    private final Phone phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"    /** {@code Email} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"    private final Email email;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"    /** {@code Address} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"    /** {@code Set\u003cLanguage\u003e} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"    private final Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    /** {@code Set\u003cTag\u003e} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"     * Constructor for an instance of {@code Person}. Every field must be present and not null.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"     * @param name {@code Name} associated with the {@code Person} instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"     * @param profile {@code GitHubProfile} associated with the {@code Person} instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"     * @param phone {@code Phone} associated with the {@code Person} instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"     * @param email {@code Email} associated with the {@code Person} instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"     * @param address {@code Address} associated with the {@code Person} instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"     * @param languages {@code Set\u003cLanguage\u003e} associated with the {@code Person} instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"     * @param tags {@code Set\u003cTag\u003e} associated with the {@code Person} instance.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    public Person(Name name, GitHubProfile profile, Phone phone, Email email, Address address, Set\u003cLanguage\u003e languages,","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"                  Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        requireAllNonNull(name, profile, phone, email, address, languages, tags);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        this.languages.addAll(languages);","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"    public GitHubProfile getProfile() {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"        return profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"     * Returns an immutable {@code Language} set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"     * @return An immutable {@code Language} set.","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"    public Set\u003cLanguage\u003e getLanguages() {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"        return Collections.unmodifiableSet(languages);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"     * Returns an immutable {@code Tag} set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"     * @return An immutable {@code Tag} set.","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"     * @param otherPerson {@code Person} to compare with.","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"     * @return {@code true} if both persons have the same name.","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"     * @param other {@code Object} to compare with.","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"chia-yh"},"content":"     * @return {@code true} if both persons have the same identity and data fields.","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 otherPerson.getProfile().equals(getProfile())","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":148,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 otherPerson.getLanguages().equals(getLanguages())","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"        return Objects.hash(name, profile, phone, email, address, languages, tags);","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"chia-yh"},"content":"                .append(\"; Profile: \")","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"                .append(getProfile())","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"chia-yh"},"content":"        Set\u003cLanguage\u003e languages \u003d getLanguages();","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"chia-yh"},"content":"        if (!languages.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"chia-yh"},"content":"            builder.append(\"; Languages: \");","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"chia-yh"},"content":"            languages.forEach(builder::append);","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":182,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":63,"-":110,"dillongoh":10,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" * Represents a Person\u0027s phone number in SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"     * Should only contain numbers, and should be at least 3 digits long. May be empty.","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}|$^\";","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"     * Returns true if phone number is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"     * @return {@code true} if phone number is empty.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"    public boolean isEmptyPhone() {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"        return value.equals(\"\");","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huanghao1998":9,"chia-yh":7,"-":47}},{"path":"src/main/java/seedu/socket/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_GITHUB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"     * Gets a person matching the given person from the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"     * The person must already exist in the list.","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"    public Person getPerson(Person toMatch) {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(toMatch);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        int index \u003d internalList.indexOf(toMatch);","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        return internalList.get(index);","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"     * Removes all persons by the given {@code predicate}.","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"    public boolean removeAll(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"huanghao1998"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"huanghao1998"},"content":"        boolean isRemoved \u003d internalList.removeIf(predicate);","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"huanghao1998"},"content":"        return isRemoved;","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"dillongoh"},"content":"     * Sorts the list by given {@code category}.","lastModifiedDate":"2023-03-05"},{"lineNumber":170,"author":{"gitId":"dillongoh"},"content":"     * @param category","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"dillongoh"},"content":"    public void sort(String category) {","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"dillongoh"},"content":"        if (category.equals(CATEGORY_NAME)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"dillongoh"},"content":"            internalList.sort(Comparator.comparing((Person a) -\u003e a.getName().toString().toLowerCase()));","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"dillongoh"},"content":"        } else if (category.equals(CATEGORY_PHONE)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"dillongoh"},"content":"            internalList.sort((Person a, Person b) -\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"dillongoh"},"content":"                if (a.getPhone().toString().isEmpty() \u0026\u0026 b.getPhone().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"dillongoh"},"content":"                    return a.getName().toString().toLowerCase().compareTo(b.getName().toString().toLowerCase());","lastModifiedDate":"2023-03-07"},{"lineNumber":179,"author":{"gitId":"dillongoh"},"content":"                } else if (a.getPhone().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"dillongoh"},"content":"                    return 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"dillongoh"},"content":"                } else if (b.getPhone().toString().isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"dillongoh"},"content":"                    return -1;","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"dillongoh"},"content":"                    return a.getPhone().toString().toLowerCase().compareTo(b.getPhone().toString().toLowerCase());","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"dillongoh"},"content":"            });","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"dillongoh"},"content":"        } else if (category.equals(CATEGORY_EMAIL)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"dillongoh"},"content":"            internalList.sort((Person a, Person b) -\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"dillongoh"},"content":"                if (a.getEmail().toString().isEmpty() \u0026\u0026 b.getEmail().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"dillongoh"},"content":"                    return a.getName().toString().toLowerCase().compareTo(b.getName().toString().toLowerCase());","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"dillongoh"},"content":"                } else if (a.getEmail().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":192,"author":{"gitId":"dillongoh"},"content":"                    return 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"dillongoh"},"content":"                } else if (b.getEmail().toString().isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"dillongoh"},"content":"                    return -1;","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"dillongoh"},"content":"                    return a.getEmail().toString().toLowerCase().compareTo(b.getEmail().toString().toLowerCase());","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"dillongoh"},"content":"            });","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"dillongoh"},"content":"        } else if (category.equals(CATEGORY_ADDRESS)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"dillongoh"},"content":"            internalList.sort((Person a, Person b) -\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"dillongoh"},"content":"                if (a.getAddress().toString().isEmpty() \u0026\u0026 b.getAddress().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"dillongoh"},"content":"                    return a.getName().toString().toLowerCase().compareTo(b.getName().toString().toLowerCase());","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"dillongoh"},"content":"                } else if (a.getAddress().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"dillongoh"},"content":"                    return 1;","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"dillongoh"},"content":"                } else if (b.getAddress().toString().isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"dillongoh"},"content":"                    return -1;","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"dillongoh"},"content":"                    return a.getAddress().toString().toLowerCase().compareTo(b.getAddress().toString().toLowerCase());","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"dillongoh"},"content":"            });","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"dillongoh"},"content":"        } else if (category.equals(CATEGORY_GITHUB)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"dillongoh"},"content":"            internalList.sort((Person a, Person b) -\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"dillongoh"},"content":"                if (a.getProfile().toString().isEmpty() \u0026\u0026 b.getProfile().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"dillongoh"},"content":"                    return a.getName().toString().toLowerCase().compareTo(b.getName().toString().toLowerCase());","lastModifiedDate":"2023-03-07"},{"lineNumber":215,"author":{"gitId":"dillongoh"},"content":"                } else if (a.getProfile().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":216,"author":{"gitId":"dillongoh"},"content":"                    return 1;","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"dillongoh"},"content":"                } else if (b.getProfile().toString().isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"dillongoh"},"content":"                    return -1;","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"dillongoh"},"content":"                    return a.getProfile().toString().toLowerCase().compareTo(b.getProfile().toString().toLowerCase());","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"dillongoh"},"content":"            });","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"huanghao1998":11,"chia-yh":22,"-":133,"dillongoh":59}},{"path":"src/main/java/seedu/socket/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"chia-yh":1,"-":10}},{"path":"src/main/java/seedu/socket/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"chia-yh":1,"-":5}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandAddressPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandAddressPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandAddressPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getAddress().value, keyword));","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandAddressPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 keywords.equals(((FindCommandAddressPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chia-yh":3,"nus-jeff":29}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandEmailPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":" * Tests that a {@code Person}\u0027s {@code Email} matches any of the keywords given.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandEmailPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandEmailPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getEmail().value, keyword));","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandEmailPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 keywords.equals(((FindCommandEmailPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chia-yh":3,"nus-jeff":29}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandLanguagePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":" * Tests that a {@code Person}\u0027s {@code Language} matches any of the keywords given.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandLanguagePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandLanguagePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        Set\u003cLanguage\u003e languages \u003d person.getLanguages();","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"                .anyMatch(keyword -\u003e languages.stream().anyMatch(","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"                        language -\u003e StringUtil.containsWordIgnoreCase(language.languageName, keyword)));","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandLanguagePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 keywords.equals(((FindCommandLanguagePredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chia-yh":3,"nus-jeff":33}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandNamePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandNamePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandNamePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 keywords.equals(((FindCommandNamePredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chia-yh":3,"-":25,"nus-jeff":4}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandPersonPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nus-jeff"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":" * Tests that a {@code Person}\u0027s field matches any of the keywords given to the respective field.","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandPersonPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandNamePredicate namePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandProfilePredicate profilePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandPhonePredicate phonePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandEmailPredicate emailPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandAddressPredicate addressPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandLanguagePredicate languagePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandTagPredicate tagPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"     * Constructor for FindCommandPersonPredicate class","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandPersonPredicate(List\u003cString\u003e nameKeywords,","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"                                      List\u003cString\u003e profileKeywords,","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"                                      List\u003cString\u003e phoneKeywords,","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"                                      List\u003cString\u003e emailKeywords,","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                                      List\u003cString\u003e addressKeywords,","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"                                      List\u003cString\u003e languageKeywords,","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"                                      List\u003cString\u003e tagKeywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"        this.namePredicate \u003d new FindCommandNamePredicate(nameKeywords);","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"        this.profilePredicate \u003d new FindCommandProfilePredicate(profileKeywords);","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"        this.phonePredicate \u003d new FindCommandPhonePredicate(phoneKeywords);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        this.emailPredicate \u003d new FindCommandEmailPredicate(emailKeywords);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        this.addressPredicate \u003d new FindCommandAddressPredicate(addressKeywords);","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"        this.languagePredicate \u003d new FindCommandLanguagePredicate(languageKeywords);","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"        this.tagPredicate \u003d new FindCommandTagPredicate(tagKeywords);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"        boolean isMatchName \u003d namePredicate.test(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"        boolean isMatchProfile \u003d profilePredicate.test(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"        boolean isMatchPhone \u003d phonePredicate.test(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"        boolean isMatchEmail \u003d emailPredicate.test(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        boolean isMatchAddress \u003d addressPredicate.test(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        boolean isMatchLanguage \u003d languagePredicate.test(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"        boolean isMatchTag \u003d tagPredicate.test(person);","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"        return isMatchName","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"                || isMatchProfile","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                || isMatchPhone","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"                || isMatchEmail","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"                || isMatchAddress","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"                || isMatchLanguage","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"                || isMatchTag;","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandPersonPredicate","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 namePredicate.equals(((FindCommandPersonPredicate) other).namePredicate)","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 profilePredicate.equals(((FindCommandPersonPredicate) other).profilePredicate)","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 phonePredicate.equals(((FindCommandPersonPredicate) other).phonePredicate)","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 emailPredicate.equals(((FindCommandPersonPredicate) other).emailPredicate)","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 addressPredicate.equals(((FindCommandPersonPredicate) other).addressPredicate)","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 languagePredicate.equals(((FindCommandPersonPredicate) other).languagePredicate)","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 tagPredicate.equals(((FindCommandPersonPredicate) other).tagPredicate));","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"nus-jeff":73}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandPhonePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":" * Tests that a {@code Person}\u0027s {@code Phone} matches any of the keywords given.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandPhonePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandPhonePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandPhonePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 keywords.equals(((FindCommandPhonePredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chia-yh":3,"nus-jeff":29}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandProfilePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":" * Tests that a {@code Person}\u0027s {@code GitHubProfile} matches any of the keywords given.","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandProfilePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandProfilePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getProfile().value, keyword));","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandProfilePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 keywords.equals(((FindCommandProfilePredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"chia-yh":3,"nus-jeff":29}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandProjectNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":" * Tests that a {@code Project}\u0027s {@code ProjectName} matches any of the keywords given.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"public class FindCommandProjectNamePredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    public FindCommandProjectNamePredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(project.getName().projectName, keyword));","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"                || (other instanceof FindCommandProjectNamePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 keywords.equals(((FindCommandProjectNamePredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"chia-yh":32}},{"path":"src/main/java/seedu/socket/model/person/predicate/FindCommandTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":" * Tests that a {@code Person}\u0027s {@code Language} matches any of the keywords given.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class FindCommandTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public FindCommandTagPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"     * Returns true if Tag Predicate is empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"     * @return {@code true} if Tag Predicate is empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"        return keywords.isEmpty();","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"        Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"                .anyMatch(keyword -\u003e tags.stream().anyMatch(","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"                        language -\u003e StringUtil.containsWordIgnoreCase(language.tagName, keyword)));","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof FindCommandTagPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 keywords.equals(((FindCommandTagPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"huanghao1998":9,"chia-yh":3,"nus-jeff":33}},{"path":"src/main/java/seedu/socket/model/person/predicate/ListCommandLanguagePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nus-jeff"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"cmang12"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"cmang12"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"cmang12"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"cmang12"},"content":" * Tests that a {@code Person}\u0027s {@code Language} matches any of the languages given.","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"public class ListCommandLanguagePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"    private final Set\u003cLanguage\u003e languages;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    public ListCommandLanguagePredicate(Set\u003cLanguage\u003e languages) {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"        this.languages \u003d languages;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"        if (languages.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e personLanguages \u003d person.getLanguages();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"        boolean languagesPresent \u003d true;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"        for (Language language: languages) {","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"            languagesPresent \u003d languagesPresent \u0026\u0026 personLanguages.contains(language);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"        return languagesPresent;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"cmang12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"cmang12"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof ListCommandLanguagePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 languages.equals(((ListCommandLanguagePredicate) other).languages)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"cmang12"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"cmang12":36,"chia-yh":1,"nus-jeff":6}},{"path":"src/main/java/seedu/socket/model/person/predicate/ListCommandTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nus-jeff"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"cmang12"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"cmang12"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"cmang12"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"cmang12"},"content":" * Tests that a {@code Person}\u0027s {@code Tag} matches any of the tags given.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"public class ListCommandTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public ListCommandTagPredicate(Set\u003cTag\u003e keywords) {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"        this.tags \u003d keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e personTags \u003d person.getTags();","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"        boolean tagsPresent \u003d true;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"        for (Tag tag: tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"cmang12"},"content":"            tagsPresent \u003d tagsPresent \u0026\u0026 personTags.contains(tag);","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"        return tagsPresent;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"cmang12"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"cmang12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"cmang12"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"                || (other instanceof ListCommandTagPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"                \u0026\u0026 tags.equals(((ListCommandTagPredicate) other).tags)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"cmang12"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"cmang12":37,"chia-yh":1,"nus-jeff":6}},{"path":"src/main/java/seedu/socket/model/person/tag/Language.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nus-jeff"},"content":"package seedu.socket.model.person.tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" * Represents a (Programming) Language in SOCket.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidLanguageName(String)}","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"public class Language {","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Language names should be a minimum of 1 character, start with a \"","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"            + \"letter and consist of alphanumeric characters and/or -, +, #.\";","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"     * Should be a minimum of 1 character, start with a letter and consist of alphanumeric characters and/or -, +, #.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d[a-zA-Z])[-+#a-zA-Z0-9]+\";","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    public final String languageName;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"     * Constructs a {@code Language}.","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"     * @param languageName A valid language name.","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    public Language(String languageName) {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(languageName);","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        checkArgument(isValidLanguageName(languageName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"        this.languageName \u003d languageName;","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    public static boolean isValidLanguageName(String test) {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"                || (other instanceof Language // instanceof handles nulls","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"                \u0026\u0026 languageName.equals(((Language) other).languageName)); // state check","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        return languageName.hashCode();","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        return \u0027[\u0027 + languageName + \u0027]\u0027;","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"chia-yh":56,"nus-jeff":1}},{"path":"src/main/java/seedu/socket/model/person/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nus-jeff"},"content":"package seedu.socket.model.person.tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":" * Represents a Tag in SOCket.","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric \"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"            + \"and may not exceed 20 characters\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"     * Should be alphanumeric. Maximum 20 characters.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.{1,20}$)\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        this.tagName \u003d tagName.toLowerCase();","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chia-yh":8,"-":48,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/model/project/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":" * Represents a {@code Project} in SOCket.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"public class Project {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    public static final String PROJ_NAME \u003d \"name\";","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    public static final String PROJ_REPO_HOST \u003d \"repohost\";","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    public static final String PROJ_REPO_NAME \u003d \"reponame\";","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    public static final String PROJ_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"    public static final String PROJ_MEETING \u003d \"meeting\";","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    private static final String[] categories \u003d {PROJ_NAME, PROJ_REPO_HOST,","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"        PROJ_REPO_NAME, PROJ_DEADLINE, PROJ_MEETING};","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    public static final List\u003cString\u003e CATEGORIES \u003d Arrays.asList(categories);","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    // Identity fields","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    /** {@code ProjectName} associated with the {@code Project} instance. */","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    private final ProjectName name;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    // Data fields","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    /** {@code ProjectRepoHost} associated with the {@code Project} instance. */","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    private final ProjectRepoHost repoHost;","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    /** {@code ProjectRepoName} associated with the {@code Project} instance. */","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"    private final ProjectRepoName repoName;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    /** {@code ProjectDeadline} associated with the {@code Project} instance. */","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    private final ProjectDeadline deadline;","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"cmang12"},"content":"    /** {@code ProjectMeeting} associated with the {@code Project} instance. */","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"    private final ProjectMeeting meeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"    /** {@code Set\u003cPerson\u003e} associated with the {@code Project} instance. */","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    private final Set\u003cPerson\u003e members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"    /** {@code ProjectName} associated with the {@code Person} instance. */","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"    public Project(ProjectName name, ProjectRepoHost repoHost, ProjectRepoName repoName,","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"cmang12"},"content":"                   ProjectDeadline deadline, ProjectMeeting meeting, Set\u003cPerson\u003e members) {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        requireAllNonNull(name, repoHost, repoName, deadline, members);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        this.repoHost \u003d repoHost;","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        this.repoName \u003d repoName;","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"cmang12"},"content":"        this.meeting \u003d meeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        this.members.addAll(members);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"    public ProjectName getName() {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"        return name;","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"    public ProjectRepoHost getRepoHost() {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        return repoHost;","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    public ProjectRepoName getRepoName() {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"        return repoName;","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"    public ProjectDeadline getDeadline() {","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"        return deadline;","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"cmang12"},"content":"    public ProjectMeeting getMeeting() { return meeting; }","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"     * Returns an immutable {@code Person} set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"     * @return An immutable {@code Person} set.","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"    public Set\u003cPerson\u003e getMembers() {","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"        return Collections.unmodifiableSet(members);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"     * Returns true if both projects have the same name.","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"     * This defines a weaker notion of equality between two projects.","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"     * @param otherProject {@code Project} to compare with.","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"dillongoh"},"content":"     * @return {@code true} if both persons have the same name.","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"dillongoh"},"content":"    public boolean isSameProject(Project otherProject) {","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"dillongoh"},"content":"        if (otherProject \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"dillongoh"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"dillongoh"},"content":"        return otherProject !\u003d null","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 otherProject.getName().equals(getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"     * Returns true if both projects have the same identity and data fields.","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"     * This defines a stronger notion of equality between two projects.","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"dillongoh"},"content":"     * @param other {@code Object} to compare with.","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"dillongoh"},"content":"     * @return {@code true} if both projects have the same identity and data fields.","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"dillongoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"dillongoh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"dillongoh"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"dillongoh"},"content":"        if (!(other instanceof Project)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"dillongoh"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"dillongoh"},"content":"        Project otherProject \u003d (Project) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"dillongoh"},"content":"        return otherProject.getName().equals(getName())","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 otherProject.getDeadline().equals(getDeadline())","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"cmang12"},"content":"            \u0026\u0026 otherProject.getMeeting().equals(getMeeting())","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 otherProject.getRepoHost().equals(getRepoHost())","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 otherProject.getRepoName().equals(getRepoName())","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 otherProject.getMembers().equals(getMembers());","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"dillongoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"dillongoh"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"cmang12"},"content":"        return Objects.hash(name, repoHost, repoName, deadline, meeting, members);","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"dillongoh"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"dillongoh"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"dillongoh"},"content":"            .append(\"; Repo Host: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"dillongoh"},"content":"            .append(getRepoHost())","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"dillongoh"},"content":"            .append(\"; Repo Name: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"dillongoh"},"content":"            .append(getRepoName())","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"dillongoh"},"content":"            .append(\"; Deadline: \")","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"cmang12"},"content":"            .append(getDeadline())","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"cmang12"},"content":"            .append(\"; Meeting: \")","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"cmang12"},"content":"            .append(getMeeting());","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"dillongoh"},"content":"        Set\u003cPerson\u003e members \u003d getMembers();","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"dillongoh"},"content":"        if (!members.isEmpty()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"dillongoh"},"content":"            builder.append(\"; Members: \\n\");","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"dillongoh"},"content":"            for (Person member : members) {","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"dillongoh"},"content":"                builder.append(member.getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"dillongoh"},"content":"                builder.append(\"\\n\");","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"dillongoh"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"cmang12":12,"dillongoh":143}},{"path":"src/main/java/seedu/socket/model/project/ProjectDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":" * Represents a Project\u0027s deadline in SOCket.","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":" * Guarantees: immutable","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"public class ProjectDeadline {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"dd/MM/yy-HHmm\";","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"        \"Date should be in format dd/MM/yy-HHmm\";","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    public static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    public final String deadline;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"     * Constructs a {@code ProjectDeadline}.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"     * @param date A date.","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    public ProjectDeadline(String date) {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        checkArgument(isValidProjectDeadline(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        deadline \u003d date;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"     * Checks if the given DateTime {@code String} is of a valid format.","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"     * @param test {@code String} form of DateTime to check.","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"     * @return true if {@code String} is of valid DateTime format, else false.","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"    public static Boolean isValidProjectDeadline(String test) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        if (test \u003d\u003d \"\") {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"            return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"            LocalDateTime.parse(test, FORMAT);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"            return true;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"            return false;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"     * Returns a {@code LocalDateTime} object if {@code deadline} is not empty.","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"     * @return {@code LocalDateTime} object parsed from the stored {@code String deadline}.","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"     * @throws DateTimeParseException if {@code deadline} is empty.","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    public LocalDateTime toLocalDateTime() throws DateTimeParseException {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        return LocalDateTime.parse(deadline, FORMAT);","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"        return deadline;","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"                || (other instanceof ProjectDeadline //instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"                \u0026\u0026 deadline.equals(((ProjectDeadline) other).deadline)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"        return deadline.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"chia-yh":25,"dillongoh":48}},{"path":"src/main/java/seedu/socket/model/project/ProjectMeeting.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cmang12"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cmang12"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cmang12"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"cmang12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cmang12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"cmang12"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cmang12"},"content":" * Represents a Project\u0027s deadline in SOCket.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":" * Guarantees: immutable","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"cmang12"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"public class ProjectMeeting {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"dd/MM/yy-HHmm\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"            \"Date should be in format dd/MM/yy-HHmm\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"    public static final DateTimeFormatter FORMAT \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"    public final String meeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"     * Constructs a {@code ProjectMeeting}.","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"     * @param date A date.","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"    public ProjectMeeting(String date) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"        checkArgument(isValidProjectMeeting(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"        meeting \u003d date;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cmang12"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"     * Checks if the given DateTime {@code String} is of a valid format.","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"     * @param test {@code String} form of DateTime to check.","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"     * @return true if {@code String} is of valid DateTime format, else false.","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"    public static Boolean isValidProjectMeeting(String test) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"        if (test \u003d\u003d \"\") {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"cmang12"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"cmang12"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"            LocalDateTime.parse(test, FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"cmang12"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"cmang12"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"cmang12"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"cmang12"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"cmang12"},"content":"     * Returns a {@code LocalDateTime} object if {@code meeting} is not empty.","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"cmang12"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"cmang12"},"content":"     * @return {@code LocalDateTime} object parsed from the stored {@code String meeting}.","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"cmang12"},"content":"     * @throws DateTimeParseException if {@code meeting} is empty.","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"cmang12"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"cmang12"},"content":"    public LocalDateTime toLocalDateTime() throws DateTimeParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"cmang12"},"content":"        return LocalDateTime.parse(meeting, FORMAT);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"cmang12"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"cmang12"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"cmang12"},"content":"        return meeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"cmang12"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"cmang12"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"cmang12"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"cmang12"},"content":"                || (other instanceof ProjectMeeting //instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"cmang12"},"content":"                \u0026\u0026 meeting.equals(((ProjectMeeting) other).meeting)); // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"cmang12"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"cmang12"},"content":"        return meeting.hashCode();","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"cmang12"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cmang12":73}},{"path":"src/main/java/seedu/socket/model/project/ProjectName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":" * Represents a Project\u0027s name in SOCket.","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProjectName(String)}","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"public class ProjectName {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"        \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    public final String projectName;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"     * Constructs a {@code ProjectName}.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    public ProjectName(String name) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        checkArgument(isValidProjectName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        projectName \u003d name;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    public static boolean isValidProjectName(String test) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        return projectName;","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"            || (other instanceof ProjectName // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 projectName.equals(((ProjectName) other).projectName)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        return projectName.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"dillongoh":55}},{"path":"src/main/java/seedu/socket/model/project/ProjectRepoHost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":" * Represents a Project\u0027s Repository Host in SOCket.","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProjectRepoHost(String)}","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"public class ProjectRepoHost {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"     * As specified in form validation on","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"     * \u003ca href\u003d\"https://github.com/join\"\u003eJoin GitHub\u003c/a\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"     * and","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"     * \u003ca href\u003d\"https://github.com/account/organizations/new?plan\u003dfree\"\u003eSet up your organization\u003c/a\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"     * */","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"        \"Repository name may only contain alphanumeric characters or single hyphens, cannot begin or end with a \"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"            + \"hyphen, and may not exceed 39 characters\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"     * May only contain alphanumeric characters or single hyphens, and cannot begin or end with a hyphen. Maximum 39","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"     * characters. May be empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.{1,39}$)(?!-)(?!.*--)[-a-zA-Z0-9]+(?\u003c!-)$|^$\";","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    public final String value;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"     * Constructs a {@code ProjectRepoHost}.","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"     * @param host A valid ProjectRepoHost","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    public ProjectRepoHost(String host) {","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(host);","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        checkArgument(isValidProjectRepoHost(host), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        value \u003d host;","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    public static boolean isValidProjectRepoHost(String test) {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"     * Returns true if repository host is empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"     * @return {@code true} if repository host is empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"    public boolean isEmptyRepoHost() {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        return value.equals(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"        return value;","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"            || (other instanceof ProjectRepoHost // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 value.equals(((ProjectRepoHost) other).value)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"chia-yh":9,"dillongoh":61}},{"path":"src/main/java/seedu/socket/model/project/ProjectRepoName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":" * Represents a Project\u0027s Repository Name in SOCket.","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":" * Guarantees: immutable; s valid as declared n {@link #isValidProjectRepoName(String)}","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"public class ProjectRepoName {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"    /** As tested in form validation on \u003ca href\u003d\"https://github.com/new\"\u003eCreate a New Repository\u003c/a\u003e */","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"        \"Repository name may only contain alphanumeric characters, periods, hyphens, or underscores, \"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"            + \"and may not exceed 100 characters\";","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"     * May only contain alphanumeric characters, periods, hyphens, or underscores. Maximum 100 characters.","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"     * May be empty.","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?\u003d.{1,100}$)(?!^\\\\.$)(?!^\\\\.\\\\.$)[-_.a-zA-Z0-9]+$|^$\";","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    public final String value;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"     * Constructs a {@code ProjectRepoName}.","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"     * @param name A valid ProjectRepoName","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    public ProjectRepoName(String name) {","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"        checkArgument(isValidProjectRepoName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        value \u003d name;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"    public static boolean isValidProjectRepoName(String test) {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"     * Returns true if repository name is empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"     *","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"     * @return {@code true} if repository name is empty.","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"    public boolean isEmptyRepoName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        return value.equals(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        return value;","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"            || (other instanceof ProjectRepoName // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 value.equals(((ProjectRepoName) other).value)); // state check","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"chia-yh":6,"dillongoh":60}},{"path":"src/main/java/seedu/socket/model/project/UniqueProjectList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_DEADLINE;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"cmang12"},"content":"import static seedu.socket.model.project.Project.PROJ_MEETING;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_REPO_HOST;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_REPO_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":" * A list of projects that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":" * A project is considered unique by comparing using {@code Project#isSameProject(Project)}. As such, adding and","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":" * updating of projects uses Project#isSameProject(Project) for equality so as to ensure that the project being added","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":" * or updated is unique in terms of identity in the UniqueProjectList. However, the removal of a project uses","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":" * Project#equals(Object) so as to ensure that the project with exactly the same fields will be removed.","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":" *","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":" *","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":" * @see Project#isSameProject(Project)","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"public class UniqueProjectList implements Iterable\u003cProject\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    private final ObservableList\u003cProject\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    private final ObservableList\u003cProject\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"     * Returns true if the list contains an equivalent project as the given argument.","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    public boolean contains(Project toCheck) {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProject);","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"     * Adds a project to the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"     * The project must not already exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"    public void add(Project toAdd) {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"     * Replaces the project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"        if (!target.isSameProject(editedProject) \u0026\u0026 contains(editedProject)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"        internalList.set(index, editedProject);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"     * Removes the equivalent project from the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"     * The project must exist in the list.","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"    public void remove(Project toRemove) {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"    public void setProjects(UniqueProjectList replacement) {","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"dillongoh"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"dillongoh"},"content":"     * Replaces the contents of this list with {@code projects}.","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"dillongoh"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"dillongoh"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"        requireAllNonNull(projects);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"        if (!projectsAreUnique(projects)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"        internalList.setAll(projects);","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"dillongoh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"dillongoh"},"content":"    public ObservableList\u003cProject\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"dillongoh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"dillongoh"},"content":"    public Iterator\u003cProject\u003e iterator() {","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"dillongoh"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"dillongoh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"dillongoh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"dillongoh"},"content":"            || (other instanceof UniqueProjectList // instanceof handles nulls","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"dillongoh"},"content":"            \u0026\u0026 internalList.equals(((UniqueProjectList) other).internalList));","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"dillongoh"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"dillongoh"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"dillongoh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"dillongoh"},"content":"     * Returns true if {@code projects} contains only unique projects.","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"dillongoh"},"content":"    private boolean projectsAreUnique(List\u003cProject\u003e projects) {","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"dillongoh"},"content":"        for (int i \u003d 0; i \u003c projects.size() - 1; i++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"dillongoh"},"content":"            for (int j \u003d i + 1; j \u003c projects.size(); j++) {","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"dillongoh"},"content":"                if (projects.get(i).isSameProject(projects.get(j))) {","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"dillongoh"},"content":"                    return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"dillongoh"},"content":"            }","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"dillongoh"},"content":"        return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"dillongoh"},"content":"     * Sorts the list by given {@code category}.","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"dillongoh"},"content":"     * @param category","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"dillongoh"},"content":"    public void sort(String category) {","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"dillongoh"},"content":"        if (category.equals(PROJ_NAME)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"dillongoh"},"content":"            internalList.sort(Comparator.comparing((Project a) -\u003e a.getName().toString().toLowerCase()));","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"dillongoh"},"content":"        } else if (category.equals(PROJ_REPO_HOST)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"dillongoh"},"content":"            internalList.sort((Project a, Project b) -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"dillongoh"},"content":"                if (a.getRepoHost().toString().isEmpty() \u0026\u0026 b.getRepoHost().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"dillongoh"},"content":"                    return a.getName().toString().toLowerCase().compareTo(b.getName().toString().toLowerCase());","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"dillongoh"},"content":"                } else if (a.getRepoHost().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"dillongoh"},"content":"                    return 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"dillongoh"},"content":"                } else if (b.getRepoHost().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"dillongoh"},"content":"                    return -1;","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"dillongoh"},"content":"                    return a.getRepoHost().toString().toLowerCase().compareTo(b.getRepoHost().toString().toLowerCase());","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"dillongoh"},"content":"            });","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"dillongoh"},"content":"        } else if (category.equals(PROJ_REPO_NAME)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"dillongoh"},"content":"            internalList.sort((Project a, Project b) -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"dillongoh"},"content":"                if (a.getRepoName().toString().isEmpty() \u0026\u0026 b.getRepoName().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"dillongoh"},"content":"                    return a.getName().toString().toLowerCase().compareTo(b.getName().toString().toLowerCase());","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"dillongoh"},"content":"                } else if (a.getRepoName().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"dillongoh"},"content":"                    return 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"dillongoh"},"content":"                } else if (b.getRepoName().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"dillongoh"},"content":"                    return -1;","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"dillongoh"},"content":"                    return a.getRepoName().toString().toLowerCase().compareTo(b.getRepoName().toString().toLowerCase());","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"dillongoh"},"content":"            });","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"dillongoh"},"content":"        } else if (category.equals(PROJ_DEADLINE)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"dillongoh"},"content":"            internalList.sort((Project a, Project b) -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"dillongoh"},"content":"                if (a.getDeadline().toString().isEmpty() \u0026\u0026 b.getDeadline().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"dillongoh"},"content":"                    return a.getName().toString().compareTo(b.getName().toString());","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"dillongoh"},"content":"                } else if (a.getDeadline().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"dillongoh"},"content":"                    return 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"dillongoh"},"content":"                } else if (b.getDeadline().toString().isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"dillongoh"},"content":"                    return -1;","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"dillongoh"},"content":"                } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"dillongoh"},"content":"                    return a.getDeadline().toLocalDateTime().compareTo(b.getDeadline().toLocalDateTime());","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"dillongoh"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"dillongoh"},"content":"            });","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"cmang12"},"content":"        } else if (category.equals(PROJ_MEETING)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"cmang12"},"content":"            internalList.sort((Project a, Project b) -\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"cmang12"},"content":"                if (a.getMeeting().toString().isEmpty() \u0026\u0026 b.getMeeting().toString().isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"cmang12"},"content":"                    return a.getName().toString().compareTo(b.getName().toString());","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"cmang12"},"content":"                } else if (a.getMeeting().toString().isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"cmang12"},"content":"                    return 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"cmang12"},"content":"                } else if (b.getMeeting().toString().isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"cmang12"},"content":"                    return -1;","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"cmang12"},"content":"                } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"cmang12"},"content":"                    return a.getMeeting().toLocalDateTime().compareTo(b.getMeeting().toLocalDateTime());","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"cmang12"},"content":"                }","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"cmang12"},"content":"            });","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"cmang12":13,"dillongoh":186}},{"path":"src/main/java/seedu/socket/model/project/exceptions/DuplicateProjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project.exceptions;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":" * Signals that the operation will result in duplicate Projects (Projects are considered duplicates if they have the","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":" * same identity).","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"public class DuplicateProjectException extends RuntimeException {","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"    public DuplicateProjectException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"        super(\"Operation would result in duplicate projects\");","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"dillongoh":11}},{"path":"src/main/java/seedu/socket/model/project/exceptions/ProjectNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project.exceptions;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":" * Signals that the operation is unable to find the specified project.","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"public class ProjectNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"dillongoh":6}},{"path":"src/main/java/seedu/socket/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectDeadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectMeeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectName;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoHost;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoName;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":" * Contains utility methods for populating {@code Socket} with sample data.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"     * Returns sample {@code Person} instances without project references.","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"     * @return {@code Person} instances without project references.","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"    private static Person[] getSamplePersons() {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"            new Person(new Name(\"Alex Yeoh\"), new GitHubProfile(\"alex-yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"                new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"                getLanguageSet(\"Java\"), getTagSet(\"friends\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"            new Person(new Name(\"Bernice Yu\"), new GitHubProfile(\"bernice-yu\"), new Phone(\"99272758\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"                new Email(\"berniceyu@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"                getLanguageSet(\"Python\", \"Dart\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new GitHubProfile(\"charlotte-o\"), new Phone(\"93210283\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"                new Email(\"charlotte@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"                getLanguageSet(\"C\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"            new Person(new Name(\"David Li\"), new GitHubProfile(\"david-li\"), new Phone(\"91031282\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"                new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"                getLanguageSet(\"C#\"), getTagSet(\"family\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new GitHubProfile(\"irfan-ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"                new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"                getLanguageSet(\"C++\"), getTagSet(\"classmates\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new GitHubProfile(\"roy-balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"                new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"                getLanguageSet(\"JavaScript\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"     * Returns sample {@code Project} instances without member references.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"     * @return {@code Project} instances without member references.","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    public static Project[] getSampleProjects() {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        return new Project[] {","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"            new Project(new ProjectName(\"Project 1\"), new ProjectRepoHost(\"\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"cmang12"},"content":"                new ProjectRepoName(\"project-1\"), new ProjectDeadline(\"01/01/23-2359\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"cmang12"},"content":"                    new ProjectMeeting(\"01/01/23-1000\"), getMemberSet()),","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"            new Project(new ProjectName(\"Project 2\"), new ProjectRepoHost(\"\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"cmang12"},"content":"                new ProjectRepoName(\"project-2\"), new ProjectDeadline(\"02/01/23-2359\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"cmang12"},"content":"                    new ProjectMeeting(\"02/01/23-1000\"), getMemberSet())","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        };","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"    public static ReadOnlySocket getSampleSocket() {","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        Socket sampleSocket \u003d new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"            sampleSocket.addPerson(samplePerson);","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        for (Project sampleProject : getSampleProjects()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"            sampleSocket.addProject(sampleProject);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"        return sampleSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"     * Returns a language set containing the list of strings given.","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"    public static Set\u003cLanguage\u003e getLanguageSet(String... strings) {","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"                .map(Language::new)","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"     * Returns a project set containing the list of projects given.","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"    public static Set\u003cProject\u003e getProjectSet(Project... projects) {","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"        return Arrays.stream(projects)","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"     * Returns a member set containing the list of members given.","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"    public static Set\u003cPerson\u003e getMemberSet(Person ... members) {","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"dillongoh"},"content":"        return Arrays.stream(members)","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"dillongoh"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"cmang12":11,"chia-yh":71,"-":27,"dillongoh":4,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/storage/JsonAdaptedLanguage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":" * Jackson-friendly version of {@link Language}.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"class JsonAdaptedLanguage {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    private final String languageName;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"     * Constructs a {@code JsonAdaptedLanguage} with the given {@code languageName}.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    public JsonAdaptedLanguage(String languageName) {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"        this.languageName \u003d languageName;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    public JsonAdaptedLanguage(Language source) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"        languageName \u003d source.languageName;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    @JsonValue","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"    public String getLanguageName() {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        return languageName;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"     * Converts this Jackson-friendly adapted language object into the model\u0027s {@code Language} object.","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted language.","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"    public Language toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        if (!Language.isValidLanguageName(languageName)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        return new Language(languageName);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"chia-yh":47,"nus-jeff":1}},{"path":"src/main/java/seedu/socket/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    private final String profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    private final List\u003cJsonAdaptedLanguage\u003e languages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"profile\") String profile,","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"languages\") List\u003cJsonAdaptedLanguage\u003e languages,","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        this.profile \u003d profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        if (languages !\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"            this.languages.addAll(languages);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        profile \u003d source.getProfile().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        languages.addAll(source.getLanguages().stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"                .map(JsonAdaptedLanguage::new)","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"        final List\u003cLanguage\u003e personLanguages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"        for (JsonAdaptedLanguage language : languages) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"            personLanguages.add(language.toModelType());","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"        if (profile \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"                    GitHubProfile.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"        if (!GitHubProfile.isValidProfile(profile)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(GitHubProfile.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"        final GitHubProfile modelProfile \u003d new GitHubProfile(profile);","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"chia-yh"},"content":"        final Set\u003cLanguage\u003e modelLanguages \u003d new HashSet\u003c\u003e(personLanguages);","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"        return new Person(modelName, modelProfile, modelPhone, modelEmail, modelAddress, modelLanguages, modelTags);","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chia-yh":37,"-":98,"nus-jeff":2}},{"path":"src/main/java/seedu/socket/storage/JsonAdaptedProject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectDeadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectMeeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectName;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoHost;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoName;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":" * Jackson-friendly version of {@link Project}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"public class JsonAdaptedProject {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Project\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    private final String projectName;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    private final String projectRepoHost;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    private final String projectRepoName;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"    private final String projectDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"    private final String projectMeeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    private final List\u003cJsonAdaptedPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"    public JsonAdaptedProject(@JsonProperty(\"projectName\") String projectName,","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"            @JsonProperty(\"projectRepoHost\") String projectRepoHost,","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"            @JsonProperty(\"projectRepoName\") String projectRepoName,","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"            @JsonProperty(\"projectDeadline\") String projectDeadline,","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"cmang12"},"content":"            @JsonProperty(\"projectMeeting\") String projectMeeting,","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"            @JsonProperty(\"members\") List\u003cJsonAdaptedPerson\u003e members) {","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        this.projectRepoHost \u003d projectRepoHost;","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        this.projectRepoName \u003d projectRepoName;","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        this.projectDeadline \u003d projectDeadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"cmang12"},"content":"        this.projectMeeting \u003d projectMeeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        if (members !\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"            this.members.addAll(members);","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"     * Converts a given {@code Project} into this class for Jackson use.","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    public JsonAdaptedProject(Project source) {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        projectName \u003d source.getName().projectName;","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"        projectRepoHost \u003d source.getRepoHost().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        projectRepoName \u003d source.getRepoName().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        projectDeadline \u003d source.getDeadline().deadline;","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"cmang12"},"content":"        projectMeeting \u003d source.getMeeting().meeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        members.addAll(source.getMembers().stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Project} object.","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted project.","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"    public Project toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"        final List\u003cPerson\u003e projectMembers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"        for (JsonAdaptedPerson person : members) {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"            projectMembers.add(person.toModelType());","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"        if (projectName \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"                    ProjectName.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"        if (!ProjectName.isValidProjectName(projectName)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(ProjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"        final ProjectName modelName \u003d new ProjectName(projectName);","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        if (projectRepoHost \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"                    ProjectRepoHost.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"        if (!ProjectRepoHost.isValidProjectRepoHost(projectRepoHost)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(ProjectRepoHost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"chia-yh"},"content":"        final ProjectRepoHost modelRepoHost \u003d new ProjectRepoHost(projectRepoHost);","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"        if (projectRepoName \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"                    ProjectRepoName.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"        if (!ProjectRepoName.isValidProjectRepoName(projectRepoName)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(ProjectRepoName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"        final ProjectRepoName modelRepoName \u003d new ProjectRepoName(projectRepoName);","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"        if (projectDeadline \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"chia-yh"},"content":"                    ProjectDeadline.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"        if (!ProjectDeadline.isValidProjectDeadline(projectDeadline)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"            throw new IllegalValueException(ProjectDeadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"        final ProjectDeadline modelDeadline \u003d new ProjectDeadline(projectDeadline);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"cmang12"},"content":"        if (projectMeeting \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"cmang12"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"cmang12"},"content":"                    ProjectMeeting.class.getSimpleName()));","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"cmang12"},"content":"        if (!ProjectMeeting.isValidProjectMeeting(projectMeeting)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"cmang12"},"content":"            throw new IllegalValueException(ProjectMeeting.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"cmang12"},"content":"        final ProjectMeeting modelMeeting \u003d new ProjectMeeting(projectMeeting);","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"chia-yh"},"content":"        final Set\u003cPerson\u003e modelMembers \u003d new HashSet\u003c\u003e(projectMembers);","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"cmang12"},"content":"        return new Project(modelName, modelRepoHost, modelRepoName, modelDeadline, modelMeeting, modelMembers);","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cmang12":22,"chia-yh":110}},{"path":"src/main/java/seedu/socket/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chia-yh":2,"-":45,"nus-jeff":1}},{"path":"src/main/java/seedu/socket/storage/JsonSerializableSocket.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":" * An Immutable SOCket that is serializable to JSON format.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"@JsonRootName(value \u003d \"socket\")","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"class JsonSerializableSocket {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"Projects list contains duplicate project(s).\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    public static final String MESSAGE_MISSING_PERSON \u003d \"Persons list does not contain project member(s).\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    private final List\u003cJsonAdaptedProject\u003e projects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"     * Constructs a {@code JsonSerializableSocket} with the given persons and projects.","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"    public JsonSerializableSocket(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"            @JsonProperty(\"projects\") List\u003cJsonAdaptedProject\u003e projects) {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        this.projects.addAll(projects);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"     * Converts a given {@code ReadOnlySocket} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableSocket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"    public JsonSerializableSocket(ReadOnlySocket source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        projects.addAll(source.getProjectList().stream().map(JsonAdaptedProject::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"     * Converts this SOCket into the model\u0027s {@code Socket} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    public Socket toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        Socket socket \u003d new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"            if (socket.hasPerson(person)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"            socket.addPerson(person);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        for (JsonAdaptedProject jsonAdaptedProject : projects) {","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"            Project project \u003d jsonAdaptedProject.toModelType();","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"            if (socket.hasProject(project)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"            // sync Person references in Project","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"            Set\u003cPerson\u003e memberReferences \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"            for (Person member : project.getMembers()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"                if (socket.hasPerson(member)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"                    Person personReference \u003d socket.getPerson(member);","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"                    memberReferences.add(personReference);","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"                } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"                    throw new IllegalValueException(MESSAGE_MISSING_PERSON);","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"            Project projectWithReferences \u003d new Project(project.getName(), project.getRepoHost(),","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"cmang12"},"content":"                    project.getRepoName(), project.getDeadline(), project.getMeeting(), memberReferences);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"            socket.addProject(projectWithReferences);","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"        return socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cmang12":1,"chia-yh":46,"-":41}},{"path":"src/main/java/seedu/socket/storage/JsonSocketStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.FileUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.JsonUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":" * A class to access SOCket data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"public class JsonSocketStorage implements SocketStorage {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonSocketStorage.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    public JsonSocketStorage(Path filePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    public Path getSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"    public Optional\u003cReadOnlySocket\u003e readSocket() throws DataConversionException {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        return readSocket(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"     * Similar to {@link #readSocket()}.","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"    public Optional\u003cReadOnlySocket\u003e readSocket(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        Optional\u003cJsonSerializableSocket\u003e jsonSocket \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"                filePath, JsonSerializableSocket.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        if (!jsonSocket.isPresent()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"            return Optional.of(jsonSocket.get().toModelType());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"    public void saveSocket(ReadOnlySocket socket) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        saveSocket(socket, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"     * Similar to {@link #saveSocket(ReadOnlySocket)}.","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"    public void saveSocket(ReadOnlySocket socket, Path filePath) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        requireNonNull(socket);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableSocket(socket), filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chia-yh":26,"-":54}},{"path":"src/main/java/seedu/socket/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.JsonUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chia-yh":5,"-":42}},{"path":"src/main/java/seedu/socket/storage/SocketStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":" * Represents a storage for {@link Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"public interface SocketStorage {","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    Path getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"     * Returns {@code Socket} data as a {@link ReadOnlySocket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    Optional\u003cReadOnlySocket\u003e readSocket() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"     * @see #getSocketFilePath()","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"    Optional\u003cReadOnlySocket\u003e readSocket(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"     * Saves the given {@link ReadOnlySocket} to the storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"     * @param socket cannot be null.","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"    void saveSocket(ReadOnlySocket socket) throws IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"     * @see #saveSocket(ReadOnlySocket)","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"    void saveSocket(ReadOnlySocket socket, Path filePath) throws IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chia-yh":17,"-":30}},{"path":"src/main/java/seedu/socket/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"public interface Storage extends SocketStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    Path getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    Optional\u003cReadOnlySocket\u003e readSocket() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    void saveSocket(ReadOnlySocket socket) throws IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chia-yh":9,"-":23}},{"path":"src/main/java/seedu/socket/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":" * Manages storage of SOCket data in local storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    private SocketStorage socketStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"     * Creates a {@code StorageManager} with the given {@code SocketStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    public StorageManager(SocketStorage socketStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        this.socketStorage \u003d socketStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Socket methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"    public Path getSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"        return socketStorage.getSocketFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    public Optional\u003cReadOnlySocket\u003e readSocket() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        return readSocket(socketStorage.getSocketFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"    public Optional\u003cReadOnlySocket\u003e readSocket(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        return socketStorage.readSocket(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"    public void saveSocket(ReadOnlySocket socket) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"        saveSocket(socket, socketStorage.getSocketFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"    public void saveSocket(ReadOnlySocket socket, Path filePath) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"        socketStorage.saveSocket(socket, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":22,"-":56}},{"path":"src/main/java/seedu/socket/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":" * Represents a storage for {@link seedu.socket.model.UserPrefs}.","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"     * Saves the given {@link seedu.socket.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chia-yh":6,"-":30}},{"path":"src/main/java/seedu/socket/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.CommandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"         * @see seedu.socket.logic.Logic#execute(String)","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"chia-yh":5,"-":80}},{"path":"src/main/java/seedu/socket/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.MainApp;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":" * Controller for a Help Window.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t12-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"    public static final String HELP_MESSAGE \u003d \"COMMAND LIST\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"            + \"\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"            + \"1. Adding a person: add\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"            + \"Format: add n/NAME [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] \"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"            + \"[g/GITHUB_PROFILE] [l/LANGUAGE] [t/TAG]…\\n\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"            + \"2. Listing all persons\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"            + \"Format: list [t/TAG]\\n\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"            + \"3. Editing a person : edit\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"            + \"Format: edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] \"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"            + \"[g/GITHUBPROFILE] [l/LANGUAGE] [t/TAG]…\\n\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"            + \"4. Removing a person\u0027s attribute : remove\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"            + \"Format: remove INDEX [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] \\n\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"            + \"[g/GITHUBPROFILE] [l/LANGUAGE] [t/TAG]…\\n\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"            + \"5. Clearing groups of person : clear\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"            + \"Format: clear [t/TAG]...\\n\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"            + \"6. Locating persons by name or tag: find\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"            + \"Format: find KEYWORD [MORE_KEYWORDS]… [t/TAG]…\\n\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"            + \"7. Deleting a person : delete\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"cmang12"},"content":"            + \"Format: delete INDEX\\n\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"            + \"8. Sorting persons (by other fields) : sort\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"            + \"Format: sort [CATEGORY]\\n\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"            + \"9. Viewing a person\u0027s detail : view\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"            + \"Format: view INDEX\\n\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"            + \"10. Undoing a change : undo\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"            + \"Format: undo\\n\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"            + \"11. Redoing a change : redo\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"            + \"Format: redo\"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"            + \"12. Exiting the program : exit\\n\\n\"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"            + \"For more info:\";","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"    private Hyperlink userGuideLink;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"        userGuideLink.setText(USERGUIDE_URL);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"chia-yh"},"content":"     * Opens the URL to the user guide in a browser.","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"chia-yh"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"    private void openUserGuide() {","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"        MainApp.openUrl(USERGUIDE_URL);","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"        userGuideLink.setVisited(false);","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cmang12":13,"huanghao1998":15,"chia-yh":19,"-":96}},{"path":"src/main/java/seedu/socket/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.Logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.CommandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"    private PersonDetailPanel personDetailPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"    private StackPane personDetailPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"huanghao1998"},"content":"        personListPanel \u003d new PersonListPanel(logic);","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"huanghao1998"},"content":"        personDetailPanel \u003d new PersonDetailPanel(logic.getViewedPerson());","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"huanghao1998"},"content":"        personDetailPanelPlaceholder.getChildren().add(personDetailPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"chia-yh"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getSocketFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"huanghao1998"},"content":"    public PersonDetailPanel getPersonDetailPanel() {","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"huanghao1998"},"content":"        return personDetailPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"chia-yh"},"content":"     * @see seedu.socket.logic.Logic#execute(String)","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"huanghao1998":12,"chia-yh":9,"-":186}},{"path":"src/main/java/seedu/socket/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":" * A UI component that displays brief information of a {@code Person}.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"    private Label profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"        if (!person.getProfile().value.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"            profile.setText(\"@\" + person.getProfile().value);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"            profile.setText(\"Not available\");","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"huanghao1998":5,"chia-yh":4,"-":66}},{"path":"src/main/java/seedu/socket/ui/PersonDetailCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":" * A UI component that displays all information of a {@code Person}.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"public class PersonDetailCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"    private static final String FXML \u003d \"PersonDetailCard.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"    public final Person person;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"    private HBox detailPane;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"    private Label name;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"    private Label profile;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"    private Label phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"    private Label address;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"    private Label email;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"    private FlowPane languages;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"    public PersonDetailCard(Person person) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"        profile.setText(person.getProfile().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"        person.getLanguages().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"                .sorted(Comparator.comparing(language -\u003e language.languageName))","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"                .forEach(language -\u003e languages.getChildren().add(new Label(language.languageName + \" | \")));","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"        return person.equals(card.person);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"huanghao1998":75,"chia-yh":4}},{"path":"src/main/java/seedu/socket/ui/PersonDetailPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":" * Panel containing the person\u0027s information.","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"public class PersonDetailPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"    private static final String FXML \u003d \"PersonDetailPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonDetailPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"    private ListView\u003cPerson\u003e personDetailListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"     * Creates a {@code PersonDetailPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"    public PersonDetailPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"        personDetailListView.setMouseTransparent(true);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"        personDetailListView.setFocusTraversable(false);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"        personDetailListView.setItems(personList);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"        personDetailListView.setCellFactory(listView -\u003e new PersonDetailListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"    class PersonDetailListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"                setGraphic(new PersonDetailCard(person).getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"huanghao1998":46,"chia-yh":3}},{"path":"src/main/java/seedu/socket/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.Logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"    public PersonListPanel(Logic logic) {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"        personListView.setItems(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"                setOnMouseClicked(e -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"                    logger.info(\"An item selected: \" + PersonListViewCell.super.getItem().toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"                    if (!logic.getViewedPerson().isEmpty()","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"                            \u0026\u0026 PersonListViewCell.super.getItem().isSamePerson(logic.getViewedPerson().get(0))) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"                        personListView.getSelectionModel().clearSelection();","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"                        logic.setViewedPerson(-1);","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"                    } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"                        logic.setViewedPerson(getIndex());","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"                    }","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"                });","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"huanghao1998":14,"chia-yh":4,"-":44}},{"path":"src/main/java/seedu/socket/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":" * UI for the status bar that is displayed at the header of the application.","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chia-yh":2,"-":26}},{"path":"src/main/java/seedu/socket/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":" * UI for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":2,"-":26}},{"path":"src/main/java/seedu/socket/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"chia-yh":1,"-":12}},{"path":"src/main/java/seedu/socket/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.MainApp;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.LogsCenter;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.StringUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.Logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chia-yh":5,"-":83}},{"path":"src/main/java/seedu/socket/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.MainApp;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"chia-yh":2,"-":86}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    -fx-font-size: 18pt;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"huanghao1998"},"content":"    -fx-label-padding: 10 0 10 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap :0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"    -fx-padding: 0 0 10 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"    -fx-background-insets: 0 0 10 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"huanghao1998"},"content":".list-cell:filled:hover {","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"huanghao1998"},"content":"    -fx-background-color: #424d6f","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"huanghao1998"},"content":"    -fx-border-radius: 10;","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"huanghao1998"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":138,"author":{"gitId":"huanghao1998"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"huanghao1998"},"content":"    -fx-text-fill: #A9A9A9;","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"huanghao1998"},"content":"    -fx-background-color: #485BBC;","lastModifiedDate":"2023-03-15"},{"lineNumber":355,"author":{"gitId":"huanghao1998"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-15"},{"lineNumber":356,"author":{"gitId":"huanghao1998"},"content":"    -fx-border-radius: 8;","lastModifiedDate":"2023-03-15"},{"lineNumber":357,"author":{"gitId":"huanghao1998"},"content":"    -fx-background-radius: 8;","lastModifiedDate":"2023-03-15"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"huanghao1998":18,"-":341}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e  \u003cicons\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"      \u003cVBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"            \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"            \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"               \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"                     \u003cHyperlink fx:id\u003d\"userGuideLink\" onAction\u003d\"#openUserGuide\"/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"                     \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"chia-yh":13,"-":33}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"\u003cfx:root minHeight\u003d\"650.0\" minWidth\u003d\"650.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"SOCket\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"            \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"              \u003citems\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"                    \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"330.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"                  \u003cStackPane fx:id\u003d\"personDetailPanelPlaceholder\" minWidth\u003d\"300.0\" prefWidth\u003d\"300.0\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"              \u003c/items\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"            \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"              \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"huanghao1998":19,"-":48}},{"path":"src/main/resources/view/PersonDetailCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huanghao1998"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"detailPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"        \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"            \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"            \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"                \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" spacing\u003d\"5.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"                        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"                    \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"                          \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"label-header\" text\u003d\"\\$first\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"                        \u003cFlowPane fx:id\u003d\"languages\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"                        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"                        \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"GitHub: \"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel fx:id\u003d\"profile\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$GitHub\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"                        \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" text\u003d\"Phone:\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$phone\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"                        \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"Address:\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$address\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"                        \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"Email:\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"                                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"                                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"                                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"                                \u003c/Label\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"                                \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"                    \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"            \u003crowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"                \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"            \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"        \u003c/GridPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"huanghao1998":72}},{"path":"src/main/resources/view/PersonDetailPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huanghao1998"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"      \u003cListView fx:id\u003d\"personDetailListView\" cache\u003d\"true\" layoutX\u003d\"10.0\" layoutY\u003d\"10.0\" pickOnBounds\u003d\"false\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"huanghao1998":10,"chia-yh":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"   \u003cHBox fillHeight\u003d\"false\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"       \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"80.0\" spacing\u003d\"3.0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"           \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"           \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"             \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"               \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"               \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"             \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"                     \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"           \u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"           \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"                  \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"                     \u003cFont size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"                  \u003c/font\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"               \u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"                  \u003cLabel styleClass\u003d\"cell_small_label\" text\u003d\"GitHub: \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"               \u003cLabel fx:id\u003d\"profile\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$GitHub\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"                        \u003cFont size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"                  \u003cInsets left\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"       \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"      \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"  \u003cGridPane alignment\u003d\"CENTER_LEFT\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" prefWidth\u003d\"80.0\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"      \u003cchildren\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER_LEFT\" prefWrapLength\u003d\"300.0\" rowValignment\u003d\"BASELINE\" GridPane.halignment\u003d\"LEFT\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"      \u003c/children\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"         \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"      \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"         \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"huanghao1998":43,"-":27}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"  \u003cListView fx:id\u003d\"personListView\" pickOnBounds\u003d\"false\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"huanghao1998":2,"-":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"huanghao1998":2,"-":6}},{"path":"src/test/java/seedu/socket/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"chia-yh":1,"-":57}},{"path":"src/test/java/seedu/socket/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chia-yh":1,"-":26}},{"path":"src/test/java/seedu/socket/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":2,"-":133}},{"path":"src/test/java/seedu/socket/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.core.index;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"chia-yh":2,"-":58}},{"path":"src/test/java/seedu/socket/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"chia-yh":2,"-":34}},{"path":"src/test/java/seedu/socket/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"chia-yh":3,"-":105}},{"path":"src/test/java/seedu/socket/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Config;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chia-yh":4,"-":112}},{"path":"src/test/java/seedu/socket/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":2,"-":21}},{"path":"src/test/java/seedu/socket/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.TestUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":3,"-":42}},{"path":"src/test/java/seedu/socket/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.commons.util;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"nus-jeff"},"content":"    //---------------- Tests for convertArgumentsIntoList --------------------------------------","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"nus-jeff"},"content":"    public void test_convertArgumentsIntoList_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"nus-jeff"},"content":"        // No white spaces","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e expectedNoSpace \u003d Arrays.asList(\"test\");","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(expectedNoSpace, StringUtil.convertArgumentsIntoList(\"test\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"nus-jeff"},"content":"        // White spaces only in front and back","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(expectedNoSpace, StringUtil.convertArgumentsIntoList(\" test \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"nus-jeff"},"content":"        // Only Single white space","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e expectedWhiteSpace \u003d Arrays.asList(\"first\", \"second\", \"third\");","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(expectedWhiteSpace, StringUtil.convertArgumentsIntoList(\"first second third\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"nus-jeff"},"content":"        // Multiple white space","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(expectedWhiteSpace, StringUtil.convertArgumentsIntoList(\"first  \\n  second \\t  third\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chia-yh":2,"-":141,"nus-jeff":24}},{"path":"src/test/java/seedu/socket/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.LANGUAGE_DESC_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PROFILE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.AddCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.CommandResult;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ListCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.JsonSocketStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.storage.StorageManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        JsonSocketStorage addressBookStorage \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"                new JsonSocketStorage(temporaryFolder.resolve(\"socket.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"        // Setup LogicManager with JsonSocketIoExceptionThrowingStub","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        JsonSocketStorage socketStorage \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"                new JsonSocketIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionSocket.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"        StorageManager storage \u003d new StorageManager(socketStorage, userPrefsStorage);","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PROFILE_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + LANGUAGE_DESC_PYTHON;","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"    private static class JsonSocketIoExceptionThrowingStub extends JsonSocketStorage {","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"        private JsonSocketIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"chia-yh"},"content":"        public void saveSocket(ReadOnlySocket socket, Path filePath) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"chia-yh":37,"-":127}},{"path":"src/test/java/seedu/socket/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"        model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        Person personInList \u003d model.getSocket().getPersonList().get(0);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chia-yh":12,"-":33}},{"path":"src/test/java/seedu/socket/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"        public ObservableList\u003cPerson\u003e getViewedPerson() {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"huanghao1998"},"content":"        public void updateViewedPerson(Person person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"huanghao1998"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"        public ObservableList\u003cProject\u003e getViewedProject() {","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"        public void updateViewedProject(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"chia-yh"},"content":"        public Path getSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"        public void setSocketFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"        public void setSocket(ReadOnlySocket newData) {","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"        public ReadOnlySocket getSocket() {","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"huanghao1998"},"content":"        @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"huanghao1998"},"content":"        public boolean hasDeleteMultiplePerson(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"huanghao1998"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"dillongoh"},"content":"        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"dillongoh"},"content":"        public void sortPersonList(String category) {","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"chia-yh"},"content":"        public void addProject(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"chia-yh"},"content":"        public boolean hasProject(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"chia-yh"},"content":"        public void deleteProject(Project target) {","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"chia-yh"},"content":"        public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"chia-yh"},"content":"        public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"chia-yh"},"content":"        public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"chia-yh"},"content":"        public void sortProjectList(String category) {","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"dillongoh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"dillongoh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":219,"author":{"gitId":"chia-yh"},"content":"        public void commitSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":220,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":222,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":223,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":224,"author":{"gitId":"chia-yh"},"content":"        public void undoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":225,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":226,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"chia-yh"},"content":"        public void redoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"chia-yh"},"content":"        public boolean canUndoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":235,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":236,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":237,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"chia-yh"},"content":"        public boolean canRedoSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"chia-yh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":277,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":281,"author":{"gitId":"chia-yh"},"content":"        public ReadOnlySocket getSocket() {","lastModifiedDate":"2023-03-16"},{"lineNumber":282,"author":{"gitId":"chia-yh"},"content":"            return new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":284,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":285,"author":{"gitId":"chia-yh"},"content":"        // AddCommand#execute calls commitSocket()","lastModifiedDate":"2023-03-11"},{"lineNumber":286,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":287,"author":{"gitId":"chia-yh"},"content":"        public void commitSocket() {","lastModifiedDate":"2023-03-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"huanghao1998":10,"chia-yh":93,"-":183,"dillongoh":5}},{"path":"src/test/java/seedu/socket/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.model.person.predicate.FindCommandTagPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"    public void execute_clearTagNotExist_throwCommandException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"        Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"CS2103\", \"Haha\");","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"        FindCommandTagPredicate predicate \u003d new FindCommandTagPredicate(tagKeywords);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"        ClearCommand clearCommand \u003d new ClearCommand(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"        assertThrows(CommandException.class, ClearCommand.MESSAGE_NOT_SUCCESS, () -\u003e clearCommand.execute(model));","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"    public void execute_nonEmptyClearSocket_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        expectedModel.setSocket(new Socket());","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"        FindCommandTagPredicate emptyPredicate \u003d new FindCommandTagPredicate(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"        assertCommandSuccess(new ClearCommand(emptyPredicate), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"    public void testEqual() {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"CS2103\", \"Haha\");","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"        FindCommandTagPredicate predicate \u003d new FindCommandTagPredicate(tagKeywords);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"        ClearCommand clearCommand \u003d new ClearCommand(predicate);","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"        // same tag predicate -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(clearCommand.equals(new ClearCommand(predicate)));","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(clearCommand.equals(clearCommand));","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(clearCommand.equals(1));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(clearCommand.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"huanghao1998":36,"chia-yh":10,"-":14}},{"path":"src/test/java/seedu/socket/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"chia-yh":1,"-":53}},{"path":"src/test/java/seedu/socket/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.FindCommandNamePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.predicate.FindCommandProjectNamePredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.RemovePersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.TypicalPersons;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    public static final String VALID_GITHUBPROFILE_AMY \u003d \"amy-bee\";","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"    public static final String VALID_GITHUBPROFILE_BOB \u003d \"bob-choo\";","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"    public static final String VALID_LANGUAGE_PYTHON \u003d \"Python\";","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"    public static final String VALID_LANGUAGE_CPLUSPLUS \u003d \"C++\";","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"    public static final String PROFILE_DESC_AMY \u003d \" \" + PREFIX_PROFILE + VALID_GITHUBPROFILE_AMY;","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"    public static final String PROFILE_DESC_BOB \u003d \" \" + PREFIX_PROFILE + VALID_GITHUBPROFILE_BOB;","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    public static final String LANGUAGE_DESC_PYTHON \u003d \" \" + PREFIX_LANGUAGE + VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"    public static final String LANGUAGE_DESC_CPLUSPLUS \u003d \" \" + PREFIX_LANGUAGE + VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"    public static final String INVALID_PROFILE_DESC \u003d \" \" + PREFIX_PROFILE + \"james^\"; // \u0027^\u0027 not allowed in profile","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS + \" \"; // \" \" not allowed for addresses","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"    public static final String INVALID_LANGUAGE_DESC \u003d \" \" + PREFIX_LANGUAGE + \"C^\"; // \u0027^\u0027 not allowed in languages","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_NAME_ALPHA \u003d \"Alpha Project\";","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_NAME_BRAVO \u003d \"Bravo Project\";","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_REPO_HOST_ALPHA \u003d \"alice-pauline\";","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_REPO_HOST_BRAVO \u003d \"carl-kurz\";","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_REPO_NAME_ALPHA \u003d \"AlphaRepo\";","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_REPO_NAME_BRAVO \u003d \"BravoRepo\";","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_DEADLINE_ALPHA \u003d \"01/01/23-2359\";","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"    public static final String VALID_PROJECT_DEADLINE_BRAVO \u003d \"02/01/23-2359\";","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"cmang12"},"content":"    public static final String VALID_PROJECT_MEETING_ALPHA \u003d \"01/01/23-1000\";","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"cmang12"},"content":"    public static final String VALID_PROJECT_MEETING_BRAVO \u003d \"02/01/23-1000\";","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"    public static final EditCommand.EditPersonDescriptor EDIT_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"    public static final EditCommand.EditPersonDescriptor EDIT_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"    public static final RemoveCommand.RemovePersonDescriptor REMOVE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"    public static final RemoveCommand.RemovePersonDescriptor REMOVE_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"        EDIT_DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).withProfile(VALID_GITHUBPROFILE_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"                .withLanguages(VALID_LANGUAGE_PYTHON)","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"        EDIT_DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).withProfile(VALID_GITHUBPROFILE_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"                .withLanguages(VALID_LANGUAGE_CPLUSPLUS)","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"        REMOVE_DESC_AMY \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"                .withPerson(TypicalPersons.AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"                .withProfile(VALID_GITHUBPROFILE_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withLanguages(VALID_LANGUAGE_PYTHON)","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"        REMOVE_DESC_BOB \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"                .withPerson(TypicalPersons.BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"huanghao1998"},"content":"                .withProfile(VALID_GITHUBPROFILE_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"huanghao1998"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withLanguages(VALID_LANGUAGE_CPLUSPLUS)","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"huanghao1998"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"chia-yh"},"content":"     * - the {@code Socket}, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"chia-yh"},"content":"        Socket expectedSocket \u003d new Socket(actualModel.getSocket());","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":151,"author":{"gitId":"chia-yh"},"content":"        assertEquals(expectedSocket, actualModel.getSocket());","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"chia-yh"},"content":"     * {@code model}\u0027s {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"nus-jeff"},"content":"        model.updateFilteredPersonList(new FindCommandNamePredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"chia-yh"},"content":"     * Updates {@code model}\u0027s filtered list to show only the project at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"chia-yh"},"content":"     * {@code model}\u0027s {@code Socket}.","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"chia-yh"},"content":"    public static void showProjectAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"chia-yh"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredProjectList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"chia-yh"},"content":"        Project project \u003d model.getFilteredProjectList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"chia-yh"},"content":"        final String[] splitName \u003d project.getName().projectName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"chia-yh"},"content":"        model.updateFilteredProjectList(new FindCommandProjectNamePredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"chia-yh"},"content":"        assertEquals(1, model.getFilteredProjectList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"chia-yh"},"content":"     * Removes the person at index 1 in {@code model}\u0027s filtered list from the {@code model}\u0027s {@code Socket}.","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":186,"author":{"gitId":"chia-yh"},"content":"    public static void deletePersonIndexOne(Model model) {","lastModifiedDate":"2023-03-11"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-11"},{"lineNumber":188,"author":{"gitId":"chia-yh"},"content":"        Person person \u003d model.getFilteredPersonList().get(indexOne.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"chia-yh"},"content":"        model.deletePerson(person);","lastModifiedDate":"2023-03-11"},{"lineNumber":190,"author":{"gitId":"chia-yh"},"content":"        model.commitSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":191,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cmang12":2,"huanghao1998":17,"chia-yh":60,"-":103,"dillongoh":8,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.TypicalPersons;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.TypicalProjects;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    private Model modelWithProjects \u003d new ModelManager(TypicalProjects.getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"    public void execute_validIndexUnfilteredListPersonInProject_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        Person personToDelete \u003d modelWithProjects.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"        ModelManager expectedModel \u003d new ModelManager(modelWithProjects.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(deleteCommand, modelWithProjects, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"        // ensures that outOfBoundIndex is still in bounds of socket list","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSocket().getPersonList().size());","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"chia-yh":33,"-":91}},{"path":"src/test/java/seedu/socket/logic/commands/DeleteProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.showProjectAtIndex;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PROJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_SECOND_PROJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalProjects.getTypicalSocket;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":" * {@code DeleteProjectCommand}.","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"public class DeleteProjectCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    private Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST_PROJECT.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(deleteProjectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredProjectList().size() + 1);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        assertCommandFailure(deleteProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        showProjectAtIndex(model, INDEX_FIRST_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST_PROJECT.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        showNoProject(expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(deleteProjectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        showProjectAtIndex(model, INDEX_FIRST_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PROJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        // ensures that outOfBoundIndex is still in bounds of socket list","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSocket().getProjectList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        assertCommandFailure(deleteProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"    public void equals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand deleteProjectFirstCommand \u003d new DeleteProjectCommand(INDEX_FIRST_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand deleteProjectSecondCommand \u003d new DeleteProjectCommand(INDEX_SECOND_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"        assertTrue(deleteProjectFirstCommand.equals(deleteProjectFirstCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand deleteProjectFirstCommandCopy \u003d new DeleteProjectCommand(INDEX_FIRST_PROJECT);","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"        assertTrue(deleteProjectFirstCommand.equals(deleteProjectFirstCommandCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"        assertFalse(deleteProjectFirstCommand.equals(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"        assertFalse(deleteProjectSecondCommand.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"chia-yh"},"content":"        assertFalse(deleteProjectFirstCommand.equals(deleteProjectSecondCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"    private void showNoProject(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"        model.updateFilteredProjectList(p -\u003e false);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"        assertTrue(model.getFilteredProjectList().isEmpty());","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"chia-yh":109}},{"path":"src/test/java/seedu/socket/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EDIT_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EDIT_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"    private Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"                .withLanguages(VALID_LANGUAGE_PYTHON, VALID_LANGUAGE_CPLUSPLUS).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"                .withPhone(VALID_PHONE_BOB).withLanguages(VALID_LANGUAGE_CPLUSPLUS)","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"    public void execute_languageFieldSpecifiedExistingLanguageFieldUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"                .withLanguages(VALID_LANGUAGE_PYTHON, VALID_LANGUAGE_CPLUSPLUS).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"                .withPhone(VALID_PHONE_BOB).withLanguages(VALID_LANGUAGE_PYTHON, VALID_LANGUAGE_CPLUSPLUS).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"        Person personInList \u003d model.getSocket().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"chia-yh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSocket().getPersonList().size());","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":173,"author":{"gitId":"chia-yh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"huanghao1998"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, EDIT_DESC_AMY);","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"huanghao1998"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(EDIT_DESC_AMY);","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, EDIT_DESC_AMY)));","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, EDIT_DESC_BOB)));","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"huanghao1998":4,"chia-yh":55,"-":135}},{"path":"src/test/java/seedu/socket/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EDIT_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EDIT_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(EDIT_DESC_AMY);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(EDIT_DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(EDIT_DESC_AMY.equals(EDIT_DESC_AMY));","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(EDIT_DESC_BOB));","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(EDIT_DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(EDIT_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"huanghao1998":17,"chia-yh":10,"-":32}},{"path":"src/test/java/seedu/socket/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chia-yh":5,"-":15}},{"path":"src/test/java/seedu/socket/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.FindCommandPersonPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    private Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstSingletonList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondSingletonList \u003d Collections.singletonList(\"second\");","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate firstPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"                        firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"                        firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"                        firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"                        firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"                        firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"                        firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"                        firstSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondNamePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"                secondSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondProfilePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"                secondSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondPhonePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"                secondSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondEmailPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"                secondSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondAddressPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"                secondSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondLanguagePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"                secondSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondTagPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"nus-jeff"},"content":"                firstSingletonList,","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"nus-jeff"},"content":"                secondSingletonList);","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findNameSecondCommand \u003d new FindCommand(secondNamePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findProfileSecondCommand \u003d new FindCommand(secondProfilePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findPhoneSecondCommand \u003d new FindCommand(secondPhonePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findEmailSecondCommand \u003d new FindCommand(secondEmailPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findAddressSecondCommand \u003d new FindCommand(secondAddressPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findLanguageSecondCommand \u003d new FindCommand(secondLanguagePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findTagSecondCommand \u003d new FindCommand(secondTagPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findNameSecondCommand.equals(findNameSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findProfileSecondCommand.equals(findProfileSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findPhoneSecondCommand.equals(findPhoneSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findEmailSecondCommand.equals(findEmailSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findAddressSecondCommand.equals(findAddressSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findLanguageSecondCommand.equals(findLanguageSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findTagSecondCommand.equals(findTagSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findNameSecondCommandCopy \u003d new FindCommand(secondNamePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findProfileSecondCommandCopy \u003d new FindCommand(secondProfilePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findPhoneSecondCommandCopy \u003d new FindCommand(secondPhonePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findEmailSecondCommandCopy \u003d new FindCommand(secondEmailPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findAddressSecondCommandCopy \u003d new FindCommand(secondAddressPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findLanguageSecondCommandCopy \u003d new FindCommand(secondLanguagePersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findTagSecondCommandCopy \u003d new FindCommand(secondTagPersonPredicate);","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findNameSecondCommand.equals(findNameSecondCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findProfileSecondCommand.equals(findProfileSecondCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findPhoneSecondCommand.equals(findPhoneSecondCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findEmailSecondCommand.equals(findEmailSecondCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findAddressSecondCommand.equals(findAddressSecondCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findLanguageSecondCommand.equals(findLanguageSecondCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(findTagSecondCommand.equals(findTagSecondCommandCopy));","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findNameSecondCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findProfileSecondCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findPhoneSecondCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findEmailSecondCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findAddressSecondCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findLanguageSecondCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findTagSecondCommand.equals(1));","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findNameSecondCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findProfileSecondCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findPhoneSecondCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findEmailSecondCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findAddressSecondCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findLanguageSecondCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findTagSecondCommand.equals(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"nus-jeff"},"content":"        // different findCommand -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findFirstCommand.equals(findNameSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findFirstCommand.equals(findProfileSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findFirstCommand.equals(findPhoneSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findFirstCommand.equals(findEmailSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findFirstCommand.equals(findAddressSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findFirstCommand.equals(findLanguageSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(findFirstCommand.equals(findTagSecondCommand));","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":171,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate predicate \u003d preparePersonPredicate(\" \",","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"nus-jeff"},"content":"                \" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":187,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate predicate \u003d preparePersonPredicate(\"Kurz Elle Kunz\",","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"nus-jeff"},"content":"                \" \",","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"nus-jeff"},"content":"                \" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":201,"author":{"gitId":"nus-jeff"},"content":"     * Parses {@code userInput} into a {@code FindCommandPersonPredicate}.","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":203,"author":{"gitId":"nus-jeff"},"content":"    private FindCommandPersonPredicate preparePersonPredicate(String nameInput,","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"nus-jeff"},"content":"                                                              String profileInput,","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"nus-jeff"},"content":"                                                              String phoneInput,","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"nus-jeff"},"content":"                                                              String emailInput,","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"nus-jeff"},"content":"                                                              String addressInput,","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"nus-jeff"},"content":"                                                              String languageInput,","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"nus-jeff"},"content":"                                                              String tagInput) {","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e nameList \u003d Arrays.asList(nameInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e profileList \u003d Arrays.asList(profileInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e phoneList \u003d Arrays.asList(phoneInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e emailList \u003d Arrays.asList(emailInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e addressList \u003d Arrays.asList(addressInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e languageList \u003d Arrays.asList(languageInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e tagList \u003d Arrays.asList(tagInput.split(\"\\\\s+\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"nus-jeff"},"content":"        return new FindCommandPersonPredicate(nameList,","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"nus-jeff"},"content":"                profileList,","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"nus-jeff"},"content":"                phoneList,","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"nus-jeff"},"content":"                emailList,","lastModifiedDate":"2023-03-12"},{"lineNumber":222,"author":{"gitId":"nus-jeff"},"content":"                addressList,","lastModifiedDate":"2023-03-12"},{"lineNumber":223,"author":{"gitId":"nus-jeff"},"content":"                languageList,","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"nus-jeff"},"content":"                tagList);","lastModifiedDate":"2023-03-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":226,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chia-yh":12,"-":55,"nus-jeff":160}},{"path":"src/test/java/seedu/socket/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chia-yh":5,"-":15}},{"path":"src/test/java/seedu/socket/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"cmang12"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"cmang12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"cmang12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.ListCommandParser;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandLanguagePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandTagPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        expectedModel \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e(); // no language keywords are given","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate langPredicate \u003d new ListCommandLanguagePredicate(languages);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate tagPredicate \u003d new ListCommandTagPredicate(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d new ListCommand(tagPredicate, langPredicate, false);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command,","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"cmang12"},"content":"                model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":62,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e(); // no language keywords are given","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate langPredicate \u003d new ListCommandLanguagePredicate(languages);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate tagPredicate \u003d new ListCommandTagPredicate(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d new ListCommand(tagPredicate, langPredicate, false);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command, model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"cmang12"},"content":"    public void execute_listIsFiltered_showsEverythingWithRandomArgs() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"cmang12"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"cmang12"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"cmang12"},"content":"            command \u003d new ListCommandParser().parse(\"random arg\");","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"cmang12"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"cmang12"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"cmang12"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command, model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"cmang12"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e firstTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"cmang12"},"content":"        firstTags.add(new Tag(\"friends\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e firstLanguages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"cmang12"},"content":"        firstLanguages.add(new Language(\"python\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate firstPredicateTag \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"                new ListCommandTagPredicate(firstTags);","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate firstPredicateLang \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"                new ListCommandLanguagePredicate(firstLanguages);","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e secondTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"cmang12"},"content":"        firstTags.add(new Tag(\"friend\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e secondLanguages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"cmang12"},"content":"        secondLanguages.add(new Language(\"java\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate secondPredicateTag \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"nus-jeff"},"content":"                new ListCommandTagPredicate(secondTags);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate secondPredicateLang \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"nus-jeff"},"content":"                new ListCommandLanguagePredicate(secondLanguages);","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"cmang12"},"content":"        ListCommand listFirstCommand \u003d new ListCommand(firstPredicateTag, firstPredicateLang, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"cmang12"},"content":"        ListCommand listSecondCommand \u003d new ListCommand(secondPredicateTag, secondPredicateLang, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"cmang12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"cmang12"},"content":"        assertTrue(listFirstCommand.equals(listFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"cmang12"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"cmang12"},"content":"        ListCommand listFirstCommandCopy \u003d new ListCommand(firstPredicateTag, firstPredicateLang, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"cmang12"},"content":"        assertTrue(listFirstCommand.equals(listFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"cmang12"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"cmang12"},"content":"        assertFalse(listFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"cmang12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"cmang12"},"content":"        assertFalse(listFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"cmang12"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"cmang12"},"content":"        assertFalse(listFirstCommand.equals(listSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"cmang12"},"content":"    public void execute_zeroTagKeywords_noPersonFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"cmang12"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e(); // no language keywords are given","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate langPredicate \u003d new ListCommandLanguagePredicate(languages);","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"cmang12"},"content":"        tags.add(new Tag(\"unknownTag\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate tagPredicate \u003d new ListCommandTagPredicate(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d new ListCommand(tagPredicate, langPredicate, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"cmang12"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate.and(langPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"cmang12"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"cmang12"},"content":"    public void execute_zeroLanguagesKeywords_noPersonFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"cmang12"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(); // no language keywords are given","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate tagPredicate \u003d new ListCommandTagPredicate(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"cmang12"},"content":"        languages.add(new Language(\"unknownLanguage\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate langPredicate \u003d new ListCommandLanguagePredicate(languages);","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d new ListCommand(tagPredicate, langPredicate, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"cmang12"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate.and(langPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"cmang12"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"cmang12"},"content":"    public void execute_tagKeyword_multiplePersonsFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"cmang12"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"cmang12"},"content":"        tags.add(new Tag(\"friends\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate tagPredicate \u003d new ListCommandTagPredicate(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate langPredicate \u003d new ListCommandLanguagePredicate(languages);","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d new ListCommand(tagPredicate, langPredicate, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"cmang12"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate.and(langPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"cmang12"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"cmang12"},"content":"    public void execute_languageKeyword_multiplePersonsFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"cmang12"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate tagPredicate \u003d new ListCommandTagPredicate(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"cmang12"},"content":"        languages.add(new Language(\"Java\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"cmang12"},"content":"        languages.add(new Language(\"JavaScript\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate langPredicate \u003d new ListCommandLanguagePredicate(languages);","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d new ListCommand(tagPredicate, langPredicate, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"cmang12"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate.and(langPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"cmang12"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"cmang12"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"cmang12"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"nus-jeff"},"content":"        ListCommandTagPredicate tagPredicate \u003d new ListCommandTagPredicate(tags);","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"cmang12"},"content":"        tags.add(new Tag(\"friends\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e languages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"cmang12"},"content":"        languages.add(new Language(\"Java\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"cmang12"},"content":"        languages.add(new Language(\"JavaScript\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"nus-jeff"},"content":"        ListCommandLanguagePredicate langPredicate \u003d new ListCommandLanguagePredicate(languages);","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"cmang12"},"content":"        ListCommand command \u003d new ListCommand(tagPredicate, langPredicate, true);","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"cmang12"},"content":"        expectedModel.updateFilteredPersonList(tagPredicate.and(langPredicate));","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"cmang12"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"cmang12"},"content":"        assertEquals(Arrays.asList(BENSON), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cmang12":124,"chia-yh":16,"-":27,"nus-jeff":26}},{"path":"src/test/java/seedu/socket/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.deletePersonIndexOne;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"class RedoCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    public void execute_noUndoneChangesToRevert_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"        assertThrows(CommandException.class, RedoCommand.MESSAGE_CANNOT_REDO, () -\u003e redoCommand.execute(model));","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    public void execute_hasUndoneChangesToRevert_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"        Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        model.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        expectedModel.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        expectedModel.redoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    public void execute_hasMultipleUndoneChangesToRevert_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        model.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        model.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"        expectedModel.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        expectedModel.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        expectedModel.redoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"        expectedModel.redoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chia-yh":65}},{"path":"src/test/java/seedu/socket/logic/commands/RemoveCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand.RemovePersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.RemovePersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemoveCommand.","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"public class RemoveCommandTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"    private Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"        PersonBuilder personInList \u003d new PersonBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"        Person removedFieldPerson \u003d personInList.withName(\"George Best\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"                .withPhone(\"9482442\")","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"                .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"                .withLanguages(\"Python\")","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"                .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        String expectedMessage \u003d String.format(RemoveCommand.MESSAGE_REMOVE_FIELD_SUCCESS, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"        expectedModel.setPerson(lastPerson, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"        assertCommandSuccess(removeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"        PersonBuilder personInList \u003d new PersonBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"        Person removedFieldPerson \u003d personInList.withName(\"George Best\")","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"                .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"                .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"                .withPhone(\"9482442\").withLanguages(\"Python\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"        String expectedMessage \u003d String.format(RemoveCommand.MESSAGE_REMOVE_FIELD_SUCCESS, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"        expectedModel.setPerson(lastPerson, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"        assertCommandSuccess(removeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"    public void execute_languageFieldSpecifiedExistingLanguageFieldUnfilteredList_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"huanghao1998"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"        PersonBuilder personInList \u003d new PersonBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"        Person removedFieldPerson \u003d personInList.withName(\"George Best\")","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"                .withPhone(\"9482442\")","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"                .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"huanghao1998"},"content":"                .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"                .withLanguages(VALID_LANGUAGE_PYTHON).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"        String expectedMessage \u003d String.format(RemoveCommand.MESSAGE_REMOVE_FIELD_SUCCESS, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"huanghao1998"},"content":"        expectedModel.setPerson(lastPerson, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"        assertCommandSuccess(removeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"    public void execute_clearTagAndLanguageFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"        Index indexBenson \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"        Person benson \u003d model.getFilteredPersonList().get(indexBenson.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"huanghao1998"},"content":"        PersonBuilder personInList \u003d new PersonBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"huanghao1998"},"content":"        Person removedFieldPerson \u003d personInList.withName(\"Benson Meier\")","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"huanghao1998"},"content":"                .withProfile(\"benson-meier\")","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"huanghao1998"},"content":"                .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"huanghao1998"},"content":"                .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"huanghao1998"},"content":"                .withPhone(\"98765432\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"huanghao1998"},"content":"                .withLanguages().withTags().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(indexBenson, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"huanghao1998"},"content":"        String expectedMessage \u003d String.format(RemoveCommand.MESSAGE_REMOVE_FIELD_SUCCESS, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"huanghao1998"},"content":"        expectedModel.setPerson(benson, removedFieldPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"huanghao1998"},"content":"        assertCommandSuccess(removeCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"huanghao1998"},"content":"    public void execute_specificFieldNotMatchUnfilteredList_failure() {","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"huanghao1998"},"content":"        Index indexBenson \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"huanghao1998"},"content":"                .withProfile(VALID_GITHUBPROFILE_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"huanghao1998"},"content":"                .withLanguages(VALID_LANGUAGE_CPLUSPLUS)","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"huanghao1998"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand removeCommand \u003d new RemoveCommand(indexBenson, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"huanghao1998"},"content":"        assertCommandFailure(removeCommand, model, RemoveCommand.MESSAGE_REMOVE_FIELD_NOT_MATCH);","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"huanghao1998"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"huanghao1998"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand editCommand \u003d new RemoveCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"huanghao1998"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"huanghao1998"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"huanghao1998"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"huanghao1998"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"huanghao1998"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"huanghao1998"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"huanghao1998"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"chia-yh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSocket().getPersonList().size());","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand editCommand \u003d new RemoveCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"huanghao1998"},"content":"                new RemovePersonDescriptorBuilder().build());","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"huanghao1998"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"huanghao1998":140,"chia-yh":27}},{"path":"src/test/java/seedu/socket/logic/commands/RemovePersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.REMOVE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.REMOVE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand.RemovePersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.RemovePersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.TypicalPersons;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"public class RemovePersonDescriptorTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptorWithSameValues \u003d new RemovePersonDescriptor(REMOVE_DESC_AMY);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"        descriptorWithSameValues.setPerson(TypicalPersons.AMY);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(REMOVE_DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(REMOVE_DESC_AMY.equals(REMOVE_DESC_AMY));","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(REMOVE_DESC_AMY.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(REMOVE_DESC_AMY.equals(5));","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"        // different values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(REMOVE_DESC_AMY.equals(REMOVE_DESC_BOB));","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor editedAmy \u003d new RemovePersonDescriptorBuilder(REMOVE_DESC_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"                .withPerson(TypicalPersons.AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(REMOVE_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"        // same phone -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor editedBob \u003d new RemovePersonDescriptorBuilder(REMOVE_DESC_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"                .withPerson(TypicalPersons.BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(REMOVE_DESC_BOB.equals(editedBob));","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"        editedAmy \u003d new RemovePersonDescriptorBuilder(REMOVE_DESC_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"                .withPerson(TypicalPersons.AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(REMOVE_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"        editedAmy \u003d new RemovePersonDescriptorBuilder(REMOVE_DESC_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"                .withPerson(TypicalPersons.AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(REMOVE_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"        editedAmy \u003d new RemovePersonDescriptorBuilder(REMOVE_DESC_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"                .withPerson(TypicalPersons.AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(REMOVE_DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"huanghao1998":55,"chia-yh":10}},{"path":"src/test/java/seedu/socket/logic/commands/SortCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_GITHUB;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"class SortCommandTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    private Model model;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"        model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    public void equals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        SortCommand sortFirstCommand \u003d new SortCommand(CATEGORY_NAME);","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        SortCommand sortSecondCommand \u003d new SortCommand(CATEGORY_ADDRESS);","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        SortCommand sortFirstCommandCopy \u003d new SortCommand(CATEGORY_NAME);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        assertTrue(sortFirstCommand.equals(sortFirstCommandCopy));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        assertFalse(sortFirstCommand.equals(1));","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        assertFalse(sortFirstCommand.equals(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        assertFalse(sortFirstCommand.equals(sortSecondCommand));","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"    public void execute_sortByName() {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        expectedModel.sortPersonList(CATEGORY_NAME);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        assertCommandSuccess(new SortCommand(CATEGORY_NAME), model, SortCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"            + CATEGORY_NAME, expectedModel);","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"    public void execute_sortByPhone() {","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"        expectedModel.sortPersonList(CATEGORY_PHONE);","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"        assertCommandSuccess(new SortCommand(CATEGORY_PHONE), model, SortCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"            + CATEGORY_PHONE, expectedModel);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"    public void execute_sortByEmail() {","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"        expectedModel.sortPersonList(CATEGORY_EMAIL);","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"        assertCommandSuccess(new SortCommand(CATEGORY_EMAIL), model, SortCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"            + CATEGORY_EMAIL, expectedModel);","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"    public void execute_sortByAddress() {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"        expectedModel.sortPersonList(CATEGORY_ADDRESS);","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"        assertCommandSuccess(new SortCommand(CATEGORY_ADDRESS), model, SortCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"            + CATEGORY_ADDRESS, expectedModel);","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"    public void execute_sortByGithub() {","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"        expectedModel.sortPersonList(CATEGORY_GITHUB);","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"        assertCommandSuccess(new SortCommand(CATEGORY_GITHUB), model, SortCommand.MESSAGE_SUCCESS","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"            + CATEGORY_GITHUB, expectedModel);","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"chia-yh":13,"dillongoh":72}},{"path":"src/test/java/seedu/socket/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.deletePersonIndexOne;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"class UndoCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    public void execute_noChangesToRevert_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"        assertThrows(CommandException.class, UndoCommand.MESSAGE_CANNOT_UNDO, () -\u003e undoCommand.execute(model));","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    public void execute_hasChangesToRevert_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"        Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        expectedModel.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"    public void execute_hasMultipleChangesToRevert_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(new Socket(model.getSocket()), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        deletePersonIndexOne(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"        expectedModel.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        expectedModel.undoSocket();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"chia-yh":57}},{"path":"src/test/java/seedu/socket/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.Messages;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ModelManager;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    private Model model \u003d new ModelManager(getTypicalSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS, personToView);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"        expectedModel.updateViewedPerson(personToView);","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS, personToView);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        Model expectedModel \u003d new ModelManager(model.getSocket(), new UserPrefs());","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"        expectedModel.updateViewedPerson(personToView);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getSocket().getPersonList().size());","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"    public void equals() {","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand deleteFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(viewFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"huanghao1998"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"huanghao1998":79,"chia-yh":17}},{"path":"src/test/java/seedu/socket/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_LANGUAGE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_PROFILE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.LANGUAGE_DESC_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.LANGUAGE_DESC_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PROFILE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PROFILE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.AddCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        // multiple profiles - last profile accepted","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PROFILE_DESC_AMY + PROFILE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"        // multiple languages - all accepted","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        Person expectedPersonMultipleLanguages \u003d new PersonBuilder(BOB).withLanguages(VALID_LANGUAGE_PYTHON,","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"                VALID_LANGUAGE_CPLUSPLUS).withTags().build();","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + LANGUAGE_DESC_PYTHON + LANGUAGE_DESC_CPLUSPLUS,","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPersonMultipleLanguages));","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PROFILE_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_AMY + LANGUAGE_DESC_PYTHON, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_GITHUBPROFILE_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"                + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"chia-yh"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"chia-yh"},"content":"        // invalid profile","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PROFILE_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"chia-yh"},"content":"                GitHubProfile.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"chia-yh"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"chia-yh"},"content":"        // invalid language","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + INVALID_LANGUAGE_DESC + TAG_DESC_FRIEND, Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":153,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"                + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PROFILE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"chia-yh"},"content":"                + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":162,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PROFILE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"chia-yh":105,"-":59,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"chia-yh":1,"-":149}},{"path":"src/test/java/seedu/socket/logic/parser/ClearCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huanghao1998"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"import seedu.socket.model.person.predicate.FindCommandTagPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"public class ClearCommandParserTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":"    private ClearCommandParser parser \u003d new ClearCommandParser();","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":"    public void parse_emptyArg_returnsClearCommand() {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":"        List\u003cString\u003e emptyKeywords \u003d Collections.emptyList();","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"        ClearCommand command \u003d new ClearCommand(new FindCommandTagPredicate(emptyKeywords));","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, \"\", command);","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"huanghao1998":22}},{"path":"src/test/java/seedu/socket/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.Command;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"chia-yh":3,"-":36}},{"path":"src/test/java/seedu/socket/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"chia-yh":6,"-":26}},{"path":"src/test/java/seedu/socket/logic/parser/DeleteProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PROJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":" * outside of the DeleteProjectCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":" * same path through the DeleteProjectCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"public class DeleteProjectCommandParserTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    private DeleteProjectCommandParser parser \u003d new DeleteProjectCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    public void parse_validArgs_returnsDeleteProjectCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteProjectCommand(INDEX_FIRST_PROJECT));","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"                DeleteProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"chia-yh":33}},{"path":"src/test/java/seedu/socket/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_LANGUAGE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_PROFILE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.LANGUAGE_DESC_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.LANGUAGE_DESC_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PROFILE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PROFILE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    private static final String NAME_EMPTY \u003d \" \" + PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"    private static final String PROFILE_EMPTY \u003d \" \" + PREFIX_PROFILE;","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"    private static final String PHONE_EMPTY \u003d \" \" + PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"    private static final String EMAIL_EMPTY \u003d \" \" + PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"    private static final String ADDRESS_EMPTY \u003d \" \" + PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    private static final String LANGUAGE_EMPTY \u003d \" \" + PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROFILE_DESC, GitHubProfile.MESSAGE_CONSTRAINTS); // invalid profile","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LANGUAGE_DESC, Language.MESSAGE_CONSTRAINTS); // invalid language","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"        // while parsing {@code PREFIX_LANGUAGE} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"chia-yh"},"content":"        // parsing it together with a valid language results in error","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + LANGUAGE_DESC_PYTHON + LANGUAGE_EMPTY, Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + LANGUAGE_DESC_PYTHON + LANGUAGE_EMPTY + LANGUAGE_DESC_CPLUSPLUS,","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"                Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + LANGUAGE_EMPTY + LANGUAGE_DESC_PYTHON + LANGUAGE_DESC_CPLUSPLUS,","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"chia-yh"},"content":"                Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_PROFILE_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"chia-yh"},"content":"                + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"    public void parse_emptyNonLanguageTagField_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + NAME_EMPTY, Name.MESSAGE_CONSTRAINTS); // empty name","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + PROFILE_EMPTY, GitHubProfile.MESSAGE_CONSTRAINTS); // empty profile","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + PHONE_EMPTY, Phone.MESSAGE_CONSTRAINTS); // empty phone","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + EMAIL_EMPTY, Email.MESSAGE_CONSTRAINTS); // empty email","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, \"1\" + ADDRESS_EMPTY, Address.MESSAGE_CONSTRAINTS); // empty address","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"chia-yh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + PROFILE_DESC_AMY + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"                .withProfile(VALID_GITHUBPROFILE_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"chia-yh"},"content":"                .withAddress(VALID_ADDRESS_AMY).withLanguages(VALID_LANGUAGE_CPLUSPLUS)","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"chia-yh"},"content":"        // profile","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"chia-yh"},"content":"        userInput \u003d targetIndex.getOneBased() + PROFILE_DESC_AMY;","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"chia-yh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withProfile(VALID_GITHUBPROFILE_AMY).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"chia-yh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"chia-yh"},"content":"        // languages","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"chia-yh"},"content":"        userInput \u003d targetIndex.getOneBased() + LANGUAGE_DESC_PYTHON;","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"chia-yh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withLanguages(VALID_LANGUAGE_PYTHON).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"chia-yh"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"chia-yh"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"chia-yh"},"content":"                + PROFILE_DESC_AMY + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_AMY + TAG_DESC_FRIEND + LANGUAGE_DESC_PYTHON + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-05"},{"lineNumber":226,"author":{"gitId":"chia-yh"},"content":"                + EMAIL_DESC_BOB + TAG_DESC_HUSBAND + PROFILE_DESC_BOB;","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"chia-yh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withProfile(VALID_GITHUBPROFILE_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"chia-yh"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"chia-yh"},"content":"                .withLanguages(VALID_LANGUAGE_CPLUSPLUS, VALID_LANGUAGE_PYTHON)","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"chia-yh"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":256,"author":{"gitId":"chia-yh"},"content":"    public void parse_resetLanguages_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"chia-yh"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-05"},{"lineNumber":258,"author":{"gitId":"chia-yh"},"content":"        String userInput \u003d targetIndex.getOneBased() + LANGUAGE_EMPTY;","lastModifiedDate":"2023-03-05"},{"lineNumber":259,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":260,"author":{"gitId":"chia-yh"},"content":"        assertParseFailure(parser, userInput, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":262,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"chia-yh":113,"-":158,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.FindCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.FindCommandPersonPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"    public void parse_emptyArg_returnsFindCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e emptyKeywords \u003d Collections.emptyList();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommand command \u003d new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        assertParseSuccess(parser, \"\", command);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e emptyKeywords \u003d Collections.emptyList();","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"Alice\", \"Bob\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"                new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"                        nameKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"                        emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"                        emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"                        emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"                        emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"                        emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"                        emptyKeywords));","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"        // space in front of n/ is needed, see javadoc for ArgumentTokenizer.findPrefixPosition","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"        assertParseSuccess(parser, \" n/\\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"chia-yh":3,"-":23,"nus-jeff":29}},{"path":"src/test/java/seedu/socket/logic/parser/ListCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_LANGUAGE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"cmang12"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"cmang12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ListCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandLanguagePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.ListCommandTagPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"public class ListCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"    private ListCommandParser parser \u003d new ListCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"    public void parse_validArgs_returnsListCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"        Set\u003cTag\u003e testTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"        Set\u003cLanguage\u003e testLanguages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"        ListCommand expectedListCommand \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"                new ListCommand(new ListCommandTagPredicate(testTags),","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                        new ListCommandLanguagePredicate(testLanguages),","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"                        false);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"        // empty argument","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"        assertParseSuccess(parser, \"\", expectedListCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"        testTags.add(new Tag(\"friend\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"cmang12"},"content":"        testLanguages.add(new Language(\"python\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"cmang12"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"        expectedListCommand \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"                new ListCommand(new ListCommandTagPredicate(testTags),","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"                        new ListCommandLanguagePredicate(testLanguages),","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"cmang12"},"content":"                        true);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"cmang12"},"content":"        assertParseSuccess(parser, \" t/friend l/python\", expectedListCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"cmang12"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"cmang12"},"content":"        assertParseSuccess(parser, \" \\n t/friend \\n \\t l/python  \\t\", expectedListCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"cmang12"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"cmang12"},"content":"        assertParseFailure(parser, INVALID_LANGUAGE_DESC, Language.MESSAGE_CONSTRAINTS); // invalid language","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"cmang12"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"cmang12"},"content":"        // invalid language followed by valid tag","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"cmang12"},"content":"        assertParseFailure(parser, INVALID_LANGUAGE_DESC + \" t/friends\", Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"cmang12"},"content":"        // invalid tag followed by valid language","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"cmang12"},"content":"        assertParseFailure(parser, INVALID_TAG_DESC + \" l/python\", Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"cmang12"},"content":"        // valid language followed by invalid tag","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"cmang12"},"content":"        assertParseFailure(parser, \"l/python\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"cmang12"},"content":"        // valid tag followed by invalid language","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"cmang12"},"content":"        assertParseFailure(parser, \"t/friends\" + INVALID_LANGUAGE_DESC, Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"cmang12"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"cmang12":51,"chia-yh":6,"nus-jeff":8}},{"path":"src/test/java/seedu/socket/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_PROFILE \u003d \"-rachel\";","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_LANGUAGE \u003d \"++C\";","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_PROFILE \u003d \"rachel-walker\";","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_LANGUAGE_1 \u003d \"Java\";","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_LANGUAGE_2 \u003d \"JavaScript\";","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"    public void parseProfile_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseProfile((String) null));","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"    public void parseProfile_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseProfile(INVALID_PROFILE));","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"    public void parseProfile_validValueWithoutWhitespace_returnsProfile() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"        GitHubProfile expectedProfile \u003d new GitHubProfile(VALID_PROFILE);","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"        assertEquals(expectedProfile, ParserUtil.parseProfile(VALID_PROFILE));","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"    public void parseProfile_validValueWithWhitespace_returnsTrimmedProfile() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"        String profileWithWhitespace \u003d WHITESPACE + VALID_PROFILE + WHITESPACE;","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"        GitHubProfile expectedProfile \u003d new GitHubProfile(VALID_PROFILE);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"        assertEquals(expectedProfile, ParserUtil.parseProfile(profileWithWhitespace));","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguage_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLanguage(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguage_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"chia-yh"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLanguage(INVALID_LANGUAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguage_validValueWithoutWhitespace_returnsLanguage() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"chia-yh"},"content":"        Language expectedLanguage \u003d new Language(VALID_LANGUAGE_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"chia-yh"},"content":"        assertEquals(expectedLanguage, ParserUtil.parseLanguage(VALID_LANGUAGE_1));","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":192,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":193,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguage_validValueWithWhitespace_returnsTrimmedLanguage() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":194,"author":{"gitId":"chia-yh"},"content":"        String languageWithWhitespace \u003d WHITESPACE + VALID_LANGUAGE_1 + WHITESPACE;","lastModifiedDate":"2023-03-05"},{"lineNumber":195,"author":{"gitId":"chia-yh"},"content":"        Language expectedLanguage \u003d new Language(VALID_LANGUAGE_1);","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"chia-yh"},"content":"        assertEquals(expectedLanguage, ParserUtil.parseLanguage(languageWithWhitespace));","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguages_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLanguages(null));","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguages_collectionWithInvalidLanguages_throwsParseException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"chia-yh"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"chia-yh"},"content":"                ParserUtil.parseLanguages(Arrays.asList(VALID_LANGUAGE_1, INVALID_LANGUAGE)));","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguages_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ParserUtil.parseLanguages(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"chia-yh"},"content":"    public void parseLanguages_collectionWithValidLanguages_returnsLanguageSet() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"chia-yh"},"content":"        Set\u003cLanguage\u003e actualLanguageSet \u003d ParserUtil.parseLanguages(Arrays.asList(VALID_LANGUAGE_1, VALID_LANGUAGE_2));","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"chia-yh"},"content":"        Set\u003cLanguage\u003e expectedLanguageSet \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"chia-yh"},"content":"                new HashSet\u003cLanguage\u003e(Arrays.asList(new Language(VALID_LANGUAGE_1), new Language(VALID_LANGUAGE_2)));","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"chia-yh"},"content":"        assertEquals(expectedLanguageSet, actualLanguageSet);","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"chia-yh":86,"-":181,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/logic/parser/RemoveCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_LANGUAGE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_PROFILE_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.LANGUAGE_DESC_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.LANGUAGE_DESC_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.PROFILE_DESC_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand.RemovePersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.RemovePersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"public class RemoveCommandParserTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"    private static final String LANGUAGE_EMPTY \u003d \" \" + PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"    private RemoveCommandParser parser \u003d new RemoveCommandParser();","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"        // no index specified","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"        // no field specified","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\", RemoveCommand.MESSAGE_NOT_REMOVE);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"        // no index and no field specified","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"        // negative index","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"        // zero index","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"huanghao1998"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"huanghao1998"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PROFILE_DESC, GitHubProfile.MESSAGE_CONSTRAINTS); // invalid profile","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LANGUAGE_DESC, Language.MESSAGE_CONSTRAINTS); // invalid language","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"huanghao1998"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"        // while parsing {@code PREFIX_LANGUAGE} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"        // parsing it together with a valid language results in error","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + LANGUAGE_DESC_PYTHON + LANGUAGE_EMPTY, Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + LANGUAGE_DESC_PYTHON + LANGUAGE_EMPTY + LANGUAGE_DESC_CPLUSPLUS,","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"huanghao1998"},"content":"                Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + LANGUAGE_EMPTY + LANGUAGE_DESC_PYTHON + LANGUAGE_DESC_CPLUSPLUS,","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"huanghao1998"},"content":"                Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"huanghao1998"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"huanghao1998"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"huanghao1998"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"huanghao1998"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"huanghao1998"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + PROFILE_DESC_AMY + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"huanghao1998"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + LANGUAGE_DESC_CPLUSPLUS + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"huanghao1998"},"content":"                .withProfile(VALID_GITHUBPROFILE_AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"huanghao1998"},"content":"                .withAddress(VALID_ADDRESS_AMY).withLanguages(VALID_LANGUAGE_CPLUSPLUS).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"huanghao1998"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"huanghao1998"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"huanghao1998"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"huanghao1998"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"huanghao1998"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"huanghao1998"},"content":"        // profile","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"huanghao1998"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"huanghao1998"},"content":"        String userInput \u003d targetIndex.getOneBased() + PROFILE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder()","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"huanghao1998"},"content":"                .withProfile(VALID_GITHUBPROFILE_AMY).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"huanghao1998"},"content":"        // phone","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"huanghao1998"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"huanghao1998"},"content":"        expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"huanghao1998"},"content":"        // email","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"huanghao1998"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"huanghao1998"},"content":"        expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"huanghao1998"},"content":"        // address","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"huanghao1998"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"huanghao1998"},"content":"        expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"huanghao1998"},"content":"        // languages","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"huanghao1998"},"content":"        userInput \u003d targetIndex.getOneBased() + LANGUAGE_DESC_PYTHON;","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptorBuilder().withLanguages(VALID_LANGUAGE_PYTHON).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"huanghao1998"},"content":"        expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"huanghao1998"},"content":"        // tags","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"huanghao1998"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"huanghao1998"},"content":"        expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"huanghao1998"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"huanghao1998"},"content":"        // no other valid values specified","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"huanghao1998"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"huanghao1998"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":193,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":194,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"huanghao1998"},"content":"        // other valid values specified","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"huanghao1998"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"huanghao1998"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"huanghao1998"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"huanghao1998"},"content":"        expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"huanghao1998"},"content":"    public void parse_resetLanguages_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"huanghao1998"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"huanghao1998"},"content":"        String userInput \u003d targetIndex.getOneBased() + LANGUAGE_EMPTY;","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder().withLanguages().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"huanghao1998"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"huanghao1998"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"huanghao1998"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand expectedCommand \u003d new RemoveCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":223,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":224,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":225,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":226,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"huanghao1998":180,"chia-yh":44,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/logic/parser/SocketParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PROJECT;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.AddCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.FindCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ListCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand.RemovePersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.SortCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.FindCommandPersonPredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.RemovePersonDescriptorBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"public class SocketParserTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"    private final SocketParser parser \u003d new SocketParser();","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + TAG_DESC_FRIEND) instanceof ClearCommand);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"    public void parseCommand_deletepj() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"        DeleteProjectCommand command \u003d (DeleteProjectCommand) parser.parseCommand(","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"                DeleteProjectCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PROJECT.getOneBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"        assertEquals(new DeleteProjectCommand(INDEX_FIRST_PROJECT), command);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"        Person person \u003d new PersonBuilder().withProfile(VALID_GITHUBPROFILE_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"                .withAddress(VALID_ADDRESS_AMY).withEmail(VALID_EMAIL_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"                .withLanguages(VALID_LANGUAGE_PYTHON).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e emptyKeywords \u003d Collections.emptyList();","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e nameKeywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findNameCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"nus-jeff"},"content":"                FindCommand.COMMAND_WORD + \" \" + PREFIX_NAME + nameKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"nus-jeff"},"content":"                nameKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords)), findNameCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e profileKeywords \u003d Arrays.asList(\"-hans-b0\", \"t-e-s-t-\", \"-DaViD-\");","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findProfileCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"nus-jeff"},"content":"                FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"nus-jeff"},"content":"                        + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"nus-jeff"},"content":"                        + PREFIX_PROFILE","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"nus-jeff"},"content":"                        + profileKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"nus-jeff"},"content":"                profileKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords)), findProfileCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e phoneKeywords \u003d Arrays.asList(\"999\", \"12345678\", \"00001111\");","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findPhoneCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"nus-jeff"},"content":"                FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"nus-jeff"},"content":"                        + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"nus-jeff"},"content":"                        + PREFIX_PHONE","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"nus-jeff"},"content":"                        + phoneKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"nus-jeff"},"content":"                phoneKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords)), findPhoneCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e emailKeywords \u003d Arrays.asList(\"test1@nus.edu\", \"boHans99@gmail.com\", \"customer@SOCket.sg\");","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findEmailCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"nus-jeff"},"content":"                FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"nus-jeff"},"content":"                        + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"nus-jeff"},"content":"                        + PREFIX_EMAIL","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"nus-jeff"},"content":"                        + emailKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"nus-jeff"},"content":"                emailKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords)), findEmailCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e addressKeywords \u003d Arrays.asList(\"bedok\", \"99\", \"block\");","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findAddressCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"nus-jeff"},"content":"                FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"nus-jeff"},"content":"                        + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"nus-jeff"},"content":"                        + PREFIX_ADDRESS","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"nus-jeff"},"content":"                        + addressKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"nus-jeff"},"content":"                addressKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords)), findAddressCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e languageKeywords \u003d Arrays.asList(\"Python\", \"c++\", \"java\");","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findLanguageCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"nus-jeff"},"content":"                FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"nus-jeff"},"content":"                        + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"nus-jeff"},"content":"                        + PREFIX_LANGUAGE","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"nus-jeff"},"content":"                        + languageKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"nus-jeff"},"content":"                languageKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords)), findLanguageCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e tagKeywords \u003d Arrays.asList(\"friends\", \"cs2103t\", \"student\");","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"nus-jeff"},"content":"        FindCommand findTagCommand \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"nus-jeff"},"content":"                FindCommand.COMMAND_WORD","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"nus-jeff"},"content":"                        + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"nus-jeff"},"content":"                        + PREFIX_TAG","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"nus-jeff"},"content":"                        + tagKeywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"nus-jeff"},"content":"        assertEquals(new FindCommand(new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"nus-jeff"},"content":"                emptyKeywords,","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"nus-jeff"},"content":"                tagKeywords)), findTagCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":223,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"dillongoh"},"content":"    public void parseCommand_sort() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"dillongoh"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD) instanceof SortCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"dillongoh"},"content":"        assertTrue(parser.parseCommand(SortCommand.COMMAND_WORD + \" address\") instanceof SortCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"huanghao1998"},"content":"    public void parseCommand_remove() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":230,"author":{"gitId":"huanghao1998"},"content":"        Person person \u003d new PersonBuilder().withProfile(VALID_GITHUBPROFILE_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":231,"author":{"gitId":"huanghao1998"},"content":"                .withAddress(VALID_ADDRESS_AMY).withEmail(VALID_EMAIL_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":232,"author":{"gitId":"huanghao1998"},"content":"                .withLanguages(VALID_LANGUAGE_PYTHON).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":233,"author":{"gitId":"huanghao1998"},"content":"        RemovePersonDescriptor descriptor \u003d new RemovePersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":234,"author":{"gitId":"huanghao1998"},"content":"        RemoveCommand command \u003d (RemoveCommand) parser.parseCommand(RemoveCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-09"},{"lineNumber":235,"author":{"gitId":"huanghao1998"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getRemovePersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-09"},{"lineNumber":236,"author":{"gitId":"huanghao1998"},"content":"        assertEquals(new RemoveCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-09"},{"lineNumber":237,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":238,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"chia-yh"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"chia-yh"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":242,"author":{"gitId":"chia-yh"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":244,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":245,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":246,"author":{"gitId":"chia-yh"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":247,"author":{"gitId":"chia-yh"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"chia-yh"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2023-03-11"},{"lineNumber":249,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":250,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":251,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"huanghao1998"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"huanghao1998"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"huanghao1998"},"content":"                ViewCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":255,"author":{"gitId":"huanghao1998"},"content":"        assertEquals(new ViewCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-15"},{"lineNumber":256,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":257,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"huanghao1998":25,"chia-yh":59,"-":73,"dillongoh":6,"nus-jeff":105}},{"path":"src/test/java/seedu/socket/logic/parser/SortCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.SortCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"class SortCommandParserTest {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"    private SortCommandParser parser \u003d new SortCommandParser();","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    public void parse_emptyArg_returnsSortCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(\"name\");","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"\", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    public void parse_name_returnsSortNameCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        //no leading and trailing whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(\"name\");","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"name\", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        //multiple whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"  name  \", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    public void parse_phone_returnsSortPhoneCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        //no leading and trailing whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(\"phone\");","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"phone\", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        //multiple whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"  phone  \", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"    public void parse_email_returnsSortEmailCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"        //no leading and trailing whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(\"email\");","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"email\", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        //multiple whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"  email  \", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"    public void parse_address_returnsSortAddressCommand() {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        //no leading and trailing whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        SortCommand expectedSortCommand \u003d new SortCommand(\"address\");","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"address\", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"        //multiple whitespaces","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"        assertParseSuccess(parser, \"  address  \", expectedSortCommand);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"    public void parse_invalidCategory_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"        assertParseFailure(parser, \"sort invalid\",","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, SortCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"chia-yh":5,"dillongoh":61}},{"path":"src/test/java/seedu/socket/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"huanghao1998"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"huanghao1998"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"huanghao1998"},"content":" * outside of the ViewCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":" * same path through the ViewCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"huanghao1998":25,"chia-yh":6}},{"path":"src/test/java/seedu/socket/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalProjects.ALPHA;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.predicate.FindCommandNamePredicate;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.predicate.FindCommandProjectNamePredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.SocketBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        assertEquals(new Socket(), new Socket(modelManager.getSocket()));","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        userPrefs.setSocketFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        userPrefs.setSocketFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"    public void setSocketFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setSocketFilePath(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"    public void setSocketFilePath_validPath_setsSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        Path path \u003d Paths.get(\"socket/file/path\");","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"        modelManager.setSocketFilePath(path);","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"        assertEquals(path, modelManager.getSocketFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"    public void hasProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasProject(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"    public void hasPerson_personNotInSocket_returnsFalse() {","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"    public void hasProject_projectNotInSocket_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"        assertFalse(modelManager.hasProject(ALPHA));","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"    public void hasPerson_personInSocket_returnsTrue() {","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"    public void hasProject_projectInSocket_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"        modelManager.addProject(ALPHA);","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"        assertTrue(modelManager.hasProject(ALPHA));","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"    public void getFilteredProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredProjectList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"        Socket socket \u003d new SocketBuilder().withPerson(ALICE).withPerson(BENSON).withProject(ALPHA).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"chia-yh"},"content":"        Socket differentSocket \u003d new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"chia-yh"},"content":"        modelManager \u003d new ModelManager(socket, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"chia-yh"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(socket, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"        // different socket -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentSocket, userPrefs)));","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":145,"author":{"gitId":"nus-jeff"},"content":"        modelManager.updateFilteredPersonList(new FindCommandNamePredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"chia-yh"},"content":"        assertFalse(modelManager.equals(new ModelManager(socket, userPrefs)));","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"chia-yh"},"content":"        keywords \u003d ALPHA.getName().projectName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"chia-yh"},"content":"        modelManager.updateFilteredProjectList(new FindCommandProjectNamePredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"chia-yh"},"content":"        assertFalse(modelManager.equals(new ModelManager(socket, userPrefs)));","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"huanghao1998"},"content":"        // different viewedPerson -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"chia-yh"},"content":"        modelManager \u003d new ModelManager(socket, userPrefs);","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"huanghao1998"},"content":"        modelManager.updateViewedPerson(ALICE);","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"chia-yh"},"content":"        assertFalse(modelManager.equals(new ModelManager(socket, userPrefs)));","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"chia-yh"},"content":"        // different viewedProject -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"chia-yh"},"content":"        modelManager \u003d new ModelManager(socket, userPrefs);","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"chia-yh"},"content":"        modelManager.updateViewedProject(ALPHA);","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"chia-yh"},"content":"        assertFalse(modelManager.equals(new ModelManager(socket, userPrefs)));","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"chia-yh"},"content":"        modelManager.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"chia-yh"},"content":"        differentUserPrefs.setSocketFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"chia-yh"},"content":"        assertFalse(modelManager.equals(new ModelManager(socket, differentUserPrefs)));","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"huanghao1998":3,"chia-yh":62,"-":103,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/model/SocketTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"public class SocketTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    private final Socket socket \u003d new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        assertEquals(Collections.emptyList(), socket.getPersonList());","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e socket.resetData(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"    public void resetData_withValidReadOnlySocket_replacesData() {","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        Socket newData \u003d getTypicalSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        socket.resetData(newData);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        assertEquals(newData, socket);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"        SocketStub newData \u003d new SocketStub(newPersons);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e socket.resetData(newData));","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e socket.hasPerson(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    public void hasPerson_personNotInSocket_returnsFalse() {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        assertFalse(socket.hasPerson(ALICE));","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    public void hasPerson_personInSocket_returnsTrue() {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        socket.addPerson(ALICE);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        assertTrue(socket.hasPerson(ALICE));","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"    public void hasPerson_personWithSameIdentityFieldsInSocket_returnsTrue() {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        socket.addPerson(ALICE);","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"        assertTrue(socket.hasPerson(editedAlice));","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e socket.getPersonList().remove(0));","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"     * A stub ReadOnlySocket whose persons and projects list can violate interface constraints.","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"    private static class SocketStub implements ReadOnlySocket {","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"        private final ObservableList\u003cProject\u003e projects \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"        SocketStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"        @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"        public ObservableList\u003cProject\u003e getProjectList() {","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"            return projects;","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"chia-yh":39,"-":70}},{"path":"src/test/java/seedu/socket/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    public void setSocketFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setSocketFilePath(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"chia-yh":4,"-":17}},{"path":"src/test/java/seedu/socket/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \" \";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chia-yh":2,"-":33}},{"path":"src/test/java/seedu/socket/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \" \";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chia-yh":2,"-":65}},{"path":"src/test/java/seedu/socket/model/person/GitHubProfileTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"class GitHubProfileTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    private static final GitHubProfile AMY_PROFILE \u003d new GitHubProfile(VALID_GITHUBPROFILE_AMY);","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    private static final GitHubProfile BOB_PROFILE \u003d new GitHubProfile(VALID_GITHUBPROFILE_BOB);","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GitHubProfile(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    public void constructor_invalidProfile_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"        String invalidProfile \u003d \" \";","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GitHubProfile(invalidProfile));","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    public void testIsValidProfile() {","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"        // null profile","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e GitHubProfile.isValidProfile(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        // invalid profile","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\"-chiayh\")); // starts with hyphen","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\"chiayh-\")); // ends with hyphen","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\"chiayh*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\"chia yh\")); // contains spaces","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\"chia--yh\")); // contains two consecutive hyphens","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        assertFalse(GitHubProfile.isValidProfile(\"0123456789012345678901234567890123456789\")); // exceeds 39 chars","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        // valid profile","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"chiayh\")); // alphabets only","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"123456\")); // numbers only","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"chiayh2\")); // alphanumeric characters","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"chia-yh\")); // alphabets and hyphen","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"123-456\")); // numbers and hyphen","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"chia-yh2\")); // alphanumeric characters and hyphen","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"chia-yh-2\")); // alphanumeric characters and hyphens","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        assertTrue(GitHubProfile.isValidProfile(\"012345678901234567890123456789012345678\")); // 39 chars","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"    public void testToString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        assertTrue(VALID_GITHUBPROFILE_AMY.equals(AMY_PROFILE.toString()));","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-04"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        GitHubProfile amyCopy \u003d new GitHubProfile(VALID_GITHUBPROFILE_AMY);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        assertTrue(AMY_PROFILE.equals(amyCopy));","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        assertTrue(AMY_PROFILE.equals(AMY_PROFILE));","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        assertFalse(AMY_PROFILE.equals(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        assertFalse(AMY_PROFILE.equals(5));","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        // different profile -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        assertFalse(AMY_PROFILE.equals(BOB_PROFILE));","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"chia-yh":75}},{"path":"src/test/java/seedu/socket/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Name.isValidName(\"peter  parker\")); // consecutive whitespaces","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Name.isValidName(\"peter \")); // trailing space","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        Name capitalisedName \u003d new Name(\"Alice\");","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        Name lowercaseName \u003d new Name(\"alice\");","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        Name differentName \u003d new Name(\"Bob\");","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        assertTrue(capitalisedName.equals(lowercaseName));","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        assertFalse(capitalisedName.equals(differentName));","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chia-yh":14,"-":38}},{"path":"src/test/java/seedu/socket/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withProfile(VALID_GITHUBPROFILE_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withLanguages(VALID_LANGUAGE_CPLUSPLUS)","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        // different case name -\u003e returns true;","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(ALICE.getName().toString().toLowerCase()).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"        // different profile -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withProfile(VALID_GITHUBPROFILE_BOB).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"        // different languages -\u003e returns false","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLanguages(VALID_LANGUAGE_CPLUSPLUS).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"chia-yh":30,"-":71}},{"path":"src/test/java/seedu/socket/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \" \";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"chia-yh":2,"-":37}},{"path":"src/test/java/seedu/socket/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_GITHUB;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.model.person.Person.CATEGORY_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.EMPTY;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.EMPTY_TWO;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"huanghao1998"},"content":"    public void removeAll_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"huanghao1998"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.removeAll(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"huanghao1998"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"huanghao1998"},"content":"    public void removeAll_existingPerson_removesPerson() {","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"huanghao1998"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"huanghao1998"},"content":"        uniquePersonList.removeAll(x -\u003e x.isSamePerson(ALICE));","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"huanghao1998"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"huanghao1998"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":192,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"dillongoh"},"content":"    public void sort_name() {","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":197,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY);","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"dillongoh"},"content":"        UniquePersonList sortByNameList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(EMPTY);","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":206,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.sort(CATEGORY_NAME);","lastModifiedDate":"2023-03-07"},{"lineNumber":207,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniquePersonList, sortByNameList);","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"dillongoh"},"content":"    public void sort_phone() {","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY);","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"dillongoh"},"content":"        UniquePersonList sortByPhoneList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":217,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":218,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(EMPTY);","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add((EMPTY_TWO));","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.sort(CATEGORY_PHONE);","lastModifiedDate":"2023-03-07"},{"lineNumber":223,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniquePersonList, sortByPhoneList);","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"dillongoh"},"content":"    public void sort_email() {","lastModifiedDate":"2023-03-06"},{"lineNumber":227,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":230,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY);","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"dillongoh"},"content":"        UniquePersonList sortByEmailList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":233,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":236,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(EMPTY);","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":238,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.sort(CATEGORY_EMAIL);","lastModifiedDate":"2023-03-07"},{"lineNumber":239,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniquePersonList, sortByEmailList);","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"dillongoh"},"content":"    public void sort_address() {","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY);","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"dillongoh"},"content":"        UniquePersonList sortByAddressList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(CARL);","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(EMPTY);","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":254,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.sort(CATEGORY_ADDRESS);","lastModifiedDate":"2023-03-07"},{"lineNumber":255,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniquePersonList, sortByAddressList);","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":258,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-07"},{"lineNumber":259,"author":{"gitId":"dillongoh"},"content":"    public void sort_profile() {","lastModifiedDate":"2023-03-07"},{"lineNumber":260,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-07"},{"lineNumber":261,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(CARL);","lastModifiedDate":"2023-03-07"},{"lineNumber":262,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":263,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(EMPTY);","lastModifiedDate":"2023-03-07"},{"lineNumber":264,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.add(BENSON);","lastModifiedDate":"2023-03-07"},{"lineNumber":265,"author":{"gitId":"dillongoh"},"content":"        UniquePersonList sortByProfileList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"dillongoh"},"content":"        sortByProfileList.add(ALICE);","lastModifiedDate":"2023-03-07"},{"lineNumber":267,"author":{"gitId":"dillongoh"},"content":"        sortByProfileList.add(BENSON);","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"dillongoh"},"content":"        sortByProfileList.add(CARL);","lastModifiedDate":"2023-03-07"},{"lineNumber":269,"author":{"gitId":"dillongoh"},"content":"        sortByProfileList.add(EMPTY);","lastModifiedDate":"2023-03-07"},{"lineNumber":270,"author":{"gitId":"dillongoh"},"content":"        sortByProfileList.add(EMPTY_TWO);","lastModifiedDate":"2023-03-07"},{"lineNumber":271,"author":{"gitId":"dillongoh"},"content":"        uniquePersonList.sort(CATEGORY_GITHUB);","lastModifiedDate":"2023-03-07"},{"lineNumber":272,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniquePersonList, sortByProfileList);","lastModifiedDate":"2023-03-07"},{"lineNumber":273,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"huanghao1998":13,"chia-yh":18,"-":161,"dillongoh":82}},{"path":"src/test/java/seedu/socket/model/person/predicate/AddressContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class AddressContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommandAddressPredicate firstPredicate \u003d new FindCommandAddressPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        FindCommandAddressPredicate secondPredicate \u003d new FindCommandAddressPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        FindCommandAddressPredicate firstPredicateCopy \u003d new FindCommandAddressPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        // different profile -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"    public void test_addressContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        // One keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        FindCommandAddressPredicate predicate \u003d","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                new FindCommandAddressPredicate(Collections.singletonList(\"bedok\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Bedok block 999\")","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandAddressPredicate(Arrays.asList(\"Bedok\", \"99\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Bedok block 999\")","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandAddressPredicate(Arrays.asList(\"Bedok\", \"99\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Carol\")","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Bedok block 1\")","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandAddressPredicate(Arrays.asList(\"bEDok\", \"bLOck\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Bedok block 999\")","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"    public void test_addressDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"        FindCommandAddressPredicate predicate \u003d new FindCommandAddressPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Bedok block 999\")","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandAddressPredicate(Arrays.asList(\"Kentridge\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Bedok block 999\")","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"nus-jeff"},"content":"        // Keywords match phone, email and name, but does not match address","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandAddressPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Alice\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345\")","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"alice@email.com\")","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Main Street\")","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chia-yh":2,"nus-jeff":99}},{"path":"src/test/java/seedu/socket/model/person/predicate/EmailContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class EmailContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommandEmailPredicate firstPredicate \u003d new FindCommandEmailPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        FindCommandEmailPredicate secondPredicate \u003d new FindCommandEmailPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        FindCommandEmailPredicate firstPredicateCopy \u003d new FindCommandEmailPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"    public void test_emailContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        // One keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        FindCommandEmailPredicate predicate \u003d new FindCommandEmailPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                Collections.singletonList(\"Alice@gmail.com\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"Alice@gmail.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandEmailPredicate(Arrays.asList(\"Alice@gmail.com\", \"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Carol\")","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"Alice@gmail.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandEmailPredicate(Arrays.asList(\"ALICE@GMaiL.cOm\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"Alice@gmail.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"    public void test_emailDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"        FindCommandEmailPredicate predicate \u003d new FindCommandEmailPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"Alice@gmail.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandEmailPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"Alice@gmail.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"        // Keywords match phone, name and address, but does not match email","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandEmailPredicate(Arrays.asList(\"12345\", \"Alice\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345\")","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"alice@email.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Main Street\")","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chia-yh":2,"nus-jeff":92}},{"path":"src/test/java/seedu/socket/model/person/predicate/LanguageContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class LanguageContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommandLanguagePredicate firstPredicate \u003d new FindCommandLanguagePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        FindCommandLanguagePredicate secondPredicate \u003d new FindCommandLanguagePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        FindCommandLanguagePredicate firstPredicateCopy \u003d new FindCommandLanguagePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"    public void test_languageContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        // One keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        FindCommandLanguagePredicate predicate \u003d new FindCommandLanguagePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                Collections.singletonList(\"java\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"                .withLanguages(\"java\", \"python\")","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandLanguagePredicate(Arrays.asList(\"java\", \"python\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                .withLanguages(\"java\", \"python\")","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandLanguagePredicate(Arrays.asList(\"java\", \"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Carol\")","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"                .withLanguages(\"java\", \"python\")","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandLanguagePredicate(Arrays.asList(\"JaVa\", \"pyTHon\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"                .withLanguages(\"java\", \"python\")","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"    public void test_languageDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"        FindCommandLanguagePredicate predicate \u003d new FindCommandLanguagePredicate(Collections.emptyList());","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                .withLanguages(\"java\", \"python\")","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandLanguagePredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"                .withLanguages(\"java\", \"python\")","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"nus-jeff"},"content":"        // Keywords match name, phone, email and address, but does not match language","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandLanguagePredicate(Arrays.asList(","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"nus-jeff"},"content":"                \"alice\", \"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345\")","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"alice@email.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Main Street\")","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"nus-jeff"},"content":"                .withLanguages(\"java\", \"python\")","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chia-yh":2,"nus-jeff":101}},{"path":"src/test/java/seedu/socket/model/person/predicate/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommandNamePredicate firstPredicate \u003d new FindCommandNamePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        FindCommandNamePredicate secondPredicate \u003d new FindCommandNamePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        FindCommandNamePredicate firstPredicateCopy \u003d new FindCommandNamePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        FindCommandNamePredicate predicate \u003d new FindCommandNamePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandNamePredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandNamePredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Carol\")","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandNamePredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"        FindCommandNamePredicate predicate \u003d new FindCommandNamePredicate(Collections.emptyList());","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandNamePredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandNamePredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345\")","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"alice@email.com\")","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Main Street\")","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"chia-yh":2,"-":55,"nus-jeff":38}},{"path":"src/test/java/seedu/socket/model/person/predicate/PersonContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"public class PersonContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate firstPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondNamePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondProfilePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondPhonePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondEmailPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondAddressPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondLanguagePersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondTagPersonPredicate \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondNamePersonPredicate.equals(secondNamePersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondProfilePersonPredicate.equals(secondProfilePersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondPhonePersonPredicate.equals(secondPhonePersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondEmailPersonPredicate.equals(secondEmailPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondAddressPersonPredicate.equals(secondAddressPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondLanguagePersonPredicate.equals(secondLanguagePersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondTagPersonPredicate.equals(secondTagPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"nus-jeff"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate firstPersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"nus-jeff"},"content":"                        firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondNamePersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondProfilePersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondPhonePersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondEmailPersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondAddressPersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondLanguagePersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPersonPredicate secondTagPersonPredicateCopy \u003d new FindCommandPersonPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList,","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPersonPredicate.equals(firstPersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondNamePersonPredicate.equals(secondNamePersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondProfilePersonPredicate.equals(secondProfilePersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondPhonePersonPredicate.equals(secondPhonePersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondEmailPersonPredicate.equals(secondEmailPersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondAddressPersonPredicate.equals(secondAddressPersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondLanguagePersonPredicate.equals(secondLanguagePersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(secondTagPersonPredicate.equals(secondTagPersonPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"nus-jeff"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondNamePersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondProfilePersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondPhonePersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondEmailPersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondAddressPersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondLanguagePersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondTagPersonPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"nus-jeff"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondNamePersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondProfilePersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondPhonePersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondEmailPersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondAddressPersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondLanguagePersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondTagPersonPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"nus-jeff"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPersonPredicate.equals(secondNamePersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondNamePersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondProfilePersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondPhonePersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondEmailPersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondAddressPersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondLanguagePersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(secondTagPersonPredicate.equals(firstPersonPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chia-yh":1,"nus-jeff":198}},{"path":"src/test/java/seedu/socket/model/person/predicate/PhoneContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class PhoneContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPhonePredicate firstPredicate \u003d new FindCommandPhonePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPhonePredicate secondPredicate \u003d new FindCommandPhonePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPhonePredicate firstPredicateCopy \u003d new FindCommandPhonePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"    public void test_phoneContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        // One keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPhonePredicate predicate \u003d new FindCommandPhonePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                Collections.singletonList(\"12345678\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345678\")","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandPhonePredicate(Arrays.asList(\"12345678\", \"00001111\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Carol\")","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345678\")","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"    public void test_phoneDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"        FindCommandPhonePredicate predicate \u003d new FindCommandPhonePredicate(Collections.emptyList());","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345678\")","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandPhonePredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345678\")","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"        // Keywords match name, email and address, but does not match phone","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandPhonePredicate(Arrays.asList(\"Alice\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345678\")","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"alice@email.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Main Street\")","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chia-yh":2,"nus-jeff":85}},{"path":"src/test/java/seedu/socket/model/person/predicate/ProfileContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class ProfileContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommandProfilePredicate firstPredicate \u003d new FindCommandProfilePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        FindCommandProfilePredicate secondPredicate \u003d new FindCommandProfilePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        FindCommandProfilePredicate firstPredicateCopy \u003d new FindCommandProfilePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"    public void test_profileContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        // One keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        FindCommandProfilePredicate predicate \u003d new FindCommandProfilePredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"                Collections.singletonList(\"alice-nus\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"                .withProfile(\"alice-nus\")","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandProfilePredicate(Arrays.asList(\"alice-nus\", \"Carol-nus\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Carol\")","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"                .withProfile(\"alice-nus\")","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandProfilePredicate(Arrays.asList(\"ALiCE-NuS\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"                .withProfile(\"alice-nus\")","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"    public void test_profileDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"        FindCommandProfilePredicate predicate \u003d new FindCommandProfilePredicate(Collections.emptyList());","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"                .withProfile(\"alice-nus\")","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandProfilePredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice Bob\")","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                .withProfile(\"alice-nus\")","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"        // Keywords match name, phone, email and address, but does not match profile","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandProfilePredicate(Arrays.asList(","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"                \"Alice\", \"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"nus-jeff"},"content":"                .withProfile(\"alice-nus\")","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345\")","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"alice@email.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Main Street\")","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chia-yh":2,"nus-jeff":94}},{"path":"src/test/java/seedu/socket/model/person/predicate/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.person.predicate;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nus-jeff"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nus-jeff"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nus-jeff"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nus-jeff"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.PersonBuilder;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nus-jeff"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"nus-jeff"},"content":"        FindCommandTagPredicate firstPredicate \u003d new FindCommandTagPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"nus-jeff"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"nus-jeff"},"content":"        FindCommandTagPredicate secondPredicate \u003d new FindCommandTagPredicate(","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"nus-jeff"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"nus-jeff"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nus-jeff"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"nus-jeff"},"content":"        FindCommandTagPredicate firstPredicateCopy \u003d new FindCommandTagPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"nus-jeff"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nus-jeff"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"nus-jeff"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"nus-jeff"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nus-jeff"},"content":"        // One keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"nus-jeff"},"content":"        FindCommandTagPredicate predicate \u003d new FindCommandTagPredicate(Collections.singletonList(\"friend\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"friend\", \"student\").build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"nus-jeff"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandTagPredicate(Arrays.asList(\"friend\", \"student\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"friend\", \"student\").build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"nus-jeff"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandTagPredicate(Arrays.asList(\"friend\", \"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").withTags(\"friend\", \"student\").build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"nus-jeff"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandTagPredicate(Arrays.asList(\"FRIend\", \"stuDEnt\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"friend\", \"student\").build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"nus-jeff"},"content":"        // Alphanumerical keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandTagPredicate(Arrays.asList(\"cs2103t\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"nus-jeff"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"cs2103t\").build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"nus-jeff"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"nus-jeff"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"nus-jeff"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"nus-jeff"},"content":"        FindCommandTagPredicate predicate \u003d new FindCommandTagPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"friend\", \"student\").build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"nus-jeff"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandTagPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").withTags(\"friend\", \"student\").build()));","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"nus-jeff"},"content":"        // Keywords match name, phone, email and address, but does not match tag","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"nus-jeff"},"content":"        predicate \u003d new FindCommandTagPredicate(Arrays.asList(","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"nus-jeff"},"content":"                \"Alice\", \"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"nus-jeff"},"content":"        assertFalse(predicate.test(new PersonBuilder()","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"nus-jeff"},"content":"                .withName(\"Alice\")","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"nus-jeff"},"content":"                .withPhone(\"12345\")","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"nus-jeff"},"content":"                .withEmail(\"alice@email.com\")","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"nus-jeff"},"content":"                .withAddress(\"Main Street\")","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"nus-jeff"},"content":"                .withTags(\"friend\", \"student\")","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"nus-jeff"},"content":"                .build()));","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"nus-jeff"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"nus-jeff"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"chia-yh":2,"nus-jeff":85}},{"path":"src/test/java/seedu/socket/model/project/ProjectDeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_DEADLINE_ALPHA;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_DEADLINE_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.ProjectDeadline.DATE_TIME_FORMAT;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"public class ProjectDeadlineTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectDeadline ALPHA_DEADLINE \u003d new ProjectDeadline(VALID_PROJECT_DEADLINE_ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectDeadline BRAVO_DEADLINE \u003d new ProjectDeadline(VALID_PROJECT_DEADLINE_BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    private static final LocalDateTime VALID_LOCAL_DATE_TIME_ALPHA \u003d LocalDateTime.parse(VALID_PROJECT_DEADLINE_ALPHA,","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectDeadline(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        String invalidDeadline \u003d \" \";","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectDeadline(invalidDeadline));","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    public void testToString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        assertTrue(VALID_PROJECT_DEADLINE_ALPHA.equals(ALPHA_DEADLINE.toString()));","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"    public void testToLocalDateTime() {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        assertTrue(VALID_LOCAL_DATE_TIME_ALPHA.equals(ALPHA_DEADLINE.toLocalDateTime()));","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"        ProjectDeadline amyCopy \u003d new ProjectDeadline(VALID_PROJECT_DEADLINE_ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA_DEADLINE.equals(amyCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA_DEADLINE.equals(ALPHA_DEADLINE));","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_DEADLINE.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_DEADLINE.equals(5));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"        // different profile -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_DEADLINE.equals(BRAVO_DEADLINE));","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"dillongoh":59}},{"path":"src/test/java/seedu/socket/model/project/ProjectMeetingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cmang12"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"cmang12"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cmang12"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"cmang12"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_MEETING_ALPHA;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"cmang12"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_MEETING_BRAVO;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cmang12"},"content":"import static seedu.socket.model.project.ProjectMeeting.DATE_TIME_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"cmang12"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cmang12"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"cmang12"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"public class ProjectMeetingTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"    private static final ProjectMeeting ALPHA_MEETING \u003d new ProjectMeeting(VALID_PROJECT_MEETING_ALPHA);","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"    private static final ProjectMeeting BRAVO_MEETING \u003d new ProjectMeeting(VALID_PROJECT_MEETING_BRAVO);","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"    private static final LocalDateTime VALID_LOCAL_DATE_TIME_ALPHA \u003d LocalDateTime.parse(VALID_PROJECT_MEETING_ALPHA,","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"cmang12"},"content":"            DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cmang12"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cmang12"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectMeeting(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"    public void constructor_invalidMeeting_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"cmang12"},"content":"        String invalidMeeting \u003d \" \";","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"cmang12"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectMeeting(invalidMeeting));","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"cmang12"},"content":"    public void testToString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"        assertTrue(VALID_PROJECT_MEETING_ALPHA.equals(ALPHA_MEETING.toString()));","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"cmang12"},"content":"    public void testToLocalDateTime() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"cmang12"},"content":"        assertTrue(VALID_LOCAL_DATE_TIME_ALPHA.equals(ALPHA_MEETING.toLocalDateTime()));","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"cmang12"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"cmang12"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"cmang12"},"content":"        ProjectMeeting amyCopy \u003d new ProjectMeeting(VALID_PROJECT_MEETING_ALPHA);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"cmang12"},"content":"        assertTrue(ALPHA_MEETING.equals(amyCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"cmang12"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"cmang12"},"content":"        assertTrue(ALPHA_MEETING.equals(ALPHA_MEETING));","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"cmang12"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"cmang12"},"content":"        assertFalse(ALPHA_MEETING.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"cmang12"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"cmang12"},"content":"        assertFalse(ALPHA_MEETING.equals(5));","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"cmang12"},"content":"        // different profile -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"cmang12"},"content":"        assertFalse(ALPHA_MEETING.equals(BRAVO_MEETING));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"cmang12"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"cmang12":59}},{"path":"src/test/java/seedu/socket/model/project/ProjectNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"public class ProjectNameTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectName(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"    public void constructor_invalidProjectName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"        String invalidProjectName \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectName(invalidProjectName));","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public void isValidProjectName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        // null name","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProjectName.isValidProjectName(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        // invalid name","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectName.isValidProjectName(\"\")); // empty string","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectName.isValidProjectName(\" \")); // spaces only","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectName.isValidProjectName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectName.isValidProjectName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        // valid name","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectName.isValidProjectName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectName.isValidProjectName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectName.isValidProjectName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectName.isValidProjectName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectName.isValidProjectName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"dillongoh":40}},{"path":"src/test/java/seedu/socket/model/project/ProjectRepoHostTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_REPO_HOST_ALPHA;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_REPO_HOST_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"class ProjectRepoHostTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectRepoHost ALPHA_REPO_HOST \u003d new ProjectRepoHost(VALID_PROJECT_REPO_HOST_ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectRepoHost BRAVO_REPO_HOST \u003d new ProjectRepoHost(VALID_PROJECT_REPO_HOST_BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectRepoHost EMPTY_REPO_HOST \u003d new ProjectRepoHost(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectRepoHost(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    public void constructor_invalidHost_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"        String invalidProfile \u003d \" \";","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectRepoHost(invalidProfile));","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    public void testIsValidHost() {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"        // null host","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProjectRepoHost.isValidProjectRepoHost(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        // invalid host","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\" \")); // spaces only","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\"-chiayh\")); // starts with hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\"chiayh-\")); // ends with hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\"chiayh*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\"chia yh\")); // contains spaces","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\"chia--yh\")); // contains two consecutive hyphens","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoHost.isValidProjectRepoHost(\"0123456789012345678901234567890123456789\")); // 40 chars","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        // valid host","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"chiayh\")); // alphabets only","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"123456\")); // numbers only","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"chiayh2\")); // alphanumeric characters","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"chia-yh\")); // alphabets and hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"123-456\")); // numbers and hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"chia-yh2\")); // alphanumeric characters and hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"chia-yh-2\")); // alphanumeric characters and hyphens","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoHost.isValidProjectRepoHost(\"012345678901234567890123456789012345678\")); // 39 chars","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"    public void testIsEmptyRepoHost() {","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        assertTrue(EMPTY_REPO_HOST.isEmptyRepoHost());","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"    public void testToString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"        assertTrue(VALID_PROJECT_REPO_HOST_ALPHA.equals(ALPHA_REPO_HOST.toString()));","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"        ProjectRepoHost amyCopy \u003d new ProjectRepoHost(VALID_PROJECT_REPO_HOST_ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA_REPO_HOST.equals(amyCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA_REPO_HOST.equals(ALPHA_REPO_HOST));","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_REPO_HOST.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_REPO_HOST.equals(5));","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"        // different host -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_REPO_HOST.equals(BRAVO_REPO_HOST));","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"chia-yh":6,"dillongoh":72}},{"path":"src/test/java/seedu/socket/model/project/ProjectRepoNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_REPO_NAME_ALPHA;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_REPO_NAME_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"public class ProjectRepoNameTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectRepoName ALPHA_REPO_NAME \u003d new ProjectRepoName(VALID_PROJECT_REPO_NAME_ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectRepoName BRAVO_REPO_NAME \u003d new ProjectRepoName(VALID_PROJECT_REPO_NAME_BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"    private static final ProjectRepoName EMPTY_REPO_NAME \u003d new ProjectRepoName(\"\");","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectRepoName(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    public void constructor_invalidRepoName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"        String invalidRepoName \u003d \" \";","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectRepoName(invalidRepoName));","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    public void testIsValidRepoName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"        // null repo","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProjectRepoName.isValidProjectRepoName(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        // reserved repository names","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        assertFalse(ProjectRepoName.isValidProjectRepoName(\".\")); // .","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        assertFalse(ProjectRepoName.isValidProjectRepoName(\"..\")); // ..","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        // invalid repository names","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoName.isValidProjectRepoName(\" \")); // spaces only","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        assertFalse(ProjectRepoName.isValidProjectRepoName(\"^\")); // only invalid non-alphanumeric characters","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        assertFalse(ProjectRepoName.isValidProjectRepoName(\"chiayh*\")); // contains invalid non-alphanumeric characters","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ProjectRepoName.isValidProjectRepoName(\"chia yh\")); // contains spaces","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        assertFalse(ProjectRepoName.isValidProjectRepoName(\"01234567890123456789012345678901234567890123456789\"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"                + \"012345678901234567890123456789012345678901234567890\")); // 101 chars","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        // valid repository names","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"-\")); // hyphen only","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"_\")); // underscore only","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chiayh\")); // alphabets only","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"123456\")); // numbers only","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"...\")); // periods only","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"---\")); // hyphens only","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"___\")); // underscores only","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chiayh2\")); // alphanumeric characters","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia-yh\")); // alphabets and hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia_yh\")); // alphabets and underscore","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia.yh\")); // alphabets and period","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"123-456\")); // numbers and hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"123_456\")); // numbers and underscore","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"123.456\")); // numbers and period","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"..--\")); // periods and hyphens","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"..__\")); // periods and underscores","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"__--\")); // underscores and hyphens","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia-yh2\")); // alphanumeric characters and hyphen","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia-yh-2\")); // alphanumeric characters and hyphens","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia.yh2\")); // alphanumeric characters and period","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia.yh.2\")); // alphanumeric characters and periods","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia_yh2\")); // alphanumeric characters and underscore","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia_yh_2\")); // alphanumeric characters and underscores","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia.yh_2-4\")); // every valid character","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia-yh-\")); // ends with a hyphen","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia-yh_\")); // ends with an underscore","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"chia-yh.\")); // ends with a period","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        assertTrue(ProjectRepoName.isValidProjectRepoName(\"01234567890123456789012345678901234567890123456789\"","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"                + \"01234567890123456789012345678901234567890123456789\")); // 100 chars","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"    public void testIsEmptyRepoName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"        assertTrue(EMPTY_REPO_NAME.isEmptyRepoName());","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"    public void testToString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"        assertTrue(VALID_PROJECT_REPO_NAME_ALPHA.equals(ALPHA_REPO_NAME.toString()));","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"        ProjectRepoName alphaRepoCopy \u003d new ProjectRepoName(VALID_PROJECT_REPO_NAME_ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA_REPO_NAME.equals(alphaRepoCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"dillongoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA_REPO_NAME.equals(ALPHA_REPO_NAME));","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"dillongoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_REPO_NAME.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"dillongoh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_REPO_NAME.equals(5));","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"        // different repository -\u003e returns false","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA_REPO_NAME.equals(BRAVO_REPO_NAME));","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"chia-yh":34,"dillongoh":68}},{"path":"src/test/java/seedu/socket/model/project/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_DEADLINE_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"cmang12"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_MEETING_BRAVO;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_NAME_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_REPO_HOST_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_REPO_NAME_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalProjects.ALPHA;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalProjects.BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"public class ProjectTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e project.getMembers().remove(0));","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    public void isSameProject() {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA.isSameProject(ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.isSameProject(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        Project editedAlpha \u003d new ProjectBuilder(ALPHA).withRepoHost(VALID_PROJECT_REPO_HOST_BRAVO)","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"            .withRepoName(VALID_PROJECT_REPO_NAME_BRAVO).withProjectDeadline(VALID_PROJECT_DEADLINE_BRAVO)","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"            .withMembers(ALICE, BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA.isSameProject(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        editedAlpha \u003d new ProjectBuilder(ALPHA).withName(VALID_PROJECT_NAME_BRAVO).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.isSameProject(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"        Project editedBravo \u003d new ProjectBuilder(BRAVO).withName(VALID_PROJECT_NAME_BRAVO.toLowerCase()).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        assertFalse(BRAVO.isSameProject(editedBravo));","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        String nameWithTrailingSpaces \u003d VALID_PROJECT_NAME_BRAVO + \" \";","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        editedBravo \u003d new ProjectBuilder(BRAVO).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"        assertFalse(BRAVO.isSameProject(editedBravo));","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"        Project alphaCopy \u003d new ProjectBuilder(ALPHA).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA.equals(alphaCopy));","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"        assertTrue(ALPHA.equals(ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(5));","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(BRAVO));","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"        Project editedAlpha \u003d new ProjectBuilder(ALPHA).withName(VALID_PROJECT_NAME_BRAVO).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"        // different repo host -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"        editedAlpha \u003d new ProjectBuilder(ALPHA).withRepoHost(VALID_PROJECT_REPO_HOST_BRAVO).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"        // different repo name -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"        editedAlpha \u003d new ProjectBuilder(ALPHA).withRepoName(VALID_PROJECT_REPO_NAME_BRAVO).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"dillongoh"},"content":"        editedAlpha \u003d new ProjectBuilder(ALPHA).withProjectDeadline(VALID_PROJECT_DEADLINE_BRAVO).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"cmang12"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"cmang12"},"content":"        editedAlpha \u003d new ProjectBuilder(ALPHA).withProjectDeadline(VALID_PROJECT_MEETING_BRAVO).build();","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"cmang12"},"content":"        assertFalse(ALPHA.equals(editedAlpha));","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"dillongoh"},"content":"        // different members -\u003e returns false","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"        editedAlpha \u003d new ProjectBuilder(ALPHA).withMembers(CARL, DANIEL).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"        assertFalse(ALPHA.equals(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"cmang12":5,"dillongoh":95}},{"path":"src/test/java/seedu/socket/model/project/UniqueProjectListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.model.project;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PROJECT_REPO_HOST_BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_DEADLINE;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_REPO_HOST;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.model.project.Project.PROJ_REPO_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalProjects.ALPHA;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalProjects.BRAVO;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalProjects.CHARLIE;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalProjects.EMPTY_PROJECT;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalProjects.EMPTY_PROJECT_TWO;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.testutil.ProjectBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"public class UniqueProjectListTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    private final UniqueProjectList uniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"    public void contains_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.contains(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"    public void contains_projectNotInList_returnsFalse() {","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        assertFalse(uniqueProjectList.contains(ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"    public void contains_projectInList_returnsTrue() {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        assertTrue(uniqueProjectList.contains(ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"    public void contains_projectWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        Project editedAlpha \u003d new ProjectBuilder(ALPHA).withRepoHost(VALID_PROJECT_REPO_HOST_BRAVO)","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"            .withMembers(CARL, DANIEL).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        assertTrue(uniqueProjectList.contains(editedAlpha));","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"    public void add_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.add(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"    public void add_duplicateProject_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.add(ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"    public void setProject_nullTargetProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(null, ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"    public void setProject_nullEditedProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(ALPHA, null));","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"    public void setProject_targetProjectNotInList_throwsProjectNotFoundException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.setProject(ALPHA, ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"    public void setProject_editedProjectIsSameProject_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.setProject(ALPHA, ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"        expectedUniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"dillongoh"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"dillongoh"},"content":"    public void setProject_editedProjectHasSameIdentity_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"dillongoh"},"content":"        Project editedAlpha \u003d new ProjectBuilder(ALPHA).withRepoHost(VALID_PROJECT_REPO_HOST_BRAVO)","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"dillongoh"},"content":"            .withMembers(CARL, DANIEL).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.setProject(ALPHA, editedAlpha);","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"        expectedUniqueProjectList.add(editedAlpha);","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"dillongoh"},"content":"    public void setProject_editedProjectHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.setProject(ALPHA, BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"dillongoh"},"content":"        expectedUniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"dillongoh"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"dillongoh"},"content":"    public void setProject_editedProjectHasNonUniqueIdentity_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"dillongoh"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.setProject(ALPHA, BRAVO));","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"dillongoh"},"content":"    public void remove_nullProject_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.remove(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"dillongoh"},"content":"    public void remove_projectDoesNotExist_throwsProjectNotFoundException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"dillongoh"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.remove(ALPHA));","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"dillongoh"},"content":"    public void remove_existingProject_removesProject() {","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.remove(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"dillongoh"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"dillongoh"},"content":"    public void setProjects_nullUniqueProjectList_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((UniqueProjectList) null));","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"dillongoh"},"content":"    public void setProjects_uniqueProjectList_replacesOwnListWithProvidedUniqueProjectList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"dillongoh"},"content":"        expectedUniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.setProjects(expectedUniqueProjectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"dillongoh"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"dillongoh"},"content":"    public void setProjects_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"dillongoh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((List\u003cProject\u003e) null));","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"dillongoh"},"content":"    public void setProjects_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"dillongoh"},"content":"        List\u003cProject\u003e projectList \u003d Collections.singletonList(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.setProjects(projectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"dillongoh"},"content":"        expectedUniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"dillongoh"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2023-03-18"},{"lineNumber":164,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":165,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":166,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":167,"author":{"gitId":"dillongoh"},"content":"    public void setProjects_listWithDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"dillongoh"},"content":"        List\u003cProject\u003e listWithDuplicateProjects \u003d Arrays.asList(ALPHA, ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"dillongoh"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.setProjects(listWithDuplicateProjects));","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":173,"author":{"gitId":"dillongoh"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"dillongoh"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-18"},{"lineNumber":175,"author":{"gitId":"dillongoh"},"content":"            -\u003e uniqueProjectList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":177,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":178,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"dillongoh"},"content":"    public void sort_name() {","lastModifiedDate":"2023-03-18"},{"lineNumber":180,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":181,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT_TWO);","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":184,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":185,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList sortByNameList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"dillongoh"},"content":"        sortByNameList.add(EMPTY_PROJECT_TWO);","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.sort(PROJ_NAME);","lastModifiedDate":"2023-03-18"},{"lineNumber":192,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniqueProjectList, sortByNameList);","lastModifiedDate":"2023-03-18"},{"lineNumber":193,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":194,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":196,"author":{"gitId":"dillongoh"},"content":"    public void sort_repoHost() {","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":198,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT_TWO);","lastModifiedDate":"2023-03-18"},{"lineNumber":199,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":201,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":202,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList sortByPhoneList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":203,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":204,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":205,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":206,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":207,"author":{"gitId":"dillongoh"},"content":"        sortByPhoneList.add((EMPTY_PROJECT_TWO));","lastModifiedDate":"2023-03-18"},{"lineNumber":208,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.sort(PROJ_REPO_HOST);","lastModifiedDate":"2023-03-18"},{"lineNumber":209,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniqueProjectList, sortByPhoneList);","lastModifiedDate":"2023-03-18"},{"lineNumber":210,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":211,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":212,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":213,"author":{"gitId":"dillongoh"},"content":"    public void sort_repoName() {","lastModifiedDate":"2023-03-18"},{"lineNumber":214,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":215,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":216,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT_TWO);","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":218,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":219,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList sortByEmailList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":221,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":222,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":223,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":224,"author":{"gitId":"dillongoh"},"content":"        sortByEmailList.add(EMPTY_PROJECT_TWO);","lastModifiedDate":"2023-03-18"},{"lineNumber":225,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.sort(PROJ_REPO_NAME);","lastModifiedDate":"2023-03-18"},{"lineNumber":226,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniqueProjectList, sortByEmailList);","lastModifiedDate":"2023-03-18"},{"lineNumber":227,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":228,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":229,"author":{"gitId":"dillongoh"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":230,"author":{"gitId":"dillongoh"},"content":"    public void sort_deadline() {","lastModifiedDate":"2023-03-18"},{"lineNumber":231,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":232,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":233,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT_TWO);","lastModifiedDate":"2023-03-18"},{"lineNumber":234,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":235,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":236,"author":{"gitId":"dillongoh"},"content":"        UniqueProjectList sortByAddressList \u003d new UniqueProjectList();","lastModifiedDate":"2023-03-18"},{"lineNumber":237,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(ALPHA);","lastModifiedDate":"2023-03-18"},{"lineNumber":238,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(BRAVO);","lastModifiedDate":"2023-03-18"},{"lineNumber":239,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(CHARLIE);","lastModifiedDate":"2023-03-18"},{"lineNumber":240,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(EMPTY_PROJECT);","lastModifiedDate":"2023-03-18"},{"lineNumber":241,"author":{"gitId":"dillongoh"},"content":"        sortByAddressList.add(EMPTY_PROJECT_TWO);","lastModifiedDate":"2023-03-18"},{"lineNumber":242,"author":{"gitId":"dillongoh"},"content":"        uniqueProjectList.sort(PROJ_DEADLINE);","lastModifiedDate":"2023-03-18"},{"lineNumber":243,"author":{"gitId":"dillongoh"},"content":"        assertEquals(uniqueProjectList, sortByAddressList);","lastModifiedDate":"2023-03-18"},{"lineNumber":244,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":245,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"dillongoh":245}},{"path":"src/test/java/seedu/socket/model/tag/LanguageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.tag;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"class LanguageTest {","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    private static final Language AMY_LANGUAGE \u003d new Language(VALID_LANGUAGE_PYTHON);","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"    private static final Language BOB_LANGUAGE \u003d new Language(VALID_LANGUAGE_CPLUSPLUS);","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Language(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    public void constructor_invalidLanguageName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"        String invalidLanguageName \u003d \"\";","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Language(invalidLanguageName));","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    public void testIsValidLanguageName() {","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"        // null language name","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Language.isValidLanguageName(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        // invalid language name","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Language.isValidLanguageName(\"\")); // empty string","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Language.isValidLanguageName(\" \")); // spaces only","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Language.isValidLanguageName(\"^\")); // only invalid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Language.isValidLanguageName(\"1\")); // numbers only","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Language.isValidLanguageName(\"-\")); // starts with valid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Language.isValidLanguageName(\"+\")); // starts with valid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Language.isValidLanguageName(\"#\")); // starts with valid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        // valid language name","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Language.isValidLanguageName(\"C\")); // single alphabet only","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Language.isValidLanguageName(\"Python\")); // alphabets only","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Language.isValidLanguageName(\"C--\")); // alphabets and valid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Language.isValidLanguageName(\"C++\")); // alphabets and valid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Language.isValidLanguageName(\"C#\")); // alphabets and valid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Language.isValidLanguageName(\"X10\")); // alphanumeric characters","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Language.isValidLanguageName(\"abc-10\")); // alphanumeric characters and valid special characters","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"    public void testToString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"        assertTrue((\"[\" + VALID_LANGUAGE_PYTHON + \"]\").equals(AMY_LANGUAGE.toString()));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    public void testEquals() {","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        Language amyCopy \u003d new Language(VALID_LANGUAGE_PYTHON);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        assertTrue(AMY_LANGUAGE.equals(amyCopy));","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"        assertTrue(AMY_LANGUAGE.equals(AMY_LANGUAGE));","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        assertFalse(AMY_LANGUAGE.equals(null));","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"        assertFalse(AMY_LANGUAGE.equals(5));","lastModifiedDate":"2023-03-04"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        // different language -\u003e returns false","lastModifiedDate":"2023-03-04"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        assertFalse(AMY_LANGUAGE.equals(BOB_LANGUAGE));","lastModifiedDate":"2023-03-04"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"chia-yh":72,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.model.tag;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"nus-jeff"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"        // invalid tag name","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Tag.isValidTagName(\"-\")); // special chars","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Tag.isValidTagName(\" \")); // space","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Tag.isValidTagName(\" tag\")); // leading space","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Tag.isValidTagName(\"tag \")); // trailing space","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Tag.isValidTagName(\"invalid tag\")); // with space","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        assertFalse(Tag.isValidTagName(\"012345678901234567890\")); // exceed 20 chars","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        // valid tag name","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Tag.isValidTagName(\"tag\")); // alphabet","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Tag.isValidTagName(\"012\")); // numeric","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Tag.isValidTagName(\"tag1\")); // alphanumeric","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        assertTrue(Tag.isValidTagName(\"01234567890123456789\")); // 20 chars","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"chia-yh":18,"-":24,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_PROFILE \u003d \"-rachel\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_LANGUAGE \u003d \"++C\";","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_PROFILE \u003d BENSON.getProfile().toString();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"    private static final List\u003cJsonAdaptedLanguage\u003e VALID_LANGUAGES \u003d BENSON.getLanguages().stream()","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"            .map(JsonAdaptedLanguage::new)","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PROFILE, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"                VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PROFILE, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"                VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_invalidProfile_throwsIllegalValueException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PROFILE, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"                        VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d GitHubProfile.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_nullProfile_throwsIllegalValueException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"                VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GitHubProfile.class.getSimpleName());","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"                        VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"                VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"                        VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"                VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"chia-yh"},"content":"                        VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"chia-yh"},"content":"                VALID_LANGUAGES, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_invalidLanguages_throwsIllegalValueException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"chia-yh"},"content":"        List\u003cJsonAdaptedLanguage\u003e invalidLanguages \u003d new ArrayList\u003c\u003e(VALID_LANGUAGES);","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"chia-yh"},"content":"        invalidLanguages.add(new JsonAdaptedLanguage(INVALID_LANGUAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"chia-yh"},"content":"                        invalidLanguages, VALID_TAGS);","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PROFILE, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"chia-yh"},"content":"                        VALID_LANGUAGES, invalidTags);","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chia-yh":62,"-":92}},{"path":"src/test/java/seedu/socket/storage/JsonAdaptedProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.storage.JsonAdaptedProject.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalProjects.ALPHA;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectDeadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectMeeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectName;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoHost;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoName;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"class JsonAdaptedProjectTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_PROJECT_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_PROJECT_REPO_HOST \u003d \"-rachel\";","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_PROJECT_REPO_NAME \u003d \"..\";","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    private static final String INVALID_PROJECT_DEADLINE \u003d \" \";","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"cmang12"},"content":"    private static final String INVALID_PROJECT_MEETING \u003d \" \";","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_PROJECT_NAME \u003d ALPHA.getName().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_PROJECT_REPO_HOST \u003d ALPHA.getRepoHost().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_PROJECT_REPO_NAME \u003d ALPHA.getRepoName().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"    private static final String VALID_PROJECT_DEADLINE \u003d ALPHA.getDeadline().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"cmang12"},"content":"    private static final String VALID_PROJECT_MEETING \u003d ALPHA.getMeeting().toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e VALID_PERSONS \u003d ALPHA.getMembers().stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_validProjectDetails_returnsProject() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(ALPHA);","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        assertEquals(ALPHA, project.toModelType());","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_invalidProjectName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(INVALID_PROJECT_NAME, VALID_PROJECT_REPO_HOST, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"cmang12"},"content":"                VALID_PROJECT_DEADLINE, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d ProjectName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_nullProjectName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(null, VALID_PROJECT_REPO_HOST, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"cmang12"},"content":"                VALID_PROJECT_DEADLINE, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectName.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_invalidProjectRepoHost_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, INVALID_PROJECT_REPO_HOST, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"cmang12"},"content":"                        VALID_PROJECT_DEADLINE, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d ProjectRepoHost.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_nullProjectRepoHost_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, null, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"cmang12"},"content":"                        VALID_PROJECT_DEADLINE, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectRepoHost.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_invalidProjectRepoName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, VALID_PROJECT_REPO_HOST, INVALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"cmang12"},"content":"                        VALID_PROJECT_DEADLINE, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d ProjectRepoName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_nullProjectRepoName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, VALID_PROJECT_REPO_HOST, null,","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"cmang12"},"content":"                        VALID_PROJECT_DEADLINE, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectRepoName.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_invalidProjectDeadline_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, VALID_PROJECT_REPO_HOST, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"cmang12"},"content":"                        INVALID_PROJECT_DEADLINE, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d ProjectDeadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_nullProjectDeadline_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, VALID_PROJECT_REPO_HOST, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"cmang12"},"content":"                        null, VALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectDeadline.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"cmang12"},"content":"    public void toModelType_invalidProjectMeeting_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"cmang12"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"cmang12"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, VALID_PROJECT_REPO_HOST, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"cmang12"},"content":"                        VALID_PROJECT_DEADLINE, INVALID_PROJECT_MEETING, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"cmang12"},"content":"        String expectedMessage \u003d ProjectDeadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"cmang12"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"cmang12"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"cmang12"},"content":"    public void toModelType_nullProjectMeeting_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"cmang12"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"cmang12"},"content":"                new JsonAdaptedProject(VALID_PROJECT_NAME, VALID_PROJECT_REPO_HOST, VALID_PROJECT_REPO_NAME,","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"cmang12"},"content":"                        VALID_PROJECT_DEADLINE, null, VALID_PERSONS);","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"cmang12"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectMeeting.class.getSimpleName());","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"cmang12"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"chia-yh"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cmang12":33,"chia-yh":100}},{"path":"src/test/java/seedu/socket/storage/JsonSerializableSocketTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.util.JsonUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.TypicalPersons;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.testutil.TypicalProjects;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"public class JsonSerializableSocketTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableSocketTest\");","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsSocket.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonSocket.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonSocket.json\");","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    private static final Path TYPICAL_PROJECTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalProjectsSocket.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    private static final Path INVALID_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidProjectSocket.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    private static final Path DUPLICATE_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateProjectSocket.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"chia-yh"},"content":"    private static final Path MISSING_PROJECT_MEMBER_IN_PERSONS_FILE \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"            TEST_DATA_FOLDER.resolve(\"missingProjectMemberInPersonsSocket.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"        JsonSerializableSocket dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"                JsonSerializableSocket.class).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"        Socket socketFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"        Socket typicalPersonsSocket \u003d TypicalPersons.getTypicalSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"        assertEquals(socketFromFile, typicalPersonsSocket);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        JsonSerializableSocket dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"                JsonSerializableSocket.class).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"        JsonSerializableSocket dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"                JsonSerializableSocket.class).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSocket.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_typicalProjectsFile_success() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        JsonSerializableSocket dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PROJECTS_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"                JsonSerializableSocket.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        Socket socketFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        Socket typicalProjectsSocket \u003d TypicalProjects.getTypicalSocket();","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        assertEquals(socketFromFile, typicalProjectsSocket);","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_invalidProjectsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        JsonSerializableSocket dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PROJECT_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"                JsonSerializableSocket.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_duplicateProjects_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        JsonSerializableSocket dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PROJECT_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"                JsonSerializableSocket.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSocket.MESSAGE_DUPLICATE_PROJECT,","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"    public void toModelType_missingProjectMemberInPersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"        JsonSerializableSocket dataFromFile \u003d JsonUtil.readJsonFile(MISSING_PROJECT_MEMBER_IN_PERSONS_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"chia-yh"},"content":"                JsonSerializableSocket.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"chia-yh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableSocket.MESSAGE_MISSING_PERSON,","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chia-yh":60,"-":25}},{"path":"src/test/java/seedu/socket/storage/JsonSocketStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"public class JsonSocketStorageTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSocketStorageTest\");","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"chia-yh"},"content":"    public void readSocket_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e readSocket(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"    private java.util.Optional\u003cReadOnlySocket\u003e readSocket(String filePath) throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"        return new JsonSocketStorage(Paths.get(filePath)).readSocket(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"        assertFalse(readSocket(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSocket(\"notJsonFormaSocket.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    public void readSocket_invalidPersonSocket_throwDataConversionException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSocket(\"invalidPersonSocket.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"    public void readSocket_invalidAndValidPersonSocket_throwDataConversionException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        assertThrows(DataConversionException.class, () -\u003e readSocket(\"invalidAndValidPersonSocket.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    public void readAndSaveSocket_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"        Socket original \u003d getTypicalSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        JsonSocketStorage jsonAddressBookStorage \u003d new JsonSocketStorage(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        jsonAddressBookStorage.saveSocket(original, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        ReadOnlySocket readBack \u003d jsonAddressBookStorage.readSocket(filePath).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"        assertEquals(original, new Socket(readBack));","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"        jsonAddressBookStorage.saveSocket(original, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"        readBack \u003d jsonAddressBookStorage.readSocket(filePath).get();","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"        assertEquals(original, new Socket(readBack));","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"        jsonAddressBookStorage.saveSocket(original); // file path not specified","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"        readBack \u003d jsonAddressBookStorage.readSocket().get(); // file path not specified","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"        assertEquals(original, new Socket(readBack));","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"    public void saveSocket_nullSocket_throwsNullPointerException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSocket(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"     * Saves {@code Socket} at the specified {@code filePath}.","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"chia-yh"},"content":"    private void saveSocket(ReadOnlySocket socket, String filePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"chia-yh"},"content":"            new JsonSocketStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"chia-yh"},"content":"                    .saveSocket(socket, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"    public void saveSocket_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveSocket(new Socket(), null));","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"chia-yh":41,"-":68}},{"path":"src/test/java/seedu/socket/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"        userPrefs.setSocketFilePath(Paths.get(\"socket.json\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"chia-yh":6,"-":117}},{"path":"src/test/java/seedu/socket/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalSocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.GuiSettings;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.ReadOnlySocket;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.UserPrefs;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"        JsonSocketStorage addressBookStorage \u003d new JsonSocketStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"    public void socketReadSave() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"         * {@link JsonSocketStorage} class.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonSocketStorageTest} class.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        Socket original \u003d getTypicalSocket();","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        storageManager.saveSocket(original);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        ReadOnlySocket retrieved \u003d storageManager.readSocket().get();","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"        assertEquals(original, new Socket(retrieved));","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"    public void getSocketFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        assertNotNull(storageManager.getSocketFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":16,"-":52}},{"path":"src/test/java/seedu/socket/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"chia-yh":1,"-":33}},{"path":"src/test/java/seedu/socket/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        descriptor.setProfile(person.getProfile());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        descriptor.setLanguages(person.getLanguages());","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"     * Sets the {@code Profile} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"    public EditPersonDescriptorBuilder withProfile(String profile) {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"        descriptor.setProfile(new GitHubProfile(profile));","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"        return this;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"     * Parses the {@code languages} into a {@code Set\u003cLanguage\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"     * that we are building.","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"    public EditPersonDescriptorBuilder withLanguages(String... languages) {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"        Set\u003cLanguage\u003e languageSet \u003d Stream.of(languages).map(Language::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"        descriptor.setLanguages(languageSet);","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"        return this;","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"chia-yh":28,"-":79,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"    public static final String DEFAULT_PROFILE \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"    public static final String DEFAULT_PHONE \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"chia-yh"},"content":"    public static final String DEFAULT_EMAIL \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"\";","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"    private GitHubProfile profile;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"    private Set\u003cLanguage\u003e languages;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"        profile \u003d new GitHubProfile(DEFAULT_PROFILE);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        languages \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"        profile \u003d personToCopy.getProfile();","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        languages \u003d new HashSet\u003c\u003e(personToCopy.getLanguages());","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"     * Sets the {@code Profile} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"    public PersonBuilder withProfile(String profile) {","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"        this.profile \u003d new GitHubProfile(profile);","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"chia-yh"},"content":"     * Parses the {@code languages} into a {@code Set\u003cLanguage\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"chia-yh"},"content":"    public PersonBuilder withLanguages(String ... languages) {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"chia-yh"},"content":"        this.languages \u003d SampleDataUtil.getLanguageSet(languages);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"chia-yh"},"content":"        return this;","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"chia-yh"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"chia-yh"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"chia-yh"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"chia-yh"},"content":"        return this;","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"        return new Person(name, profile, phone, email, address, languages, tags);","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"chia-yh":38,"-":81,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_PROFILE;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.AddCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand.RemovePersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"        sb.append(PREFIX_PROFILE + person.getProfile().value + \" \");","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"        person.getLanguages().stream().forEach(","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"                s -\u003e sb.append(PREFIX_LANGUAGE + s.languageName + \" \")","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"        );","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"        descriptor.getProfile().ifPresent(profile -\u003e sb.append(PREFIX_PROFILE).append(profile.value).append(\" \"));","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"        if (descriptor.getLanguages().isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"            Set\u003cLanguage\u003e languages \u003d descriptor.getLanguages().get();","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"            if (languages.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"                sb.append(PREFIX_LANGUAGE).append(\" \");","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"            } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"                languages.forEach(s -\u003e sb.append(PREFIX_LANGUAGE).append(s.languageName).append(\" \"));","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"huanghao1998"},"content":"    public static String getRemovePersonDescriptorDetails(RemovePersonDescriptor descriptor) {","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"huanghao1998"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"        descriptor.getRemoveProfile().ifPresent(profile -\u003e sb.append(PREFIX_PROFILE).append(profile.value).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"        descriptor.getRemovePhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"        descriptor.getRemoveEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"        descriptor.getRemoveAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"huanghao1998"},"content":"        if (descriptor.getRemoveLanguages().isPresent()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"huanghao1998"},"content":"            Set\u003cLanguage\u003e languages \u003d descriptor.getRemoveLanguages().get();","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"            if (languages.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"                sb.append(PREFIX_LANGUAGE).append(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"            } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"                languages.forEach(s -\u003e sb.append(PREFIX_LANGUAGE).append(s.languageName).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"huanghao1998"},"content":"        if (descriptor.getRemoveTags().isPresent()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"huanghao1998"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getRemoveTags().get();","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"            } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"            }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"huanghao1998":28,"chia-yh":25,"-":52,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/testutil/ProjectBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectDeadline;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectMeeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectName;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoHost;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cmang12"},"content":"import seedu.socket.model.project.ProjectRepoName;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"dillongoh"},"content":" * A utility class to help with building Project objects.","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"public class ProjectBuilder {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":"    public static final String DEFAULT_NAME \u003d \"ALPHA\";","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":"    public static final String DEFAULT_REPO_HOST \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"    public static final String DEFAULT_REPO_NAME \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"\";","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"cmang12"},"content":"    public static final String DEFAULT_MEETING \u003d \"\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"    private ProjectName name;","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"dillongoh"},"content":"    private ProjectRepoHost repoHost;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"    private ProjectRepoName repoName;","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"    private ProjectDeadline deadline;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"cmang12"},"content":"    private ProjectMeeting meeting;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"    private Set\u003cPerson\u003e members;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"dillongoh"},"content":"     * Creates a {@code ProjectBuilder} with the default details.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"    public ProjectBuilder() {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"        name \u003d new ProjectName(DEFAULT_NAME);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        repoHost \u003d new ProjectRepoHost(DEFAULT_REPO_HOST);","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        repoName \u003d new ProjectRepoName(DEFAULT_REPO_NAME);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        deadline \u003d new ProjectDeadline(DEFAULT_DEADLINE);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"        meeting \u003d new ProjectMeeting(DEFAULT_MEETING);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        members \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"     * Initializes the ProjectBuilder with the data of {@code projectToCopy}.","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"dillongoh"},"content":"    public ProjectBuilder(Project projectToCopy) {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"        name \u003d projectToCopy.getName();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"        repoHost \u003d projectToCopy.getRepoHost();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"        repoName \u003d projectToCopy.getRepoName();","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        deadline \u003d projectToCopy.getDeadline();","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"cmang12"},"content":"        meeting \u003d projectToCopy.getMeeting();","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        members \u003d new HashSet\u003c\u003e(projectToCopy.getMembers());","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"dillongoh"},"content":"     * Sets the {@code ProjectName} of the {@code Project} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"dillongoh"},"content":"    public ProjectBuilder withName(String name) {","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"dillongoh"},"content":"        this.name \u003d new ProjectName(name);","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"dillongoh"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"dillongoh"},"content":"     * Sets the {@code RepoHost} of the {@code Project} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"dillongoh"},"content":"    public ProjectBuilder withRepoHost(String host) {","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"dillongoh"},"content":"        this.repoHost \u003d new ProjectRepoHost(host);","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"dillongoh"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"dillongoh"},"content":"     * Sets the {@code RepoName} of the {@code Project} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"dillongoh"},"content":"    public ProjectBuilder withRepoName(String repoName) {","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"        this.repoName \u003d new ProjectRepoName(repoName);","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"dillongoh"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"dillongoh"},"content":"     * Sets the {@code Deadline} of the {@code Project} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"dillongoh"},"content":"    public ProjectBuilder withProjectDeadline(String deadline) {","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"dillongoh"},"content":"        this.deadline \u003d new ProjectDeadline(deadline);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"dillongoh"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"cmang12"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"cmang12"},"content":"     * Sets the {@code Meeting} of the {@code Project} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"cmang12"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"cmang12"},"content":"    public ProjectBuilder withProjectMeeting(String meeting) {","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"cmang12"},"content":"        this.meeting \u003d new ProjectMeeting(meeting);","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"cmang12"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"cmang12"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"cmang12"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"     * Parses the {@code members} into a {@code Set\u003cMember\u003e} and set it to the {@code Project} that we are building.","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"    public ProjectBuilder withMembers(Person ... members) {","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"        this.members \u003d SampleDataUtil.getMemberSet(members);","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"        return this;","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"dillongoh"},"content":"    public Project build() {","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"cmang12"},"content":"        return new Project(name, repoHost, repoName, deadline, meeting, members);","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"dillongoh"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"cmang12":19,"dillongoh":92}},{"path":"src/test/java/seedu/socket/testutil/RemovePersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"huanghao1998"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"huanghao1998"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"huanghao1998"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.logic.commands.RemoveCommand.RemovePersonDescriptor;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Address;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Email;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.GitHubProfile;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Language;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"nus-jeff"},"content":"import seedu.socket.model.person.tag.Tag;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"huanghao1998"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"huanghao1998"},"content":" * A utility class to help with building RemovePersonDescriptor objects.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"huanghao1998"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"huanghao1998"},"content":"public class RemovePersonDescriptorBuilder {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"huanghao1998"},"content":"    private RemovePersonDescriptor descriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder() {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptor();","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder(RemovePersonDescriptor descriptor) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"huanghao1998"},"content":"        this.descriptor \u003d new RemovePersonDescriptor(descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"huanghao1998"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder(Person person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"huanghao1998"},"content":"        descriptor \u003d new RemovePersonDescriptor();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setPerson(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setProfile(person.getProfile());","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setLanguages(person.getLanguages());","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"huanghao1998"},"content":"     * Sets the {@code Profile} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setPerson(person);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"huanghao1998"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"huanghao1998"},"content":"     * Sets the {@code Profile} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder withProfile(String profile) {","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setProfile(new GitHubProfile(profile));","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"huanghao1998"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"huanghao1998"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"huanghao1998"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"huanghao1998"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"huanghao1998"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"huanghao1998"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"huanghao1998"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"huanghao1998"},"content":"     * Parses the {@code languages} into a {@code Set\u003cLanguage\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"huanghao1998"},"content":"     * that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder withLanguages(String... languages) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"huanghao1998"},"content":"        Set\u003cLanguage\u003e languageSet \u003d Stream.of(languages).map(Language::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setLanguages(languageSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"huanghao1998"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"huanghao1998"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"huanghao1998"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"huanghao1998"},"content":"     * that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"huanghao1998"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"huanghao1998"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"huanghao1998"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"huanghao1998"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"huanghao1998"},"content":"    public RemovePersonDescriptor build() {","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"huanghao1998"},"content":"        return descriptor;","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"huanghao1998"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"huanghao1998"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"huanghao1998"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"huanghao1998":100,"chia-yh":7,"nus-jeff":2}},{"path":"src/test/java/seedu/socket/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":1,"-":71}},{"path":"src/test/java/seedu/socket/testutil/SocketBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":" * A utility class to help with building {@code Socket} objects.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":" *     {@code Socket ab \u003d new SocketBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"public class SocketBuilder {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    private Socket socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"    public SocketBuilder() {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"chia-yh"},"content":"        socket \u003d new Socket();","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"chia-yh"},"content":"    public SocketBuilder(Socket socket) {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"chia-yh"},"content":"        this.socket \u003d socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"chia-yh"},"content":"     * Adds a new {@code Person} to the {@code Socket} that we are building.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"chia-yh"},"content":"    public SocketBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"chia-yh"},"content":"        socket.addPerson(person);","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"     * Adds a new {@code Project} to the {@code Socket} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"chia-yh"},"content":"    public SocketBuilder withProject(Project project) {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"chia-yh"},"content":"        socket.addProject(project);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"    public Socket build() {","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"chia-yh"},"content":"        return socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":25,"-":18}},{"path":"src/test/java/seedu/socket/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chia-yh":4,"-":51}},{"path":"src/test/java/seedu/socket/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.commons.core.index.Index;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"    public static final Index INDEX_FIRST_PROJECT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"    public static final Index INDEX_SECOND_PROJECT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"    public static final Index INDEX_THIRD_PROJECT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"chia-yh":5,"-":10}},{"path":"src/test/java/seedu/socket/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_GITHUBPROFILE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_CPLUSPLUS;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_LANGUAGE_PYTHON;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"chia-yh"},"content":"            .withProfile(\"alice-pauline\")","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"chia-yh"},"content":"            .withProfile(\"benson-meier\")","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"chia-yh"},"content":"            .withLanguages(\"Java\", \"JavaScript\")","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":42,"author":{"gitId":"chia-yh"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"chia-yh"},"content":"            .withProfile(\"carl-kurz\")","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"chia-yh"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"heinz@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"wall street\")","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"chia-yh"},"content":"            .withLanguages(\"C\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"chia-yh"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"chia-yh"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"10th street\")","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"chia-yh"},"content":"            .withLanguages(\"Python\")","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"chia-yh"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"chia-yh"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"chia-yh"},"content":"            .withProfile(\"elle-meyer\")","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"chia-yh"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"anna@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"            .withLanguages(\"Python\")","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\")","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"            .withProfile(\"hoon-meier\")","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\")","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"chia-yh"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"chia-yh"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"chia-yh"},"content":"            .withLanguages(\"C++\", \"C#\").build();","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":82,"author":{"gitId":"chia-yh"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"chia-yh"},"content":"            .withProfile(VALID_GITHUBPROFILE_AMY)","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"chia-yh"},"content":"            .withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"chia-yh"},"content":"            .withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"chia-yh"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"chia-yh"},"content":"            .withLanguages(VALID_LANGUAGE_PYTHON)","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"chia-yh"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"chia-yh"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"chia-yh"},"content":"            .withProfile(VALID_GITHUBPROFILE_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"chia-yh"},"content":"            .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"chia-yh"},"content":"            .withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"chia-yh"},"content":"            .withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"chia-yh"},"content":"            .withLanguages(VALID_LANGUAGE_CPLUSPLUS)","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"chia-yh"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":97,"author":{"gitId":"dillongoh"},"content":"    public static final Person EMPTY \u003d new PersonBuilder().withName(\"Empty Contact\")","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"dillongoh"},"content":"        .withProfile(\"\")","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"dillongoh"},"content":"        .withPhone(\"\")","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"dillongoh"},"content":"        .withEmail(\"\")","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"dillongoh"},"content":"        .withAddress(\"\")","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"dillongoh"},"content":"        .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"dillongoh"},"content":"    public static final Person EMPTY_TWO \u003d new PersonBuilder().withName(\"Empty Contact 2\")","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"dillongoh"},"content":"        .withProfile(\"\")","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"dillongoh"},"content":"        .withPhone(\"\")","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"dillongoh"},"content":"        .withEmail(\"\")","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"dillongoh"},"content":"        .withAddress(\"\")","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"dillongoh"},"content":"        .build();","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"chia-yh"},"content":"     * Returns an {@code Socket} with all the typical persons.","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"chia-yh"},"content":"    public static Socket getTypicalSocket() {","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"chia-yh"},"content":"        Socket socket \u003d new Socket();","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"chia-yh"},"content":"            socket.addPerson(person);","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":122,"author":{"gitId":"chia-yh"},"content":"        return socket;","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"chia-yh":77,"-":39,"dillongoh":12}},{"path":"src/test/java/seedu/socket/testutil/TypicalProjects.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dillongoh"},"content":"package seedu.socket.testutil;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"dillongoh"},"content":"import static seedu.socket.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"chia-yh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"chia-yh"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"chia-yh"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.Socket;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.model.person.Person;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"dillongoh"},"content":"import seedu.socket.model.project.Project;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"dillongoh"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"dillongoh"},"content":" * A utility class containing a list of {@code Project} objects to be used in tests.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"dillongoh"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"dillongoh"},"content":"public class TypicalProjects {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"dillongoh"},"content":"    public static final Project ALPHA \u003d new ProjectBuilder().withName(\"Alpha Project\")","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"dillongoh"},"content":"        .withRepoHost(\"alice-pauline\")","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"dillongoh"},"content":"        .withRepoName(\"AlphaRepo\")","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"dillongoh"},"content":"        .withProjectDeadline(\"01/01/23-2359\")","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"cmang12"},"content":"        .withProjectMeeting(\"01/01/23-1000\")","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"dillongoh"},"content":"        .withMembers(ALICE, BENSON).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"dillongoh"},"content":"    public static final Project BRAVO \u003d new ProjectBuilder().withName(\"Bravo Project\")","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"dillongoh"},"content":"        .withRepoHost(\"carl-kurz\")","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"dillongoh"},"content":"        .withRepoName(\"BravoRepo\")","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"dillongoh"},"content":"        .withProjectDeadline(\"02/01/23-2359\")","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"cmang12"},"content":"        .withProjectMeeting(\"02/01/23-1000\")","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"dillongoh"},"content":"        .withMembers(CARL, DANIEL).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"dillongoh"},"content":"    public static final Project CHARLIE \u003d new ProjectBuilder().withName(\"Charlie Project\")","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"dillongoh"},"content":"        .withRepoHost(\"benson-meier\")","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"dillongoh"},"content":"        .withRepoName(\"CharlieRepo\")","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"dillongoh"},"content":"        .withProjectDeadline(\"03/01/23-2359\")","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"cmang12"},"content":"        .withProjectMeeting(\"03/01/23-1000\")","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"dillongoh"},"content":"        .withMembers(ELLE, FIONA).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"dillongoh"},"content":"    public static final Project EMPTY_PROJECT \u003d new ProjectBuilder().withName(\"Empty Project 1\")","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"dillongoh"},"content":"        .withRepoHost(\"\")","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"dillongoh"},"content":"        .withRepoName(\"\")","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"dillongoh"},"content":"        .withProjectDeadline(\"\")","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"cmang12"},"content":"        .withProjectMeeting(\"\")","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"dillongoh"},"content":"        .withMembers().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"dillongoh"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"dillongoh"},"content":"    public static final Project EMPTY_PROJECT_TWO \u003d new ProjectBuilder().withName(\"Empty Project 2\")","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"dillongoh"},"content":"        .withRepoHost(\"\")","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"dillongoh"},"content":"        .withRepoName(\"\")","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"dillongoh"},"content":"        .withProjectDeadline(\"\")","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"cmang12"},"content":"        .withProjectMeeting(\"\")","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"dillongoh"},"content":"        .withMembers().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"chia-yh"},"content":"    private TypicalProjects() {} // prevents instantiation","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"chia-yh"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"chia-yh"},"content":"     * Returns an {@code Socket} with all the typical persons and projects, with references synced","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"chia-yh"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"chia-yh"},"content":"    public static Socket getTypicalSocket() {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"chia-yh"},"content":"        Socket socket \u003d new Socket();","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"chia-yh"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"chia-yh"},"content":"            socket.addPerson(person);","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"chia-yh"},"content":"        for (Project project : getTypicalProjects()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"chia-yh"},"content":"            socket.addProject(project);","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"chia-yh"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"chia-yh"},"content":"        return socket;","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"chia-yh"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"chia-yh"},"content":"    public static List\u003cProject\u003e getTypicalProjects() {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"chia-yh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALPHA, BRAVO, CHARLIE));","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"chia-yh"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"dillongoh"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"cmang12":5,"chia-yh":27,"dillongoh":45}},{"path":"src/test/java/seedu/socket/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chia-yh":1,"-":34}},{"path":"src/test/java/seedu/socket/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chia-yh"},"content":"package seedu.socket.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chia-yh"},"content":"import static seedu.socket.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"chia-yh"},"content":"import seedu.socket.MainApp;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chia-yh":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"\u003c?import seedu.socket.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"chia-yh":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"chia-yh"},"content":"\u003cfx:root type\u003d\"seedu.socket.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"chia-yh":1,"-":5}}]
