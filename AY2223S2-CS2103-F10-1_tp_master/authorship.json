[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"# OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"## Description","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target users are individuals who are responsible for assigning tasks and overseeing the work of a team. The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails. OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organized manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"## Features","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"- Manage tasks for employees","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"- Overview of all tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"- Quick locate of important tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"- Assign tasks to specific employees","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"- Find tasks related to certain employees","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"## Getting Started","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"- Check out our [OfficeConnect Website](https://ay2223s2-cs2103-f10-1.github.io/tp/)","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"- Download our latest release from [OfficeConnect Release Page](https://github.com/AY2223S2-CS2103T-W10-1/tp/releases)","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"## Usage","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"- `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]`","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"- `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]`","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"- `delete INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"- `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"- `list`","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"- `addtask s/SUBJECT c/CONTENT st/STATUS`","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"- `deletetask INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"- `assign ti/INDEX pi/INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"- `mark INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"- `unmark INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"- `listtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"- `findtask KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"- `review NAME`","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"- `review SUBJECT`","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"- `clear`","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"- `exit`","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"## Contributing","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"This project is a part of the se-education.org initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"## License","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"This project is licensed under the [MIT License](LICENSE).","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"## Acknowledgments","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"* This is a sample project for Software Engineering (SE) students.","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"  * As a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"  * As a case study","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"  * It is written in OOP fashion. It provides a reasonably well-written codebase that is bigger (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"  * It comes with a reasonable level of user and developer documentation.","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"* It is named `AddressBook Level 3` (`AB3` for short) because it was initially created as part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3`, etc.).","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"* For detailed documentation of this project, see the [Address Book Product Website](https://se-education.org/addressbook-level3).","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"cyiting":13,"Nicklelodeon":2,"SPWwj":39,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    archiveFileName \u003d \u0027officeconnect.jar\u0027","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SPWwj":1,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"### Damith C. Rajapakse","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"damithc\" src\u003d\"images/damithc.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"[[github](https://github.com/damithc)]","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"### KIM JUNGBAE","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"jbkim1999\" src\u003d\"images/jbkim1999.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"[[github](https://github.com/jbkim1999)]","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"* Role: Project Advisor","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"### Lee Kay Yen","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"\u003cimg alt\u003d\"kayyenl\" src\u003d\"images/kayyenl.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"[[github](http://github.com/kayyenl)]","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"[[portfolio](team/kayyenl.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"### Wei Wenjie","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"spwwj\" src\u003d\"images/spwwj.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"[[github](http://github.com/spwwj)]","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"[[portfolio](team/spwwj.md)]","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Guo-KeCheng"},"content":"### Guo Kecheng","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"guo-kecheng\" src\u003d\"images/guo-kecheng.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Guo-KeCheng"},"content":"[[github](https://github.com/Guo-KeCheng)]","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"Guo-KeCheng"},"content":"[[portfolio](team/guo-kecheng.md)]","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"### Nicholas Cheong","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"nicklelodeon\" src \u003d \"images/nicklelodeon.png\" width \u003d \"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"[[github](https://github.com/Nicklelodeon)]","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"[[portfolio](team/nicklelodeon.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"### Chu Yi Ting","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"cyiting\" src\u003d\"images/cyiting.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"cyiting"},"content":"[[github](https://github.com/cyiting)]","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"[[portfolio](team/cyiting.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"cyiting"},"content":"* Role: Developer","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"cyiting"},"content":"* Responsibilities: Model","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"cyiting":9,"Nicklelodeon":4,"SPWwj":16,"-":43,"Guo-KeCheng":3,"kayyenl":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"## Introduction","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload ","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual ","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"tasks like typing and sending emails.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates’ workloads, allowing ","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and ","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that ","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"OfficeConnect is a brownfield Java project based on the [AB3 project template](https://github.com/se-edu/addressbook-level3) ","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"by [se-education.org](https://se-education.org).","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"* Libraries used include: [JavaFx](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://junit.org/junit5/)","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"Guo-KeCheng"},"content":"* holds a managerial role","lastModifiedDate":"2023-03-04"},{"lineNumber":275,"author":{"gitId":"Nicklelodeon"},"content":"* has a need to manage a significant number of subordinates","lastModifiedDate":"2023-02-27"},{"lineNumber":276,"author":{"gitId":"Nicklelodeon"},"content":"* has a need to assign large number of tasks to subordinates","lastModifiedDate":"2023-02-27"},{"lineNumber":277,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"Nicklelodeon"},"content":"**Value proposition**:","lastModifiedDate":"2023-02-27"},{"lineNumber":283,"author":{"gitId":"Nicklelodeon"},"content":"* manage tasks and contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-02-27"},{"lineNumber":284,"author":{"gitId":"Guo-KeCheng"},"content":"* able to view all upcoming tasks to be completed at one glance","lastModifiedDate":"2023-03-04"},{"lineNumber":285,"author":{"gitId":"Nicklelodeon"},"content":"* allows efficient delegation of tasks to subordinates in an organised and centralised manner","lastModifiedDate":"2023-02-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"Nicklelodeon"},"content":"| -------- |--------------------------------------------|---------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-02-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                      | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | add tasks                                   |                                                                        |","lastModifiedDate":"2023-02-27"},{"lineNumber":296,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | delete tasks                                | remove tasks that I no longer need                                     |","lastModifiedDate":"2023-02-27"},{"lineNumber":297,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | find tasks assigned to specific subordinate | better manage my subordinates workload                                 |","lastModifiedDate":"2023-02-27"},{"lineNumber":298,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | check all ongoing tasks available           | better delegate my tasks                                               |","lastModifiedDate":"2023-02-27"},{"lineNumber":299,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | assign tasks to a subordinate               | keep track of which subordinate is in charge of which task             |","lastModifiedDate":"2023-02-27"},{"lineNumber":300,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | add a subordinate                           |                                                                        |","lastModifiedDate":"2023-02-27"},{"lineNumber":301,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | delete a subordinate                        | remove subordinates that I no longer need                              |","lastModifiedDate":"2023-02-27"},{"lineNumber":302,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | find a subordinate by name                  | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-02-27"},{"lineNumber":303,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                        | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":306,"author":{"gitId":"SPWwj"},"content":"## Acceptance Criteria","lastModifiedDate":"2023-02-25"},{"lineNumber":307,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":308,"author":{"gitId":"SPWwj"},"content":"- When I use the \"add\" command followed by a task name, a new task with the given name should be added to my task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":309,"author":{"gitId":"SPWwj"},"content":"- The task name should be displayed in the task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":310,"author":{"gitId":"SPWwj"},"content":"- The task should be saved to persistent storage so that it is not lost when I exit the app.","lastModifiedDate":"2023-02-25"},{"lineNumber":311,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":312,"author":{"gitId":"SPWwj"},"content":"## Example Usage","lastModifiedDate":"2023-02-25"},{"lineNumber":313,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":314,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":315,"author":{"gitId":"Nicklelodeon"},"content":"\u003e addtask s/Draft proposal c/Complete proposal by 1st March st/false","lastModifiedDate":"2023-03-12"},{"lineNumber":316,"author":{"gitId":"Nicklelodeon"},"content":"- New task added: Draft proposal; Status: Undone; Content: Complete proposal by 1st March","lastModifiedDate":"2023-03-12"},{"lineNumber":317,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":318,"author":{"gitId":"SPWwj"},"content":"\u003e listtask","lastModifiedDate":"2023-02-25"},{"lineNumber":319,"author":{"gitId":"Nicklelodeon"},"content":"1. Finish report; Status: Undone; Content: Complete report for Mr Chan by 2nd March","lastModifiedDate":"2023-03-14"},{"lineNumber":320,"author":{"gitId":"Nicklelodeon"},"content":"2. Send email to team; Status: Done; Content: Send an email regarding office hours","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":322,"author":{"gitId":"SPWwj"},"content":"\u003e findtask report","lastModifiedDate":"2023-02-25"},{"lineNumber":323,"author":{"gitId":"SPWwj"},"content":"1. Finish report","lastModifiedDate":"2023-02-25"},{"lineNumber":324,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":325,"author":{"gitId":"SPWwj"},"content":"\u003e deletetask 1","lastModifiedDate":"2023-02-25"},{"lineNumber":326,"author":{"gitId":"Nicklelodeon"},"content":"- Deleted task: Draft proposal; Status: Undone; Content: Complete proposal by 1st March","lastModifiedDate":"2023-03-16"},{"lineNumber":327,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":328,"author":{"gitId":"SPWwj"},"content":"\u003e bye","lastModifiedDate":"2023-02-28"},{"lineNumber":329,"author":{"gitId":"SPWwj"},"content":"- Goodbye!","lastModifiedDate":"2023-02-28"},{"lineNumber":330,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":331,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":332,"author":{"gitId":"SPWwj"},"content":"In the example above, the user story is clearly defined at the top, followed by the acceptance criteria for the feature. Below that, we have a series of example usages, shown in a code editor block to provide clarity and context for how the feature would work in practice.","lastModifiedDate":"2023-02-25"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":334,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"Guo-KeCheng"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"Guo-KeCheng"},"content":":information_source: **Note:** For all use cases below, the **System** is the `OfficeConnect` and the ","lastModifiedDate":"2023-03-04"},{"lineNumber":341,"author":{"gitId":"Guo-KeCheng"},"content":"**Actor** is the `user`, unless specified otherwise.","lastModifiedDate":"2023-03-04"},{"lineNumber":342,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":343,"author":{"gitId":"Guo-KeCheng"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":344,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":345,"author":{"gitId":"cyiting"},"content":"---","lastModifiedDate":"2023-03-16"},{"lineNumber":346,"author":{"gitId":"Guo-KeCheng"},"content":"**Use case 1: Add a person**","lastModifiedDate":"2023-03-04"},{"lineNumber":347,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":348,"author":{"gitId":"Guo-KeCheng"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-04"},{"lineNumber":349,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":350,"author":{"gitId":"Guo-KeCheng"},"content":"1. User requests to add a person.","lastModifiedDate":"2023-03-04"},{"lineNumber":351,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":352,"author":{"gitId":"Guo-KeCheng"},"content":"2. OfficeConnect adds the person to the contact list.","lastModifiedDate":"2023-03-04"},{"lineNumber":353,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":354,"author":{"gitId":"Guo-KeCheng"},"content":"3. OfficeConnect informs user has been successfully added.","lastModifiedDate":"2023-03-04"},{"lineNumber":355,"author":{"gitId":"Guo-KeCheng"},"content":"   ","lastModifiedDate":"2023-03-04"},{"lineNumber":356,"author":{"gitId":"Guo-KeCheng"},"content":"    Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":357,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":358,"author":{"gitId":"Guo-KeCheng"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":359,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":360,"author":{"gitId":"Guo-KeCheng"},"content":"* 1a. User enters incomplete or invalid data. ","lastModifiedDate":"2023-03-04"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":362,"author":{"gitId":"Guo-KeCheng"},"content":"  * 1a1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-04"},{"lineNumber":363,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":364,"author":{"gitId":"Guo-KeCheng"},"content":"    Use case ends. ","lastModifiedDate":"2023-03-04"},{"lineNumber":365,"author":{"gitId":"Guo-KeCheng"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":366,"author":{"gitId":"Guo-KeCheng"},"content":"**Use case 2: Delete a person**","lastModifiedDate":"2023-03-04"},{"lineNumber":367,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":368,"author":{"gitId":"Guo-KeCheng"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-04"},{"lineNumber":369,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":370,"author":{"gitId":"Guo-KeCheng"},"content":"1. User requests to list persons.","lastModifiedDate":"2023-03-04"},{"lineNumber":371,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":372,"author":{"gitId":"Guo-KeCheng"},"content":"2. OfficeConnect shows a list of persons.","lastModifiedDate":"2023-03-04"},{"lineNumber":373,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":374,"author":{"gitId":"Guo-KeCheng"},"content":"3. User requests to delete a specific person in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":375,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":376,"author":{"gitId":"Guo-KeCheng"},"content":"4. OfficeConnect deletes the person.","lastModifiedDate":"2023-03-04"},{"lineNumber":377,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":378,"author":{"gitId":"cyiting"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":380,"author":{"gitId":"cyiting"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":382,"author":{"gitId":"cyiting"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-01"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":386,"author":{"gitId":"cyiting"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":387,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":388,"author":{"gitId":"cyiting"},"content":"  * 3a1. OfficeConnect shows an error message. ","lastModifiedDate":"2023-03-01"},{"lineNumber":389,"author":{"gitId":"cyiting"},"content":"  ","lastModifiedDate":"2023-03-01"},{"lineNumber":390,"author":{"gitId":"cyiting"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":391,"author":{"gitId":"Guo-KeCheng"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":392,"author":{"gitId":"Guo-KeCheng"},"content":"**Use case 3: Delete a task**","lastModifiedDate":"2023-03-04"},{"lineNumber":393,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":394,"author":{"gitId":"Guo-KeCheng"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-04"},{"lineNumber":395,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":396,"author":{"gitId":"Guo-KeCheng"},"content":"1. User requests to list tasks.","lastModifiedDate":"2023-03-04"},{"lineNumber":397,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":398,"author":{"gitId":"Guo-KeCheng"},"content":"2. OfficeConnect shows a list of tasks.","lastModifiedDate":"2023-03-04"},{"lineNumber":399,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":400,"author":{"gitId":"Guo-KeCheng"},"content":"3. User requests to delete a specific task in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":401,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":402,"author":{"gitId":"Guo-KeCheng"},"content":"4. OfficeConnect deletes the task.","lastModifiedDate":"2023-03-04"},{"lineNumber":403,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":404,"author":{"gitId":"cyiting"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":405,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":406,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-01"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-01"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":410,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":414,"author":{"gitId":"cyiting"},"content":"    * 3a1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-01"},{"lineNumber":417,"author":{"gitId":"Guo-KeCheng"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":418,"author":{"gitId":"Guo-KeCheng"},"content":"**Use case 4: Assign a task to a person**","lastModifiedDate":"2023-03-04"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":420,"author":{"gitId":"Guo-KeCheng"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-04"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":422,"author":{"gitId":"Guo-KeCheng"},"content":"1. User requests to list persons.","lastModifiedDate":"2023-03-04"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":424,"author":{"gitId":"Guo-KeCheng"},"content":"2. OfficeConnect shows a list of persons.","lastModifiedDate":"2023-03-04"},{"lineNumber":425,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":426,"author":{"gitId":"Guo-KeCheng"},"content":"3. User requests to list tasks.","lastModifiedDate":"2023-03-04"},{"lineNumber":427,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":428,"author":{"gitId":"Guo-KeCheng"},"content":"4. OfficeConnect shows a list of tasks.","lastModifiedDate":"2023-03-04"},{"lineNumber":429,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":430,"author":{"gitId":"Guo-KeCheng"},"content":"5. User requests to assign a specific task to a specific person.","lastModifiedDate":"2023-03-04"},{"lineNumber":431,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":432,"author":{"gitId":"Guo-KeCheng"},"content":"6. OfficeConnect assigns the task to the person.","lastModifiedDate":"2023-03-04"},{"lineNumber":433,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":434,"author":{"gitId":"cyiting"},"content":"    Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":435,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":436,"author":{"gitId":"cyiting"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":437,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":438,"author":{"gitId":"cyiting"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":439,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":440,"author":{"gitId":"cyiting"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":441,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":442,"author":{"gitId":"cyiting"},"content":"* 4a. The list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":443,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":444,"author":{"gitId":"cyiting"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":445,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":446,"author":{"gitId":"cyiting"},"content":"* 5a. The given index is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":447,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":448,"author":{"gitId":"cyiting"},"content":"    * 5a1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":449,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":450,"author":{"gitId":"cyiting"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-16"},{"lineNumber":451,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":452,"author":{"gitId":"kayyenl"},"content":"---","lastModifiedDate":"2023-03-10"},{"lineNumber":453,"author":{"gitId":"kayyenl"},"content":"**Use case 5: Consulting Help Window**","lastModifiedDate":"2023-03-10"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"kayyenl"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-10"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"kayyenl"},"content":"1. User requests for help.","lastModifiedDate":"2023-03-10"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"kayyenl"},"content":"2. OfficeConnect opens help interface with dedicated help instructions.","lastModifiedDate":"2023-03-10"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"kayyenl"},"content":"3. User specifies command he wishes to get help on.","lastModifiedDate":"2023-03-10"},{"lineNumber":462,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"kayyenl"},"content":"4. OfficeConnect displays how command works, along with format of queried command to user.","lastModifiedDate":"2023-03-10"},{"lineNumber":464,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":465,"author":{"gitId":"kayyenl"},"content":"5. User reads closes window after getting required info.","lastModifiedDate":"2023-03-10"},{"lineNumber":466,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":467,"author":{"gitId":"kayyenl"},"content":"   Use case ends.","lastModifiedDate":"2023-03-10"},{"lineNumber":468,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":469,"author":{"gitId":"kayyenl"},"content":"**Extensions**","lastModifiedDate":"2023-03-10"},{"lineNumber":470,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":471,"author":{"gitId":"kayyenl"},"content":"* 2a. User requests for more info on command.","lastModifiedDate":"2023-03-10"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"kayyenl"},"content":"    * 2a1. Help interface provides link to user guide.","lastModifiedDate":"2023-03-10"},{"lineNumber":474,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"kayyenl"},"content":"    * 2a2. User retrieves user guide providing more detail on command.","lastModifiedDate":"2023-03-10"},{"lineNumber":476,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"kayyenl"},"content":"      Use case resumes at step 5.","lastModifiedDate":"2023-03-10"},{"lineNumber":478,"author":{"gitId":"Nicklelodeon"},"content":"---","lastModifiedDate":"2023-03-11"},{"lineNumber":479,"author":{"gitId":"Nicklelodeon"},"content":"**Use case 6: Add a task**","lastModifiedDate":"2023-03-11"},{"lineNumber":480,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":481,"author":{"gitId":"Nicklelodeon"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-11"},{"lineNumber":482,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":483,"author":{"gitId":"Nicklelodeon"},"content":"1. User requests to add a task.","lastModifiedDate":"2023-03-11"},{"lineNumber":484,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":485,"author":{"gitId":"Nicklelodeon"},"content":"2. OfficeConnect adds the task to the task list.","lastModifiedDate":"2023-03-11"},{"lineNumber":486,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":487,"author":{"gitId":"Nicklelodeon"},"content":"3. OfficeConnect informs user has been successfully added.","lastModifiedDate":"2023-03-11"},{"lineNumber":488,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":489,"author":{"gitId":"Nicklelodeon"},"content":"   Use case ends.","lastModifiedDate":"2023-03-11"},{"lineNumber":490,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":491,"author":{"gitId":"Nicklelodeon"},"content":"**Extensions**","lastModifiedDate":"2023-03-11"},{"lineNumber":492,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":493,"author":{"gitId":"Nicklelodeon"},"content":"* 1a. User enters incomplete or invalid data.","lastModifiedDate":"2023-03-11"},{"lineNumber":494,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":495,"author":{"gitId":"Nicklelodeon"},"content":"    * 1a1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-11"},{"lineNumber":496,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":497,"author":{"gitId":"Nicklelodeon"},"content":"      Use case ends.","lastModifiedDate":"2023-03-11"},{"lineNumber":498,"author":{"gitId":"Nicklelodeon"},"content":"---","lastModifiedDate":"2023-03-11"},{"lineNumber":499,"author":{"gitId":"Nicklelodeon"},"content":"**Use case 7: List all tasks**","lastModifiedDate":"2023-03-14"},{"lineNumber":500,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":501,"author":{"gitId":"Nicklelodeon"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-14"},{"lineNumber":502,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":503,"author":{"gitId":"Nicklelodeon"},"content":"1. User requests for a list of all tasks.","lastModifiedDate":"2023-03-14"},{"lineNumber":504,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":505,"author":{"gitId":"Nicklelodeon"},"content":"2. OfficeConnect displays all tasks stored.","lastModifiedDate":"2023-03-14"},{"lineNumber":506,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":507,"author":{"gitId":"Nicklelodeon"},"content":"   Use case ends.","lastModifiedDate":"2023-03-14"},{"lineNumber":508,"author":{"gitId":"Nicklelodeon"},"content":"---","lastModifiedDate":"2023-03-14"},{"lineNumber":509,"author":{"gitId":"cyiting"},"content":"**Use case 8: Mark a tasks**","lastModifiedDate":"2023-03-16"},{"lineNumber":510,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":511,"author":{"gitId":"cyiting"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-16"},{"lineNumber":512,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":513,"author":{"gitId":"cyiting"},"content":"1. User requests for a list of all tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":514,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":515,"author":{"gitId":"cyiting"},"content":"2. OfficeConnect displays all tasks stored.","lastModifiedDate":"2023-03-16"},{"lineNumber":516,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":517,"author":{"gitId":"cyiting"},"content":"3. User requests to mark a specific task.","lastModifiedDate":"2023-03-16"},{"lineNumber":518,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":519,"author":{"gitId":"cyiting"},"content":"4. OfficeConnect marks the task as completed.","lastModifiedDate":"2023-03-16"},{"lineNumber":520,"author":{"gitId":"cyiting"},"content":"   ","lastModifiedDate":"2023-03-16"},{"lineNumber":521,"author":{"gitId":"cyiting"},"content":"    Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":522,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":523,"author":{"gitId":"cyiting"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":524,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":525,"author":{"gitId":"cyiting"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":526,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":527,"author":{"gitId":"cyiting"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":528,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":529,"author":{"gitId":"cyiting"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":530,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":531,"author":{"gitId":"cyiting"},"content":"    * 3a1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":532,"author":{"gitId":"cyiting"},"content":"    ","lastModifiedDate":"2023-03-16"},{"lineNumber":533,"author":{"gitId":"cyiting"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-16"},{"lineNumber":534,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":535,"author":{"gitId":"cyiting"},"content":"* 3b. The task at the given index is already marked as completed.","lastModifiedDate":"2023-03-16"},{"lineNumber":536,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":537,"author":{"gitId":"cyiting"},"content":"    * 3b1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":538,"author":{"gitId":"cyiting"},"content":"        ","lastModifiedDate":"2023-03-16"},{"lineNumber":539,"author":{"gitId":"cyiting"},"content":"      Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":540,"author":{"gitId":"cyiting"},"content":"---","lastModifiedDate":"2023-03-16"},{"lineNumber":541,"author":{"gitId":"cyiting"},"content":"**Use case 9: Unmark a tasks**","lastModifiedDate":"2023-03-16"},{"lineNumber":542,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":543,"author":{"gitId":"cyiting"},"content":"**Main Success Scenario (MSS):**","lastModifiedDate":"2023-03-16"},{"lineNumber":544,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":545,"author":{"gitId":"cyiting"},"content":"1. User requests for a list of all tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":546,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":547,"author":{"gitId":"cyiting"},"content":"2. OfficeConnect displays all tasks stored.","lastModifiedDate":"2023-03-16"},{"lineNumber":548,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":549,"author":{"gitId":"cyiting"},"content":"3. User requests to unmark a specific task.","lastModifiedDate":"2023-03-16"},{"lineNumber":550,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":551,"author":{"gitId":"cyiting"},"content":"4. OfficeConnect unmarks the task as uncompleted.","lastModifiedDate":"2023-03-16"},{"lineNumber":552,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":553,"author":{"gitId":"cyiting"},"content":"   Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":554,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":555,"author":{"gitId":"cyiting"},"content":"**Extensions**","lastModifiedDate":"2023-03-16"},{"lineNumber":556,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":557,"author":{"gitId":"cyiting"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-16"},{"lineNumber":558,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":559,"author":{"gitId":"cyiting"},"content":"  Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":560,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":561,"author":{"gitId":"cyiting"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":562,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":563,"author":{"gitId":"cyiting"},"content":"    * 3a1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":564,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":565,"author":{"gitId":"cyiting"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-16"},{"lineNumber":566,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":567,"author":{"gitId":"cyiting"},"content":"* 3b. The task at the given index is already marked as uncompleted.","lastModifiedDate":"2023-03-16"},{"lineNumber":568,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":569,"author":{"gitId":"cyiting"},"content":"    * 3b1. OfficeConnect shows an error message.","lastModifiedDate":"2023-03-16"},{"lineNumber":570,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":571,"author":{"gitId":"cyiting"},"content":"      Use case ends.","lastModifiedDate":"2023-03-16"},{"lineNumber":572,"author":{"gitId":"cyiting"},"content":"---","lastModifiedDate":"2023-03-16"},{"lineNumber":573,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"SPWwj"},"content":"1. Performance: The system shall respond to user input within 2 seconds, even under peak load conditions.","lastModifiedDate":"2023-02-28"},{"lineNumber":577,"author":{"gitId":"SPWwj"},"content":"2. Maintainability: The system shall be designed to allow for easy maintenance and updates, with clear documentation and modular architecture.","lastModifiedDate":"2023-02-28"},{"lineNumber":578,"author":{"gitId":"SPWwj"},"content":"3. Compatibility: The system shall be compatible to operating systems with java 11 runtime (e.g. Windows, MacOS, Linux).","lastModifiedDate":"2023-02-28"},{"lineNumber":579,"author":{"gitId":"SPWwj"},"content":"4. Interoperability: The system shall be able to exchange data with other systems using standard formats and protocols.","lastModifiedDate":"2023-02-28"},{"lineNumber":580,"author":{"gitId":"SPWwj"},"content":"5. Usability: The system shall have a user interface that is intuitive and easy to use, with a learning curve of no more than 2 hours for a new user.","lastModifiedDate":"2023-02-28"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"Guo-KeCheng"},"content":"#### *M*","lastModifiedDate":"2023-03-04"},{"lineNumber":586,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":588,"author":{"gitId":"Guo-KeCheng"},"content":"#### *P*","lastModifiedDate":"2023-03-04"},{"lineNumber":589,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cyiting":114,"Nicklelodeon":50,"SPWwj":28,"-":367,"Guo-KeCheng":67,"kayyenl":16}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies.","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates’ workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"1. Download the latest `officeconnect.jar` from [OfficeConnect Release Page](https://github.com/AY2223S2-CS2103T-W10-1/tp/releases).","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar officeconnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to OfficeConnect.","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"   ","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"   * `add s/Complete slides c/Finish up slides for meeting st/false` : Adds a task with title `Complete slides` to OfficeConnect.","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"\u003cdiv class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"  e.g. `[t/TAG]…` can be used as (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"Displays a comprehensive window detailing the outline of executable commands by user.","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"A hierarchical view on the left window lists the different available commands, with the description of the command on the right.","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"![image](https://user-images.githubusercontent.com/99934242/225213208-f94de7e4-2085-41e7-9325-9ecef5fe246f.png)","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"Adds a person to OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…`","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"\u003cdiv class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"cyiting"},"content":"Shows a list of all persons in OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"cyiting"},"content":"Edits an existing person in OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"cyiting"},"content":"Deletes the specified person from OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"SPWwj"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"cyiting"},"content":"Clears all entries from OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"SPWwj"},"content":"OfficeConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"SPWwj"},"content":"OfficeConnect data are saved as a JSON file `[JAR file location]/data/officeconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":175,"author":{"gitId":"SPWwj"},"content":"\u003cdiv class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-02-25"},{"lineNumber":176,"author":{"gitId":"SPWwj"},"content":"If your changes to the data file makes its format invalid, OfficeConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":179,"author":{"gitId":"SPWwj"},"content":"# Command Summary For OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":181,"author":{"gitId":"SPWwj"},"content":"## Adding a Task: `addtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"SPWwj"},"content":"Adds a task to OfficeConnect.","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"Nicklelodeon"},"content":"Format: `addtask title/TITLE c/CONTENT st/STATUS`","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":188,"author":{"gitId":"Nicklelodeon"},"content":"- `addtask title/Complete slides c/Finish slides for meeting st/false`","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"SPWwj"},"content":"## Deleting a Task: `deletetask`","lastModifiedDate":"2023-02-25"},{"lineNumber":191,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":192,"author":{"gitId":"cyiting"},"content":"Deletes the specified task from OfficeConnect","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"cyiting"},"content":"Format: `deletetask INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"cyiting"},"content":"* Deletes the task at the specified INDEX.","lastModifiedDate":"2023-03-16"},{"lineNumber":197,"author":{"gitId":"cyiting"},"content":"* The INDEX refers to the INDEX shown in the displayed task list.","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"cyiting"},"content":"* The INDEX must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":200,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"SPWwj"},"content":"- `listtasks` followed by `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"SPWwj"},"content":"- `findtasks book` followed by `delete 1` deletes the 1st task in the results of the `findtask` command.","lastModifiedDate":"2023-02-25"},{"lineNumber":203,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"cyiting"},"content":"## Locating a Specific Task: `findtask`","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":206,"author":{"gitId":"SPWwj"},"content":"Finds the task based on given keyword.","lastModifiedDate":"2023-02-25"},{"lineNumber":207,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"cyiting"},"content":"Format: `findtask KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":211,"author":{"gitId":"SPWwj"},"content":"- `findtask complete`","lastModifiedDate":"2023-02-25"},{"lineNumber":212,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"SPWwj"},"content":"## Listing the Tasks: `listtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":214,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"cyiting"},"content":"Shows a list of all tasks in OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":217,"author":{"gitId":"cyiting"},"content":"Format: `listtask`","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"SPWwj"},"content":"## Assigning a Task to a Person: `assign`","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"cyiting"},"content":"Assigns an existing task to an existing person in OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":222,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"Guo-KeCheng"},"content":"Format: `assign ti/INDEX pi/INDEX`","lastModifiedDate":"2023-03-12"},{"lineNumber":224,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":225,"author":{"gitId":"cyiting"},"content":"* Assigns the task at specified index to the person at specified index.","lastModifiedDate":"2023-03-16"},{"lineNumber":226,"author":{"gitId":"cyiting"},"content":"* The index refers to the index number shown in the displayed person/task list.","lastModifiedDate":"2023-03-16"},{"lineNumber":227,"author":{"gitId":"cyiting"},"content":"* The index must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":229,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":230,"author":{"gitId":"Guo-KeCheng"},"content":"- `assign ti/ 2 pi/ 3` assigns task 2 to person 3.","lastModifiedDate":"2023-03-12"},{"lineNumber":231,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":232,"author":{"gitId":"cyiting"},"content":"## Marking a Task as completed: `mark`","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":234,"author":{"gitId":"cyiting"},"content":"Marks an existing task in OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":235,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":236,"author":{"gitId":"cyiting"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":237,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":238,"author":{"gitId":"cyiting"},"content":"* Changes the status of the task at the specified index to completed.","lastModifiedDate":"2023-03-16"},{"lineNumber":239,"author":{"gitId":"cyiting"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-03-16"},{"lineNumber":240,"author":{"gitId":"cyiting"},"content":"* The index must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-03-16"},{"lineNumber":241,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":242,"author":{"gitId":"cyiting"},"content":"Examples:","lastModifiedDate":"2023-03-16"},{"lineNumber":243,"author":{"gitId":"cyiting"},"content":"- `mark 2` marks task 2 as completed","lastModifiedDate":"2023-03-16"},{"lineNumber":244,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":245,"author":{"gitId":"cyiting"},"content":"## Unmarking a Task: `unmark`","lastModifiedDate":"2023-03-16"},{"lineNumber":246,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":247,"author":{"gitId":"cyiting"},"content":"Unmarks a task in OfficeConnect","lastModifiedDate":"2023-03-16"},{"lineNumber":248,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":249,"author":{"gitId":"cyiting"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-03-16"},{"lineNumber":250,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":251,"author":{"gitId":"cyiting"},"content":"* Changes the status of the task at the specified index to uncompleted.","lastModifiedDate":"2023-03-16"},{"lineNumber":252,"author":{"gitId":"cyiting"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2023-03-16"},{"lineNumber":253,"author":{"gitId":"cyiting"},"content":"* The index must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-03-16"},{"lineNumber":254,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":255,"author":{"gitId":"Guo-KeCheng"},"content":"## Review tasks assigned to a Person: `review`","lastModifiedDate":"2023-03-12"},{"lineNumber":256,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":257,"author":{"gitId":"cyiting"},"content":"Shows a list of tasks assigned to an existing person in OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":258,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":259,"author":{"gitId":"Guo-KeCheng"},"content":"Format: `review NAME`","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"cyiting"},"content":"* Reviews the list of tasks that are assigned to the person with the specified name.","lastModifiedDate":"2023-03-16"},{"lineNumber":262,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"Guo-KeCheng"},"content":"Examples:","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"Guo-KeCheng"},"content":"- `review John Cena` displays all tasks that are assigned to him.","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"Guo-KeCheng"},"content":"## Review tasks assigned to a Person: `reviewtask`","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":269,"author":{"gitId":"cyiting"},"content":"Shows a list of persons assigned to an existing task in OfficeConnect.","lastModifiedDate":"2023-03-16"},{"lineNumber":270,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":271,"author":{"gitId":"SPWwj"},"content":"Format: `reviewtask TITLE`","lastModifiedDate":"2023-03-16"},{"lineNumber":272,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":273,"author":{"gitId":"SPWwj"},"content":"* Reviews the list of persons who are assigned to the task with the specified title.","lastModifiedDate":"2023-03-16"},{"lineNumber":274,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"Guo-KeCheng"},"content":"Examples:","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"cyiting"},"content":"- `reviewtask CS2103 TP` displays everyone who are assigned to this task.","lastModifiedDate":"2023-03-16"},{"lineNumber":277,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":278,"author":{"gitId":"SPWwj"},"content":"### Archiving data files `[coming in v1.3]`","lastModifiedDate":"2023-02-28"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"SPWwj"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous OfficeConnect home folder.","lastModifiedDate":"2023-02-28"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"Nicklelodeon"},"content":"| Action          | Format, Examples                                                                                                                                                     |","lastModifiedDate":"2023-03-09"},{"lineNumber":294,"author":{"gitId":"Guo-KeCheng"},"content":"|-----------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-14"},{"lineNumber":295,"author":{"gitId":"Nicklelodeon"},"content":"| **Add**         | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-09"},{"lineNumber":296,"author":{"gitId":"Nicklelodeon"},"content":"| **Add Task**    | `addtask title/TITLE c/CONTENT st/STATUS` \u003cbr\u003e e.g., `addtask title/Draft proposal c/Complete proposal by 1st March st/false`                                        |","lastModifiedDate":"2023-03-16"},{"lineNumber":297,"author":{"gitId":"Nicklelodeon"},"content":"| **Clear**       | `clear`                                                                                                                                                              |","lastModifiedDate":"2023-03-09"},{"lineNumber":298,"author":{"gitId":"Nicklelodeon"},"content":"| **Delete**      | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                  |","lastModifiedDate":"2023-03-09"},{"lineNumber":299,"author":{"gitId":"cyiting"},"content":"| **Delete Task** | `deletetask INDEX`\u003cbr/\u003e e.g. `deletetask 2`                                                                                                                          |","lastModifiedDate":"2023-03-16"},{"lineNumber":300,"author":{"gitId":"Nicklelodeon"},"content":"| **Edit**        | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2023-03-09"},{"lineNumber":301,"author":{"gitId":"Nicklelodeon"},"content":"| **Find**        | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                           |","lastModifiedDate":"2023-03-09"},{"lineNumber":302,"author":{"gitId":"cyiting"},"content":"| **Assign**      | `assign ti/INDEX pi/INDEX`\u003cbr/\u003ee.g. `assign ti/1 pi/2`                                                                                                               |","lastModifiedDate":"2023-03-16"},{"lineNumber":303,"author":{"gitId":"cyiting"},"content":"| **Mark Task**   | `mark INDEX`\u003cbr/\u003e e.g. `mark 3`                                                                                                                                      |","lastModifiedDate":"2023-03-16"},{"lineNumber":304,"author":{"gitId":"cyiting"},"content":"| **Unmark Task** | `unmark INDEX` \u003cbr/\u003e e.g. `unmark 2`                                                                                                                                 |","lastModifiedDate":"2023-03-16"},{"lineNumber":305,"author":{"gitId":"Guo-KeCheng"},"content":"| **Help**        | `help`                                                                                                                                                               |","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"Nicklelodeon"},"content":"| **List**        | `list`                                                                                                                                                               |","lastModifiedDate":"2023-03-09"},{"lineNumber":307,"author":{"gitId":"Guo-KeCheng"},"content":"| **List All**    | `listall`                                                                                                                                                            |","lastModifiedDate":"2023-03-14"},{"lineNumber":308,"author":{"gitId":"Nicklelodeon"},"content":"| **List Task**   | `listtask`                                                                                                                                                           |","lastModifiedDate":"2023-03-09"},{"lineNumber":309,"author":{"gitId":"Guo-KeCheng"},"content":"| **Review**      | `review NAME`\u003cbr\u003e e.g., `review James Jake`                                                                                                                          |","lastModifiedDate":"2023-03-14"},{"lineNumber":310,"author":{"gitId":"SPWwj"},"content":"| **Review Task** | `reviewtask TITLE`\u003cbr\u003e e.g., `reviewtask CS2103 TP`                                                                                                                  |","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"cyiting":60,"Nicklelodeon":13,"SPWwj":58,"-":158,"Guo-KeCheng":17,"kayyenl":4}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"title: OfficeConnect","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-F10-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103-F10-1/tp)","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"**OfficeConnect is a task management tool designed specifically for managerial role personnel at companies.**","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"- The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"- The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"- OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"**Try it out!**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"* If you are interested in using OfficeConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"* If you are interested about developing OfficeConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SPWwj":13,"-":13}},{"path":"docs/team/cyiting.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"title: Chu Yi Ting\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"at companies. The target users are managers who are responsible for assigning tasks and","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"overseeing the work of a team.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"OfficeConnect provides managers a convenient way to manage their subordinates as it gives","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"managers an overview of their subordinates contacts and their teams  as well as track tasks","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"that the subordinates are responsible for completing.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"Through OfficeConnect, managers can also plan deadlines, delegate tasks and automate sending","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"mass emails.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dcyiting\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"cyiting":26,"Nicklelodeon":1}},{"path":"docs/team/guo-kecheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"title: Guo Kecheng\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"tasks like typing and sending emails.","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads,","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"- **New Feature**:","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dguo-kecheng\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"- **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"- **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"- **Tools**:","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"Nicklelodeon":1,"Guo-KeCheng":27}},{"path":"docs/team/kayyenl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"title: Lee Kay Yen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"* **New Feature**: Modified help window, more extensive","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"![image](https://user-images.githubusercontent.com/99934242/221522239-2a64f9dd-ce8d-4fd5-834d-1a2fb513cf32.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"  * What it does: allows the user view help for each individual command that can be entered into OfficeConnect.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"  * Justification: This feature improves the user experience as he/she uses the app, as this extensive help window removes the need to go online and scour through all the documentation pages (which are not written for the user\u0027s use, anyway.)","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"  * Highlights: This enhancement gives the user a bird\u0027s eye view of the ways a command can be used in a digestable (TreeView, hierarchical like manner) that is intuitive and not stressful on the fingers of a slow typer.","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"* **New Feature**: To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dkayyenl\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"Nicklelodeon":1,"kayyenl":38}},{"path":"docs/team/nicklelodeon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"title: Nicholas Cheongs\u0027 Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"users are managers who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"The product addresses several challenges faced by managers in the current office environment, including but not limited","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"to difficulty in coordinating tasks among a large number of subordinates, possible work overload of any single","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"subordinate within a huge team and hassle of manually typing and sending out emails.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads and","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"allowing managers to efficiently delegate tasks in an organised and centralised manner. It also removes the manual","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"aspect of sending emails, as mass emails can be automated and sent with just a simple command!","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"- **New Feature**: Add task for OfficeConnect","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    * What it does: With this new feature, users can add tasks to OfficeConnect","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"    * Justification: This feature is instrumental, as it allows users to create tasks that are stored into the storage of OfficeConnect. This creates the foundation for subsequent task commands, such as delete task or assign task","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    * Highlights: Users who are quick at typing will be able to add tasks quickly following the syntax specified in the UserGuide","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"- **New Feature**: List tasks for OfficeConnect","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"  * What it does: With this new feature, users can see all tasks stored in OfficeConnect","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"  * Justification: This feature is vital, as it allows users to keep track of current tasks stored in OfficeConnect. This helps users better visualise their workload and efficiently delegate the tasks.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"  * Highlights: This feature is necessary as it needs to be called to retrieve the index of the task, before deletetask can be called","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"- **New Feature**: Delete tasks for OfficeConnect","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"  * What it does: With this new feature, users can remove tasks stored in OfficeConnect","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"  * Justification: This feature is vital, as it allows users to remove unnecessary tasks, such as tasks that are completed or cancelled.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"  * Highlights: This feature also ensures that storage is kept to a minimum, as unnecessary tasks can be removed","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnicklelodeon\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"- **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"- **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"- **Tools**:","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Nicklelodeon":38}},{"path":"docs/team/spwwj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"title: Wei Wenjie\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"* **New Feature**: Local Storage for OfficeConnect.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"  * What it does: With this new feature, users can now save OfficeConnect data to a local file, enabling them to easily restore their data from local storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"  * Justification: The addition of Local Storage is a crucial enhancement for OfficeConnect. It provides users with a convenient and reliable way to store their data, which can be easily accessed and restored as needed. This feature ensures that users have complete control over their data, helping to improve productivity and streamline workflows.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"  * Highlights: The addition of Local Storage is a significant update that impacts the existing data structure of OfficeConnect. This feature is a fundamental building block for all other OfficeConnect features, making it a key component of the software\u0027s architecture. With Local Storage, OfficeConnect provides a more comprehensive and user-friendly solution for managing data, enabling users to work more efficiently and effectively.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dspwwj\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"* **Project management**:","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"  * User Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"* **Community**:","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"* **Tools**:","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Nicklelodeon":1,"SPWwj":39}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"SPWwj"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/officeconnect.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-02-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"SPWwj":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"import seedu.address.storage.JsonAssignTaskStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"import seedu.address.storage.JsonTaskStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"import seedu.address.storage.RepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    protected OfficeConnectModel officeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        RepositoryStorage\u003cTask\u003e taskRepositoryStorage \u003d new JsonTaskStorage(userPrefs.getTaskFilePath());","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        RepositoryStorage\u003cAssignTask\u003e personTaskStorage \u003d new JsonAssignTaskStorage(userPrefs","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            .getPersonTaskPath());","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskRepositoryStorage, personTaskStorage);","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        officeConnectModel \u003d initOfficeConnectModel(storage);","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        logic \u003d new LogicManager(model, storage, officeConnectModel);","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"     * Returns a {@code OfficeConnectModel} with the data from {@code storage}\u0027s repository and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"     * The data from the sample repository will be used instead if {@code storage}\u0027s repository is not found,","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"     * or an empty repository will be used instead if errors occur when reading {@code storage}\u0027s repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"    private OfficeConnectModel initOfficeConnectModel(Storage storage) {","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e taskReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cReadOnlyRepository\u003cAssignTask\u003e\u003e personTaskReadOnlyRepository;","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        ReadOnlyRepository\u003cTask\u003e initialTaskData;","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        ReadOnlyRepository\u003cAssignTask\u003e initialPersonTaskData;","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"            taskReadOnlyRepository \u003d storage.readTaskBook();","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"            personTaskReadOnlyRepository \u003d storage.readPersonTaskBook();","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"            if (taskReadOnlyRepository.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"                logger.info(\"Data file not found. Will be starting with a sample \"","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"                    + \"task.json and person_task_mapping.json\");","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"            initialTaskData \u003d taskReadOnlyRepository.orElseGet(SampleDataUtil::getSampleTasksRepo);","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"            initialPersonTaskData \u003d personTaskReadOnlyRepository.orElseGet(SampleDataUtil::getSampleAssignTaskRepo);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty \"","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"                + \"task.json and person_task_mapping.json\");","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"            initialTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"            initialPersonTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with \"","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"                + \"an empty task.json and person_task_mapping.json\");","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"            initialTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"            initialPersonTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cTask\u003e taskRepositoryModelManager \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(initialTaskData);","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cAssignTask\u003e personTaskRepositoryModelManager \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(initialPersonTaskData);","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"        return new OfficeConnectModel(taskRepositoryModelManager, personTaskRepositoryModelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":138,"author":{"gitId":"SPWwj"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":60,"-":180}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private static final String LOG_FILE \u003d \"officeconnect.log\";","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_INVALID_TASK \u003d \"No such task found\";","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_INVALID_PERSON \u003d \"No such person found\";","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_TASK_ALREADY_DONE \u003d \"The task is already marked as done\";","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_TASK_ALREADY_NOT_DONE \u003d \"This task is already marked as not done\";","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cyiting":3,"-":12,"Guo-KeCheng":4}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    OfficeConnectModel getOfficeConnectModel();","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SPWwj":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private final OfficeConnectModel officeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        this.officeConnectModel \u003d new OfficeConnectModel();","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public LogicManager(Model model, Storage storage, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        this.officeConnectModel \u003d officeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"        commandResult \u003d command.execute(model, officeConnectModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"            storage.saveTaskBook(officeConnectModel.getTaskModelManager().getReadOnlyRepository());","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"            storage.savePersonTaskBook(officeConnectModel.getAssignTaskModelManager().getReadOnlyRepository());","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    public OfficeConnectModel getOfficeConnectModel() {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        return officeConnectModel;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Nicklelodeon":1,"SPWwj":21,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nicklelodeon":2,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":" * Adds a task to OfficeConnect","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String COMMAND_WORD \u003d \"addtask\";","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to OfficeConnect. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"            + PREFIX_TITLE + \"TITLE \"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"            + PREFIX_CONTENT + \"CONTENT \"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"            + PREFIX_STATUS + \"STATUS \\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"            + PREFIX_TITLE + \"Complete Project X \"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"            + PREFIX_CONTENT + \"Do the UML diagram \"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"            + PREFIX_STATUS + \"false \";","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    private final Task toAdd;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"        requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"        toAdd \u003d task;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"        RepositoryModelManager\u003cTask\u003e taskModelManager \u003d officeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"        if (taskModelManager.hasItem(toAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"        taskModelManager.addItem(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Nicklelodeon":60}},{"path":"src/main/java/seedu/address/logic/commands/AssignCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":" * Assigns a person identified to a task identified using their displayed index from the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"public class AssignCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"    public static final String COMMAND_WORD \u003d \"assign\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Assigns a person to a task.\"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"            + \"Parameters \"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"            + PREFIX_PERSON_INDEX + \"PERSON INDEX \"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"            + PREFIX_TASK_INDEX + \"TASK INDEX\";","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Assigned: %1$s to %2$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_DUPLICATE_ASSIGNMENT \u003d \"This person is already assigned to this task.\";","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"    private final Index personIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"    private final Index taskIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"     * Creates AssignCommand object with given personIndex and taskIndex","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"    public AssignCommand(Index personIndex, Index taskIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"        requireAllNonNull(personIndex, taskIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"     * Executes AssignCommand with given personIndex and taskIndex","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"cyiting"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"cyiting"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"cyiting"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"cyiting"},"content":"        if (personIndex.getZeroBased() \u003e\u003d personList.size()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"cyiting"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"cyiting"},"content":"        List\u003cTask\u003e taskList \u003d officeConnectModel.getTaskModelManager().getFilteredItemList();","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"cyiting"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"cyiting"},"content":"        Person person \u003d personList.get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"cyiting"},"content":"        Task task \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"cyiting"},"content":"        Id pId \u003d person.getId();","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"cyiting"},"content":"        Id tId \u003d task.getId();","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        AssignTask toAdd \u003d new AssignTask(pId, tId);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cAssignTask\u003e personTaskModelManager \u003d officeConnectModel.getAssignTaskModelManager();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"        if (personTaskModelManager.hasItem(toAdd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_ASSIGNMENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"cyiting"},"content":"        personTaskModelManager.addItem(toAdd);","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, person, task));","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"cyiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"cyiting"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"cyiting"},"content":"                || (other instanceof AssignCommand // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"                \u0026\u0026 personIndex.equals(((AssignCommand) other).personIndex)","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"                \u0026\u0026 taskIndex.equals(((AssignCommand) other).taskIndex));","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"cyiting":81,"SPWwj":3}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Nicklelodeon":2,"SPWwj":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model              {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"     * @param officeConnectModel","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    public abstract CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nicklelodeon":3,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"    public String toString() {","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"        return String.format(\"Command Result: %s, %b, %b\", feedbackToUser, showHelp, exit);","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nicklelodeon":4,"-":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nicklelodeon":2,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":" * Deletes a task identified using it\u0027s displayed index from the repository.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String COMMAND_WORD \u003d \"deletetask\";","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"        List\u003cTask\u003e lastShownList \u003d officeConnectModel.getTaskModelManager().getFilteredItemList();","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"        Task taskToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"        officeConnectModel.getTaskModelManager().deleteItem(taskToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Nicklelodeon":52}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.model.ModelManager.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        Id updateId \u003d editPersonDescriptor.getId().orElse(personToEdit.getId());","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updateId);","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"SPWwj"},"content":"        private Id id;","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"SPWwj"},"content":"            setId(toCopy.id);","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"SPWwj"},"content":"        public Optional\u003cId\u003e getId() {","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"SPWwj"},"content":"            return Optional.ofNullable(id);","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"SPWwj"},"content":"        public void setId(Id id) {","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"SPWwj"},"content":"            this.id \u003d id;","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"SPWwj"},"content":"                \u0026\u0026 getId().equals(e.getId())","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Nicklelodeon":2,"SPWwj":15,"-":222}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Nicklelodeon":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Nicklelodeon":2,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nicklelodeon":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":" * Lists all persons and tasks in the address book","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String COMMAND_WORD \u003d \"listall\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons and tasks\";","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"        listAllPersons(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"        listAllTasks(officeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"    private static void listAllTasks(OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"        RepositoryModelManager\u003cTask\u003e taskModelManager \u003d officeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"        taskModelManager.updateFilteredItemList(OfficeConnectModel.PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Guo-KeCheng"},"content":"    private static void listAllPersons(Model model) {","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Guo-KeCheng"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Guo-KeCheng":38}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.model.ModelManager.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Nicklelodeon":2,"SPWwj":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.model.OfficeConnectModel.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" * Lists all tasks in the address book to the user.","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String COMMAND_WORD \u003d \"listtask\";","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"        officeConnectModel.getTaskModelManager().updateFilteredItemList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Nicklelodeon":23}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":" * Marks a task as completed","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"            + \": Mark the task identified by the index number as completed.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"Marked Task: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"    private final Index taskIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"    public MarkCommand(Index taskIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"        RepositoryModelManager\u003cTask\u003e taskManager \u003d officeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"        List\u003cTask\u003e taskList \u003d taskManager.getFilteredItemList();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"cyiting"},"content":"        Task taskToMark \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"cyiting"},"content":"        if (taskToMark.getStatus().equals(new Status(true))) {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"cyiting"},"content":"            throw new CommandException(Messages.MESSAGE_TASK_ALREADY_DONE);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"cyiting"},"content":"        Task markedTask \u003d createMarkedTask(taskToMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"cyiting"},"content":"        taskManager.setItem(taskToMark, markedTask);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"cyiting"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_TASK_SUCCESS, markedTask));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"cyiting"},"content":"    private static Task createMarkedTask(Task taskToMark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"cyiting"},"content":"        assert taskToMark !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        Title title \u003d taskToMark.getTitle();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"cyiting"},"content":"        Content content \u003d taskToMark.getContent();","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"cyiting"},"content":"        Status doneStatus \u003d new Status(true);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"cyiting"},"content":"        Id id \u003d taskToMark.getId();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        return new Task(title, content, doneStatus, id);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"cyiting"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"                || (other instanceof MarkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"cyiting"},"content":"                \u0026\u0026 taskIndex.equals(((MarkCommand) other).taskIndex)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cyiting":72,"SPWwj":3}},{"path":"src/main/java/seedu/address/logic/commands/ReviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.person.NameContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":" * Reviews the list of tasks assigned to a specific person","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String COMMAND_WORD \u003d \"review\";","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Review task/s assigned to a person.\"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"            + \"Parameters: PERSON_NAME \\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"            + \"Example: \" + COMMAND_WORD + \" John Cena\";","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_TASK_ASSIGNED \u003d \"%1$s has been assigned to the following tasks:\";","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_NO_TASK_ASSIGNED \u003d \"%1$s does not have any assigned tasks.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Guo-KeCheng"},"content":"    private final NameContainsExactKeywordsPredicate predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Guo-KeCheng"},"content":"     * Creates Review object with given personIndex","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Guo-KeCheng"},"content":"    public ReviewCommand(NameContainsExactKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Guo-KeCheng"},"content":"        requireAllNonNull(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Guo-KeCheng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Guo-KeCheng"},"content":"     * Executes ReviewCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Guo-KeCheng"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Guo-KeCheng"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Guo-KeCheng"},"content":"        List\u003cPerson\u003e personList \u003d model.getAddressBook()","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Guo-KeCheng"},"content":"                .getPersonList()","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Guo-KeCheng"},"content":"        if (personList.size() !\u003d 1) {","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Guo-KeCheng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Guo-KeCheng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Guo-KeCheng"},"content":"        Person person \u003d personList.get(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Guo-KeCheng"},"content":"        Id pId \u003d person.getId();","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Guo-KeCheng"},"content":"        Name name \u003d person.getName();","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        ObservableList\u003cAssignTask\u003e assignedTaskList \u003d getAssignedTaskList(officeConnectModel, pId);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"Guo-KeCheng"},"content":"        displayAssignedTaskAndPerson(model, officeConnectModel, assignedTaskList, pId);","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"Guo-KeCheng"},"content":"        if (assignedTaskList.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"Guo-KeCheng"},"content":"            return new CommandResult(String.format(MESSAGE_NO_TASK_ASSIGNED, name));","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"Guo-KeCheng"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"Guo-KeCheng"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_ASSIGNED, name));","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"Guo-KeCheng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Guo-KeCheng"},"content":"    private static void displayAssignedTaskAndPerson(Model model, OfficeConnectModel officeConnectModel,","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"                                                     ObservableList\u003cAssignTask\u003e assignedTaskList, Id pId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Guo-KeCheng"},"content":"        RepositoryModelManager\u003cTask\u003e taskModelManager \u003d officeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Guo-KeCheng"},"content":"        model.updateFilteredPersonList(person -\u003e person.getId().equals(pId));","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Guo-KeCheng"},"content":"        taskModelManager.updateFilteredItemList(task -\u003e assignedTaskList.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Guo-KeCheng"},"content":"                .anyMatch(personTask -\u003e personTask.getTaskId().equals(task.getId())));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    private static ObservableList\u003cAssignTask\u003e getAssignedTaskList(OfficeConnectModel officeConnectModel, Id pId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cAssignTask\u003e personTaskModelManager \u003d officeConnectModel.getAssignTaskModelManager();","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"        return personTaskModelManager","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Guo-KeCheng"},"content":"                .getFilteredItemList()","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(persontask -\u003e persontask.getPersonId().equals(pId));","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"Guo-KeCheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Guo-KeCheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Guo-KeCheng"},"content":"                || (other instanceof ReviewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Guo-KeCheng"},"content":"                \u0026\u0026 this.predicate.equals(((ReviewCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"SPWwj":6,"Guo-KeCheng":91}},{"path":"src/main/java/seedu/address/logic/commands/ReviewTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.TitleContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":" * Review the list of persons assigned to a specified task.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewTaskCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String COMMAND_WORD \u003d \"reviewtask\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Review person/s assigned to a task.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"            + \"Parameters: TASK_NAME \\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"            + \"Example: \" + COMMAND_WORD + \" CS2103 TP\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_PERSON_ASSIGNED \u003d \"%1$s has been assigned to the following person/s:\";","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"    public static final String MESSAGE_NO_PERSON_ASSIGNED \u003d \"%1$s has not been assigned to anyone.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    private final TitleContainsExactKeywordsPredicate predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"     * Creates ReviewTask object with given taskIndex","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    public ReviewTaskCommand(TitleContainsExactKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Guo-KeCheng"},"content":"        requireAllNonNull(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Guo-KeCheng"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Guo-KeCheng"},"content":"     * Executes ReviewTaskCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Guo-KeCheng"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Guo-KeCheng"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Guo-KeCheng"},"content":"        ObservableList\u003cTask\u003e taskList \u003d officeConnectModel.getTaskModelManager()","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"                .getReadOnlyRepository().getData()","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Guo-KeCheng"},"content":"        if (taskList.size() !\u003d 1) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Guo-KeCheng"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Guo-KeCheng"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Guo-KeCheng"},"content":"        Task task \u003d taskList.get(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Guo-KeCheng"},"content":"        Id tId \u003d task.getId();","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        Title title \u003d task.getTitle();","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        ObservableList\u003cAssignTask\u003e assignedPersonList \u003d getAssignedPersonList(officeConnectModel, tId);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Guo-KeCheng"},"content":"        displayAssignedTasksAndPersons(model, officeConnectModel, assignedPersonList, tId);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Guo-KeCheng"},"content":"        if (assignedPersonList.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"            return new CommandResult(String.format(MESSAGE_NO_PERSON_ASSIGNED, title));","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Guo-KeCheng"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"            return new CommandResult(String.format(MESSAGE_PERSON_ASSIGNED, title));","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Guo-KeCheng"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Guo-KeCheng"},"content":"    private static void displayAssignedTasksAndPersons(Model model, OfficeConnectModel officeConnectModel,","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"                                                       ObservableList\u003cAssignTask\u003e assignedPersonList, Id tId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Guo-KeCheng"},"content":"        RepositoryModelManager\u003cTask\u003e taskModelManager \u003d officeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Guo-KeCheng"},"content":"        model.updateFilteredPersonList(person -\u003e assignedPersonList.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Guo-KeCheng"},"content":"                .anyMatch(personTask -\u003e personTask.getPersonId().equals(person.getId())));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Guo-KeCheng"},"content":"        taskModelManager.updateFilteredItemList(task -\u003e task.getId().equals(tId));","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    private static ObservableList\u003cAssignTask\u003e getAssignedPersonList(OfficeConnectModel officeConnectModel, Id tId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cAssignTask\u003e personTaskModelManager \u003d officeConnectModel.getAssignTaskModelManager();","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        return personTaskModelManager","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Guo-KeCheng"},"content":"                .getFilteredItemList()","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(persontask -\u003e persontask.getTaskId().equals(tId));","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Guo-KeCheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Guo-KeCheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Guo-KeCheng"},"content":"                || (other instanceof ReviewTaskCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Guo-KeCheng"},"content":"                \u0026\u0026 this.predicate.equals(((ReviewTaskCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":15,"Guo-KeCheng":75}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":" * Unmarks a marked task as uncompleted","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"            + \": Unmarks the task identified by the index number as uncompleted.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"    public static final String MESSAGE_UNMARK_TASK_SUCCESS \u003d \"Unmarked Task: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"    private final Index taskIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"    public UnmarkCommand(Index taskIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"    public CommandResult execute(Model model, OfficeConnectModel officeConnectModel) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"        requireAllNonNull(model, officeConnectModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"        RepositoryModelManager\u003cTask\u003e taskManager \u003d officeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"        List\u003cTask\u003e taskList \u003d taskManager.getFilteredItemList();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"cyiting"},"content":"        Task taskToUnmark \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"cyiting"},"content":"        if (taskToUnmark.getStatus().equals(new Status(false))) {","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"cyiting"},"content":"            throw new CommandException(Messages.MESSAGE_TASK_ALREADY_NOT_DONE);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"cyiting"},"content":"        Task unmarkedTask \u003d createUnmarkedTask(taskToUnmark);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"cyiting"},"content":"        taskManager.setItem(taskToUnmark, unmarkedTask);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"cyiting"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"cyiting"},"content":"    private static Task createUnmarkedTask(Task taskToUnmark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"cyiting"},"content":"        assert taskToUnmark !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        Title title \u003d taskToUnmark.getTitle();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"cyiting"},"content":"        Content content \u003d taskToUnmark.getContent();","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"cyiting"},"content":"        Status doneStatus \u003d new Status(false);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"cyiting"},"content":"        Id id \u003d taskToUnmark.getId();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        return new Task(title, content, doneStatus, id);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"cyiting"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"                || (other instanceof UnmarkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"cyiting"},"content":"                \u0026\u0026 taskIndex.equals(((UnmarkCommand) other).taskIndex)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cyiting":72,"SPWwj":3}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_ID,","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"                PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).orElse(UUID.randomUUID().toString()));","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, id);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"SPWwj":7,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_TITLE, PREFIX_CONTENT, PREFIX_STATUS);","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TITLE, PREFIX_CONTENT, PREFIX_STATUS)","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"        Content content \u003d ParserUtil.parseContent(argMultimap.getValue(PREFIX_CONTENT).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"        Title title \u003d ParserUtil.parseSubject(argMultimap.getValue(PREFIX_TITLE).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        Task task \u003d new Task(title, content, status);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Nicklelodeon":40,"SPWwj":3}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ListAllCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ReviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ReviewTaskCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"cyiting"},"content":"        case AssignCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"cyiting"},"content":"            return new AssignCommandParser().parse(arguments);","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"Guo-KeCheng"},"content":"        case ReviewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Guo-KeCheng"},"content":"            return new ReviewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"Guo-KeCheng"},"content":"        case ReviewTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Guo-KeCheng"},"content":"            return new ReviewTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"Guo-KeCheng"},"content":"        case ListAllCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Guo-KeCheng"},"content":"            return new ListAllCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"Nicklelodeon"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"Nicklelodeon"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"cyiting"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"cyiting"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"Guo-KeCheng"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Guo-KeCheng"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cyiting":7,"Nicklelodeon":9,"-":76,"Guo-KeCheng":20}},{"path":"src/main/java/seedu/address/logic/parser/AssignCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":" * Parses input arguments and creates a new AssignCommand object","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"public class AssignCommandParser implements Parser\u003cAssignCommand\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"     * and returns an AssignCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"    public AssignCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PERSON_INDEX, PREFIX_TASK_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_PERSON_INDEX, PREFIX_TASK_INDEX)","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"            Index personIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_PERSON_INDEX).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"            Index taskIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_TASK_INDEX).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"            return new AssignCommand(personIndex, taskIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"cyiting":46}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    public static final Prefix PREFIX_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Prefix PREFIX_TITLE \u003d new Prefix(\"title/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Prefix PREFIX_CONTENT \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"st/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"    public static final Prefix PREFIX_PERSON_INDEX \u003d new Prefix(\"pi/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"    public static final Prefix PREFIX_TASK_INDEX \u003d new Prefix(\"ti/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cyiting":2,"Nicklelodeon":3,"SPWwj":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Nicklelodeon":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"                    PREFIX_ADDRESS, PREFIX_ID, PREFIX_TAG);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        if (argMultimap.getValue(PREFIX_ID).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"            editPersonDescriptor.setId(ParserUtil.parseId(argMultimap.getValue(PREFIX_ID).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"SPWwj":7,"-":81}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cyiting":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"     * Parses a {@code String id} into an {@code Id}.","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"     * @throws ParseException if the given {@code id} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    public static Id parseId(String id) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        if (id.isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"            return new Id();","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"        if (Id.isInValidId(trimmedId)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"            throw new ParseException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        return new Id(trimmedId);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"SPWwj"},"content":"     * Parses a {@code String subject} into an {@code Title}.","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"Nicklelodeon"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"Nicklelodeon"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws ParseException if the given {@code subject} is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"SPWwj"},"content":"    public static Title parseSubject(String subject) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"Nicklelodeon"},"content":"        requireNonNull(subject);","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"Nicklelodeon"},"content":"        String trimmedSubject \u003d subject.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"SPWwj"},"content":"        if (!Title.isValidTitle(trimmedSubject)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"SPWwj"},"content":"            throw new ParseException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"SPWwj"},"content":"        return new Title(trimmedSubject);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"Nicklelodeon"},"content":"     * Parses a {@code String content} into an {@code Content}.","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"Nicklelodeon"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"Nicklelodeon"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws ParseException if the given {@code content} is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"Nicklelodeon"},"content":"    public static Content parseContent(String content) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"Nicklelodeon"},"content":"        requireNonNull(content);","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"Nicklelodeon"},"content":"        String trimmedContent \u003d content.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"Nicklelodeon"},"content":"        if (!Content.isValidContent(trimmedContent)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"Nicklelodeon"},"content":"            throw new ParseException(Content.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"Nicklelodeon"},"content":"        return new Content(trimmedContent);","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"Nicklelodeon"},"content":"     * Parses a {@code String status} into an {@code Status}.","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"Nicklelodeon"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"Nicklelodeon"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"Nicklelodeon"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"Nicklelodeon"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"Nicklelodeon"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"Nicklelodeon"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"Nicklelodeon"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"Nicklelodeon"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"Nicklelodeon"},"content":"        return new Status(Boolean.parseBoolean(trimmedStatus));","lastModifiedDate":"2023-03-01"},{"lineNumber":191,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Nicklelodeon":42,"SPWwj":26,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ReviewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ReviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.person.NameContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":" * Parses input arguments and creates a new ReviewCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewCommandParser implements Parser\u003cReviewCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"     * Parses the given {@code String} of arguments in the context of the ReviewCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"     * and returns an ReviewCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"    public ReviewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"        return new ReviewCommand(new NameContainsExactKeywordsPredicate((Arrays.asList(nameKeywords))));","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Guo-KeCheng":33}},{"path":"src/main/java/seedu/address/logic/parser/ReviewTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ReviewTaskCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.TitleContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":" * Parses input arguments and creates a new ReviewTaskCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewTaskCommandParser implements Parser\u003cReviewTaskCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"     * Parses the given {@code String} of arguments in the context of the ReviewTaskCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"     * and returns an ReviewTaskCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"    public ReviewTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReviewTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"        String[] subjectKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        return new ReviewTaskCommand(new TitleContainsExactKeywordsPredicate(Arrays.asList(subjectKeywords)));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":2,"Guo-KeCheng":33}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":" * Parses input arguments and creates a new UnmarkCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cyiting":28}},{"path":"src/main/java/seedu/address/model/OfficeConnectModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * The API of the OfficeConnectModel component.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class OfficeConnectModel {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryModelManager\u003cTask\u003e taskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryModelManager\u003cAssignTask\u003e assignTaskModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     * Initializes a OfficeConnectModel empty data.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    public OfficeConnectModel() {","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        taskModelManager \u003d new RepositoryModelManager\u003c\u003e(new Repository\u003cTask\u003e());","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        assignTaskModelManager \u003d new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     * Initializes a OfficeConnectModel given data.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public OfficeConnectModel(RepositoryModelManager\u003cTask\u003e taskModelManager,","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"                              RepositoryModelManager\u003cAssignTask\u003e assignTaskModelManager) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        this.taskModelManager \u003d taskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        this.assignTaskModelManager \u003d assignTaskModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    public RepositoryModelManager\u003cTask\u003e getTaskModelManager() {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        return taskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    public RepositoryModelManager\u003cAssignTask\u003e getAssignTaskModelManager() {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        return assignTaskModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Nicklelodeon":5,"SPWwj":36}},{"path":"src/main/java/seedu/address/model/ReadOnlyRepository.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Unmodifiable view of a repository","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"public interface ReadOnlyRepository\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     * Returns an unmodifiable view of the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    ObservableList\u003cT\u003e getData();","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    Path getTaskFilePath();","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    Path getPersonTaskPath();","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"SPWwj":2,"-":16}},{"path":"src/main/java/seedu/address/model/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * The relationship logic for OfficeConnect Model","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public interface Relationship\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    boolean isSame(T obj);","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"    boolean hasSameId(T obj);","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cyiting":1,"SPWwj":8}},{"path":"src/main/java/seedu/address/model/Repository.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * Wraps all data at the repository level","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class Repository\u003cT extends Relationship\u003cT\u003e\u003e implements ReadOnlyRepository\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    private final UniqueItemList\u003cT\u003e items;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     *   among constructors.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        items \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public Repository() {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"     * Creates a Repository using the data in the {@code toBeCopied}","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    private Repository(ReadOnlyRepository\u003cT\u003e toBeCopied) {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        this();","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public static \u003cS extends Relationship\u003cS\u003e\u003e Repository\u003cS\u003e of(ReadOnlyRepository\u003cS\u003e toBeCopied) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        return new Repository\u003c\u003e(toBeCopied);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     * Replaces the contents of the item list with {@code items}.","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.items.setItems(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"     * Resets the existing data of this {@code items} with {@code newData}.","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    public void resetData(ReadOnlyRepository\u003cT\u003e newData) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        setItems(newData.getData());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    //// task-level operations","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a item with the same identity as {@code item} exists in the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    public boolean hasItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        return items.contains(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"     * Adds an item to the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"     * The item must not already exist in the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"    public void addItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        items.add(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"     * Replaces the given item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"     * {@code target} must exist in the repository.","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"     * The item identity of {@code editedItem} must not be the same as another existing task in the repository.","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(editedItem);","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"        items.setItem(target, editedItem);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"     * Removes {@code key} from this {@code Repository}.","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"     * {@code key} must exist in the repository.","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    public void removeItem(T key) {","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        items.remove(key);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"    //// util methods","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"        return items.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        // TODO: refine later","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    public ObservableList\u003cT\u003e getData() {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"        return items.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Repository\u003c?\u003e // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 items.equals(((Repository\u003c?\u003e) other).items));","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"        return items.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cyiting":1,"SPWwj":120,"Guo-KeCheng":1}},{"path":"src/main/java/seedu/address/model/RepositoryModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":" * Represents the in-memory model of the repository data.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"public class RepositoryModelManager\u003cT extends Relationship\u003cT\u003e\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RepositoryModelManager.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private final Repository\u003cT\u003e repo;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private final FilteredList\u003cT\u003e itemFilteredList;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    // private final ObservableList\u003cT\u003e internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     * Initializes an empty RepositoryModelManager","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    public RepositoryModelManager() {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Initializing with repo: \");","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        this.repo \u003d Repository.of(new Repository\u003cT\u003e());","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        this.itemFilteredList \u003d new FilteredList\u003c\u003e(this.repo.getData());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        // this.internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(itemFilteredList);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     * Initializes a RepositoryModelManager with the given repo","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    public RepositoryModelManager(ReadOnlyRepository\u003cT\u003e repo) {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(repo);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Initializing with repo: \" + repo);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        this.repo \u003d Repository.of(repo);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        itemFilteredList \u003d new FilteredList\u003c\u003e(this.repo.getData());","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        // this.internalUnmodifiableList \u003d FXCollections.unmodifiableObservableList(itemFilteredList);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public void setRepository(Repository\u003cT\u003e repo) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.repo.resetData(repo);","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    public ReadOnlyRepository\u003cT\u003e getReadOnlyRepository() {","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        return repo;","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"     * Returns true if an item with the same identity as {@code item} exists in the repo.","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"    public boolean hasItem(T item) {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"        return repo.hasItem(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"     * Deletes the given item.","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * {@code target} must exist in the repo.","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    public void deleteItem(T target) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"        repo.removeItem(target);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"     * Adds the given item.","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"     * {@code item} must not already exist in the repo.","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    public void addItem(T item) {","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        repo.addItem(item);","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        showAllItems();","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"     * Edits the given item.","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"     * {@code target} must exist in the repo.","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Nicklelodeon"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Nicklelodeon"},"content":"        repo.setItem(target, editedItem);","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Guo-KeCheng"},"content":"    public ObservableList\u003cT\u003e getFilteredItemList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Guo-KeCheng"},"content":"        return itemFilteredList;","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"Guo-KeCheng"},"content":"    public FilteredList\u003cT\u003e getFilteredItemList(Predicate\u003cT\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"Guo-KeCheng"},"content":"        updateFilteredItemList(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"Guo-KeCheng"},"content":"        return itemFilteredList;","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"     * Updates the filter of the filtered item list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Nicklelodeon"},"content":"    public void updateFilteredItemList(Predicate\u003cT\u003e predicate) {","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Nicklelodeon"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Nicklelodeon"},"content":"        itemFilteredList.setPredicate(predicate);","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"    public void showAllItems() {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"        updateFilteredItemList(x -\u003e true);","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"        // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"        if (!(obj instanceof RepositoryModelManager\u003c?\u003e)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"SPWwj"},"content":"        // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":130,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003c?\u003e other \u003d (RepositoryModelManager\u003c?\u003e) obj;","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"SPWwj"},"content":"        return repo.equals(other.repo)","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 itemFilteredList.equals(other.itemFilteredList);","lastModifiedDate":"2023-02-23"},{"lineNumber":133,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Nicklelodeon":21,"SPWwj":104,"Guo-KeCheng":10}},{"path":"src/main/java/seedu/address/model/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.exceptions.DuplicateItemException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":" * A list of item that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"public class UniqueItemList\u003cT extends Relationship\u003cT\u003e\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"cyiting"},"content":"        if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"                \u0026\u0026 !target.hasSameId(editedItem)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        internalList.set(index, editedItem);","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            throw new ItemNotFoundException();","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        if (!tasksAreUnique(items)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"            throw new DuplicateItemException();","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"        internalList.setAll(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof UniqueItemList\u003c?\u003e // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 internalList.equals(((UniqueItemList\u003c?\u003e) other).internalList));","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"    private boolean tasksAreUnique(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"                    return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"                }","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"        return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cyiting":2,"SPWwj":124}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"officeconnect.json\");","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private final Path taskFilePath \u003d Paths.get(\"data\", \"tasks.json\");","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private final Path personTaskPath \u003d Paths.get(\"data\", \"assigntask.json\");","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    public Path getTaskFilePath() {","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        return taskFilePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    public Path getPersonTaskPath() {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        return personTaskPath;","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 taskFilePath.equals(o.taskFilePath)","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 personTaskPath.equals(o.personTaskPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(guiSettings, addressBookFilePath,","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"            taskFilePath, personTaskPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        return \"Gui Settings : \" + guiSettings","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"            + \"\\nLocal data file location : \" + addressBookFilePath","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"            + \"\\nLocal data task file location : \" + taskFilePath","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"            + \"\\nLocal data taskPerson mapping file location : \" + personTaskPath;","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":24,"-":79}},{"path":"src/main/java/seedu/address/model/exceptions/DuplicateItemException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * Signals that the operation will result in duplicate PersonTasks (PersonTasks","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" * are considered duplicates if they have the same identity).","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"public class DuplicateItemException extends RuntimeException {","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    public DuplicateItemException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"        super(\"Operation would result in duplicate item\");","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":11}},{"path":"src/main/java/seedu/address/model/exceptions/ItemNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.exceptions;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * Signals that the operation is unable to find the specified personTask.","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"public class ItemNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":5}},{"path":"src/main/java/seedu/address/model/mapping/AssignTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Relationship;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * A many-to-many relationship mapping for task and person","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" * Take note that both personId and taskId must refer to a","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":" * valid Object.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":" * TODO BUT THIS CODE HAS NOT IMPLEMENT THE LOGIC TO VERIFY THE TIGHT BOUND OF VALID RELATIONSHIP","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"public class AssignTask implements Relationship\u003cAssignTask\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final Id personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private final Id taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public AssignTask(Id personId, Id taskId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(personId, taskId);","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    public Id getPersonId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        return personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    public Id getTaskId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        return taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    public boolean hasSameId(AssignTask obj) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Guo-KeCheng"},"content":"        return equals(obj);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        if (!(other instanceof AssignTask)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        AssignTask otherAssignTask \u003d (AssignTask) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        return otherAssignTask.getPersonId().equals(getPersonId())","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherAssignTask.getTaskId().equals(getTaskId());","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(personId, taskId);","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    public boolean isSame(AssignTask obj) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"        return equals(obj);","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"Guo-KeCheng"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Guo-KeCheng"},"content":"        return String.format(\"Person Id: %1$s\\nAssigned Task Id: %2$s\", personId, taskId);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":61,"Guo-KeCheng":8}},{"path":"src/main/java/seedu/address/model/person/NameContainsExactKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Tests that a {@code Task}\u0027s {@code Title} matches exactly the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"public class NameContainsExactKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"    public NameContainsExactKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"                || (other instanceof NameContainsExactKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"                \u0026\u0026 keywords.equals(((NameContainsExactKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":1,"Guo-KeCheng":29}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final Id id;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d new Id();","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     * ID must be specific when loading from local storage","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Id id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    public Id getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"                \u0026\u0026 otherPerson.getId().equals(getId());","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SPWwj":22,"-":122}},{"path":"src/main/java/seedu/address/model/shared/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.shared;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.UUID;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Represents an ID to identify the object","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"public class Id {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     * Must be valid UUID representation","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$\";","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        \"UUIDs format is in 5 groups of hexadecimal digits, \"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"            + \"separated by hyphens. The length of each group is: 8-4-4-4-12\";","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private final UUID value;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     **/","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public Id() {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d UUID.randomUUID();","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public Id(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d UUID.fromString(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    public UUID getValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public static boolean isInValidId(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        return !test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Id) // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value.equals(((Id) other).value); // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        return getValue().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cyiting":2,"SPWwj":55}},{"path":"src/main/java/seedu/address/model/task/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Represents a Task\u0027s content in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidContent(String)}","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"public class Content {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Content can take any values, and it should not be blank\";","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"     * The first character of the content must not be a whitespace,","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final String value;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     * Constructs an {@code Content}.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     * @param value A valid content.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public Content(String value) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        checkArgument(isValidContent(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    public String getValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid content.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public static boolean isValidContent(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Content // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value.equals(((Content) other).value)); // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":60}},{"path":"src/main/java/seedu/address/model/task/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" * Represents a Task\u0027s status in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"public class Status {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     * Must be valid boolean representation","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?i)(true|false)\";","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        \"Status is true or false value\";","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final boolean value;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     * @param value status of a task;","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public Status(boolean value) {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    public boolean isValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        return value ? \"Done\" : \"Undone\";","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value \u003d\u003d ((Status) other).value); // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        return Objects.hashCode(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cyiting":1,"SPWwj":55}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Relationship;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"public class Task implements Relationship\u003cTask\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    // Identity fields","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final Id id;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    // Data fields","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final Title title;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private final Content content;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    private final Status status;","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public Task(Title title, Content content, Status status) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(title, content, status);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d new Id();","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * ID must be specific when loading from local storage","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public Task(Title title, Content content, Status status, Id id) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(title, content, status);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    public Id getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    public Title getTitle() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        return title;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    public Content getContent() {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        return content;","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        return status;","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     * Returns true if both tasks have the same title.","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    public boolean isSame(Task otherTask) {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherTask.getTitle().equals(getTitle());","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"    public boolean hasSameId(Task otherTask) {","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"        return otherTask.getId().equals(getId());","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        return otherTask.getTitle().equals(getTitle())","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherTask.getContent().equals(getContent())","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherTask.getStatus().equals(getStatus());","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(id, title, content, status);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"        return getTitle()","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"            + \"; Status: \"","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"            + getStatus()","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"            + \"; Content: \"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"            + getContent();","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cyiting":6,"SPWwj":110}},{"path":"src/main/java/seedu/address/model/task/Title.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Represents a Task\u0027s title in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTitle(String)}","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"public class Title {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        \"Title should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private final String value;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code Title}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     * @param value A valid title.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    public Title(String value) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        checkArgument(isValidTitle(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    public String getValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid title.","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    public static boolean isValidTitle(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Title // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value.equals(((Title) other).value)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":62}},{"path":"src/main/java/seedu/address/model/task/TitleContainsExactKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" * Tests that a {@code Task}\u0027s {@code Title} matches exactly the keywords given.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class TitleContainsExactKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    public TitleContainsExactKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getTitle().getValue(), keyword));","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"                || (other instanceof TitleContainsExactKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"                \u0026\u0026 keywords.equals(((TitleContainsExactKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":6,"Guo-KeCheng":24}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"                getTagSet(\"friends\"), new Id(\"f26605e3-613d-4d6b-946c-43e496f07f76\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Id(\"c916334d-0b63-4dbd-9372-e553116b3892\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        return new Task[] {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            new Task(new Title(\"Task 1\"), new Content(\"Content 1\"), new Status(true),","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"                new Id(\"c916334d-1111-4dbd-9372-e553116b3892\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            new Task(new Title(\"Task 2\"), new Content(\"Content 2\"), new Status(false),","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"                new Id(\"a716334d-0000-4dbd-9372-e553116b3893\"))","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        };","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    public static AssignTask[] getSampleAssignTasks() {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        return new AssignTask[] {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"            new AssignTask(new Id(\"f26605e3-613d-4d6b-946c-43e496f07f76\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"                new Id(\"c916334d-1111-4dbd-9372-e553116b3892\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"            new AssignTask(new Id(\"c916334d-0b63-4dbd-9372-e553116b3892\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"                new Id(\"a716334d-0000-4dbd-9372-e553116b3893\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        };","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    public static ReadOnlyRepository\u003cTask\u003e getSampleTasksRepo() {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cTask\u003e sampleTasksRepo \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"            sampleTasksRepo.addItem(sampleTask);","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        return sampleTasksRepo;","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    public static ReadOnlyRepository\u003cAssignTask\u003e getSampleAssignTaskRepo() {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cAssignTask\u003e sampleAssignTaskRepo \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        for (AssignTask assignTask : getSampleAssignTasks()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"            sampleAssignTaskRepo.addItem(assignTask);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        return sampleAssignTaskRepo;","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"SPWwj":46,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAssignTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Jackson-friendly version of {@link AssignTask}.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"public class JsonAdaptedAssignTask {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    private final String personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final String taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonAdaptedAssignTask} with the given {@code assignTask}.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedAssignTask(@JsonProperty(\"personId\") String personId, @JsonProperty(\"taskId\") String taskId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code AssignTask} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedAssignTask(AssignTask source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        personId \u003d source.getPersonId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        taskId \u003d source.getTaskId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code AssignTask} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted assignTask.","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    public AssignTask toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        if (Id.isInValidId(personId)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        if (Id.isInValidId(taskId)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        Id modePersonId \u003d new Id(personId);","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        Id modeTaskId \u003d new Id(taskId);","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        return new AssignTask(modePersonId, modeTaskId);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":57}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"                             @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"        id \u003d source.getId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        final Id modelId \u003d new Id(id);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelId);","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SPWwj":13,"-":108}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"id\")","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"title\")","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private final String title;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"content\")","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    private final String content;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"status\")","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    private final String status;","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given person details.","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedTask(@JsonProperty(\"id\") String id, @JsonProperty(\"title\") String title,","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"                           @JsonProperty(\"content\") String content, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        title \u003d source.getTitle().getValue();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        content \u003d source.getContent().getValue();","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        status \u003d String.valueOf(source.getStatus().isValue());","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        id \u003d source.getId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        if (Id.isInValidId(id)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        if (title \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        if (!Title.isValidTitle(title)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Title.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        if (content \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        if (!Content.isValidContent(content)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Content.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"        final Id modeId \u003d new Id(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        final Title modelTitle \u003d new Title(title);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        final Content modelContent \u003d new Content(content);","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        final Status modelStatus \u003d new Status(Boolean.parseBoolean(status));","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        return new Task(modelTitle, modelContent, modelStatus, modeId);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":101}},{"path":"src/main/java/seedu/address/storage/JsonAssignTaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":" * A class to access AssignTask data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"public class JsonAssignTaskStorage implements RepositoryStorage\u003cAssignTask\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAssignTaskStorage.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    public JsonAssignTaskStorage(Path filePath) {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cAssignTask\u003e\u003e readRepository() throws DataConversionException {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        return readRepository(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #readRepository()}.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cAssignTask\u003e\u003e readRepository(Path filePath) throws","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cJsonSerializableAssignTasks\u003e jsonAssignTasks \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"            filePath, JsonSerializableAssignTasks.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        if (jsonAssignTasks.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            return Optional.of(jsonAssignTasks.get().toModelType());","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cAssignTask\u003e repository) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        saveRepository(repository, filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #saveRepository(ReadOnlyRepository)}.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cAssignTask\u003e repository, Path filePath) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(repository);","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAssignTasks(repository), filePath);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAssignTasks.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":" * An Immutable person_task_book that is serializable to JSON format.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"@JsonRootName(value \u003d \"assignTaskMapping\")","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"class JsonSerializableAssignTasks {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"AssignTask list contains duplicate assignTask(s).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private final List\u003cJsonAdaptedAssignTask\u003e assignTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonSerializableAssignTasks} with the given tasks.","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializableAssignTasks(@JsonProperty(\"assignTasks\") List\u003cJsonAdaptedAssignTask\u003e assignTasks) {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        this.assignTasks.addAll(assignTasks);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code ReadOnlyRepository} into this class for Jackson use.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAssignTasks}.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializableAssignTasks(ReadOnlyRepository\u003cAssignTask\u003e source) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        assignTasks.addAll(source.getData().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"            .map(JsonAdaptedAssignTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     * Converts this AssignTask into the model\u0027s {@code AssignTasks} object.","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    public Repository\u003cAssignTask\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cAssignTask\u003e assignTasks \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        for (JsonAdaptedAssignTask jsonAdaptedAssignTask : this.assignTasks) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"            AssignTask assignTask \u003d jsonAdaptedAssignTask.toModelType();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"            if (assignTasks.hasItem(assignTask)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            assignTasks.addItem(assignTask);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        return assignTasks;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"SPWwj":60}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":" * An Immutable task_book that is serializable to JSON format.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"@JsonRootName(value \u003d \"taskRepo\")","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonSerializableTaskBook} with the given tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializableTaskBook(@JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code ReadOnlyRepository} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializableTaskBook(ReadOnlyRepository\u003cTask\u003e source) {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        tasks.addAll(source.getData().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     * Converts this task book into the model\u0027s {@code TaskBook} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    public Repository\u003cTask\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cTask\u003e taskBook \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            if (taskBook.hasItem(task)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            taskBook.addItem(task);","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        return taskBook;","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":61}},{"path":"src/main/java/seedu/address/storage/JsonTaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":" * A class to access Repository data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"public class JsonTaskStorage implements RepositoryStorage\u003cTask\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskStorage.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    public JsonTaskStorage(Path filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readRepository() throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        return readRepository(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #readRepository()}.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readRepository(Path filePath)","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        if (jsonTaskBook.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"            return Optional.of(jsonTaskBook.get().toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cTask\u003e repository) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        saveRepository(repository, filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #saveRepository(ReadOnlyRepository)}.","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cTask\u003e repository, Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(repository);","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(repository), filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":76}},{"path":"src/main/java/seedu/address/storage/RepositoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Represents a general storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"public interface RepositoryStorage\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * Returns Repository data as a {@link ReadOnlyRepository}.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cT\u003e\u003e readRepository() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cT\u003e\u003e readRepository(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * Saves the given {@link ReadOnlyRepository} to the storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     * @param repository cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    void saveRepository(ReadOnlyRepository\u003cT\u003e repository) throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     * @see #saveRepository(ReadOnlyRepository)","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    void saveRepository(ReadOnlyRepository\u003cT\u003e repository, Path filePath) throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":39}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    void saveTaskBook(ReadOnlyRepository\u003cTask\u003e taskBook) throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cAssignTask\u003e\u003e readPersonTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    void savePersonTaskBook(ReadOnlyRepository\u003cAssignTask\u003e personTaskBook) throws IOException;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SPWwj":11,"-":32}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryStorage\u003cTask\u003e taskRepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryStorage\u003cAssignTask\u003e personTaskRepositoryStorage;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        taskRepositoryStorage \u003d new JsonTaskStorage(userPrefs.getTaskFilePath());","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        personTaskRepositoryStorage \u003d new JsonAssignTaskStorage(userPrefs.getPersonTaskPath());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        RepositoryStorage\u003cTask\u003e taskRepositoryStorage, RepositoryStorage\u003cAssignTask\u003e personTaskRepositoryStorage) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        this.taskRepositoryStorage \u003d taskRepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.personTaskRepositoryStorage \u003d personTaskRepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to read data from task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        return taskRepositoryStorage.readRepository();","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    public void saveTaskBook(ReadOnlyRepository\u003cTask\u003e taskBook) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to save data to task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"        taskRepositoryStorage.saveRepository(taskBook);","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cAssignTask\u003e\u003e readPersonTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to read data to person_task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"        return personTaskRepositoryStorage.readRepository();","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"    public void savePersonTaskBook(ReadOnlyRepository\u003cAssignTask\u003e personTaskBook) throws IOException {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to save data to person_task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"        personTaskRepositoryStorage.saveRepository(personTaskBook);","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":46,"-":76}},{"path":"src/main/java/seedu/address/ui/HelpStrings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":" * Provides HelpWindow class with long strings to be displayed on screen.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"public class HelpStrings {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"    public static final String HELP_MESSAGE \u003d \"For more help, Refer to the user guide: \" + HelpStrings.USERGUIDE_URL;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    public static final String USERGUIDE_URL \u003d \"\\nhttps://ay2223s2-cs2103-f10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    public static final String ADDMETHODS_HELP \u003d \"Nested within addmethods are the methods that you \"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"            + \"can use for adding tasks, and people.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    public static final String ADDPERSON_HELP \u003d \"What it does: Adds a person to OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"            + \"Format: addperson n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…\";","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    public static final String ADDTASK_HELP \u003d \"What it does: Adds a task to OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"            + \"Format: addtask n/NAME\";","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"    public static final String DELETEMETHODS_HELP \u003d \"Nested within deletemethods are the methods that you \"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"            + \"can use for deleting tasks, and people.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"    public static final String DELETEPERSON_HELP \u003d \"What it does: Deletes the person at the specified ID.\\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"            + \"The index refers to the INDEX shown in the displayed person list.\"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"            + \"The INDEX must be a positive integer (eg. 1, 2, 3...) \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"            + \"Format: deleteperson INDEX\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    public static final String DELETETASK_HELP \u003d \"What it does: Deletes the task at the specified INDEX.\\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"            + \"The index refers to the INDEX shown in the displayed task list\"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"            + \"The INDEX must be a positive integer (eg. 1, 2, 3...) \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"            + \"Format: deletetask INDEX\";","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    public static final String LISTMETHODS_HELP \u003d \"Nested within are the commands related\"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"            + \" to listing out persons, and tasks.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"    public static final String LISTPERSON_HELP \u003d \"What it does: Lists all persons in OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"            + \"Format: listpersons\";","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"    public static final String LISTTASK_HELP \u003d \"What it does: Lists all the tasks in OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"            + \"Format: listtask\";","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    public static final String FINDMETHODS_HELP \u003d \"Nested within are the commands related to\"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"            + \" finding persons, and tasks.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    public static final String FINDTASK_HELP \u003d \"What it does: Finds the task based on given keyword. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"            + \"Format: findtask KEYWORD\";","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    public static final String FINDPERSON_HELP \u003d \"What it does: Returns a person whose\"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"            + \" name matches the input keyword. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"            + \"The search is case-sensitive, and partial inputs are also accepted. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"            + \"Format: findperson KEYWORD\";","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"    public static final String ASSIGNMETHODS_HELP \u003d \"Nested within are the commands\"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"            + \" related to the assigning of tasks,\"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"            + \" to a person.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"    public static final String ASSIGN_HELP \u003d \"What it does: Assigns the task at\"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"            + \" specified index to person at specified\"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"            + \"index. The index refers to the index number shown in the displayed persons/task list. \\n\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"            + \"Format: assign /task INDEX /person INDEX\";","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kayyenl":48}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TreeItem;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TreeView;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"    public static final String USERGUIDE_URL \u003d \"\\nhttps://ay2223s2-cs2103-f10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"    private TreeView\u003cString\u003e treeView;","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"    private TextArea methodDescription;","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"    public HelpWindow() {","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"        this(new Stage());","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"        methodDescription.setWrapText(true);","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"        treeView","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"                .getSelectionModel()","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"                .selectedItemProperty()","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"                .addListener(new ChangeListener\u003cTreeItem\u003cString\u003e\u003e() {","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"                    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"                    public void changed(ObservableValue\u003c? extends TreeItem\u003cString\u003e\u003e observable,","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"                                        TreeItem\u003cString\u003e oldValue, TreeItem\u003cString\u003e newValue) {","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"                        TreeItem\u003cString\u003e selectedTreeItem \u003d (TreeItem\u003cString\u003e) newValue;","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"                        methodDescription.setText(instructionMap(selectedTreeItem.getValue()));","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"                    }","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"                });","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"        helpMessage.setText(HelpStrings.HELP_MESSAGE);","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"     * Generates and displays a String of information based on which TreeItem was clicked in the help interface.","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"     * @param treeItemValue from the TreeItem\u0027s getValue(), we will process the String and return help text.","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"    public static String instructionMap(String treeItemValue) {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"        switch (treeItemValue) {","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"        case \"Add methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.ADDMETHODS_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"        case \"addperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.ADDPERSON_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"        case \"addtask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.ADDTASK_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"        case \"Delete methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.DELETEMETHODS_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"        case \"deleteperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.DELETEPERSON_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"        case \"deletetask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.DELETETASK_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"        case \"List methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.LISTMETHODS_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"        case \"listperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.LISTPERSON_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"        case \"listtask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.LISTTASK_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"        case \"Find methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.FINDMETHODS_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"        case \"findperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.FINDPERSON_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"        case \"findtask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.FINDTASK_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"        case \"Assign methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.ASSIGNMETHODS_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"        case \"assign\":","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"            return HelpStrings.ASSIGN_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"        default:","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"            return \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":96,"kayyenl":70}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"        // Independent Ui parts residing in this Ui container","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"        PersonListPanel personListPanel \u003d new PersonListPanel(logic);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"        TaskListPanel taskListPanel \u003d new TaskListPanel(logic.getOfficeConnectModel()","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"            .getTaskModelManager().getFilteredItemList());","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SPWwj":12,"-":186}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.ProgressIndicator;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    private ProgressIndicator progressIndicator;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"            .forEach(tag -\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"                Label label \u003d new Label(tag.tagName);","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"                label.getStyleClass().add(\"cell_small_label\");","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"                tags.getChildren().add(label);","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"            });","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        progressIndicator.setProgress(0.5); // set progress value between 0.0 and 1.0","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SPWwj":13,"-":75}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    public PersonListPanel(Logic logic) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        logger.info(\"Init PersonListPanel\");","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        personListView.setItems(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell(logic.getOfficeConnectModel()));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    static class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        private final OfficeConnectModel officeConnectModel;","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        public PersonListViewCell(OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            this.officeConnectModel \u003d officeConnectModel;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"            Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"                setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"                    if (event.getClickCount() \u003d\u003d 1) { // Single Click","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"                        logger.info(\"An item selected: \" + PersonListViewCell.super.getItem().toString());","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"                        ObservableList\u003cAssignTask\u003e assignTasks \u003d officeConnectModel.getAssignTaskModelManager()","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"                            .getFilteredItemList().filtered(personTask -\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"                                personTask.getPersonId().equals(PersonListViewCell.super.getItem().getId()));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"                        officeConnectModel.getTaskModelManager().updateFilteredItemList(task -\u003e assignTasks.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"                            .anyMatch(personTask -\u003e personTask.getTaskId().equals(task.getId())));","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"                    } else if (event.getClickCount() \u003d\u003d 2) { //Double Click","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"                        logger.info(\"A double Click triggered\");","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"                    }","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"                });","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SPWwj":32,"-":44}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private Label resultDisplay;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SPWwj":2,"-":26}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * A TaskCard Controller class","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public final Task task;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    private Label title;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private Label content;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    private Label status;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    @FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    private Label id;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        super(FXML);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        title.setText(task.getTitle().getValue());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        content.setText(task.getContent().getValue());","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        setStatusSymbol(task.getStatus().isValue());","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    private void setStatusSymbol(boolean isDone) {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        if (isDone) {","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"            status.setText(\"✓\"); // Unicode character for the tick symbol","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            status.setStyle(\"-fx-text-fill: green;\"); // Color the tick symbol green","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"            status.setText(\"✗\"); // Unicode character for the cross symbol","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"            status.setStyle(\"-fx-text-fill: red;\"); // Color the cross symbol red","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":78}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        super(FXML);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        logger.info(\"Init TaskListPanel\");","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    static class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        public void updateItem(Task task, boolean empty) {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"                setText(null);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":50}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/officeconnect.png\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private final Logic logic;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        primaryStage.getIcons().add(getImage());","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"            showFatalErrorDialogAndShutdown(e);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    private Image getImage() {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        return new Image(Objects.requireNonNull(MainApp.class.getResourceAsStream(UiManager.ICON_APPLICATION)));","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    void showAlertDialogAndWait(String headerText, String contentText) {","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), headerText, contentText);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"    private static void showAlertDialogAndWait(Stage owner, String headerText,","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        final Alert alert \u003d new Alert(AlertType.ERROR);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        alert.getDialogPane().getStylesheets().add(\"css/DarkTheme.css\");","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        alert.setTitle(\"Fatal error during initializing\");","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"    private void showFatalErrorDialogAndShutdown(Throwable e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        logger.severe(\"Fatal error during initializing\" + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"        showAlertDialogAndWait(e.getMessage(), e.toString());","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SPWwj":16,"-":73}},{"path":"src/main/resources/css/CommandBox.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Style the StackPane */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":".stack-pane {","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f7f2e7; /* Light cream color */","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/* Style the TextField */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":".stack-pane .text-field {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #fff3e9; /* Lighter cream color */","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #6a492b; /* Chocolate color */","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #6a492b; /* Chocolate color */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    -fx-background-radius: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    -fx-prompt-text-fill: #9d7c63; /* Lighter chocolate color */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"/* Style the TextField when focused */","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":".stack-pane .text-field:focused {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #9d7c63; /* Lighter chocolate color */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":21}},{"path":"src/main/resources/css/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"#treeView {","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    -fx-border-width: 8px;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"    -fx-border-radius: 6 6 6 6;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    -fx-background-radius: 14 14 14 14;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    -fx-border-color: dimgray;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"#methodDescription {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    -fx-border-width: 4px;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"    -fx-border-radius: 6 6 6 6;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    -fx-background-radius: 14 14 14 14;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"    -fx-border-color: dimgray;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    -fx-background-color: #add8e6;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":18,"kayyenl":17}},{"path":"src/main/resources/css/MainWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Set the base background color and font color */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":".root {","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"    -fx-base: #ff8da1;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"    -fx-background: #f5f5f5;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"/* Style the MenuBar */","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":".menu-bar {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: linear-gradient(to bottom, #ffcee5 0%, #ffadc9 100%);","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #ff9cb9;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 0 0 1px 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    -fx-effect: innershadow(three-pass-box, rgba(0,0,0,0.1), 3, 0, 0, 0);","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":".menu {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":".menu-item {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":".menu-item:hover {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #ff9cb9;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"/* Style the StackPane and its border */","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":".pane-with-border {","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #ff9cb9;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.1), 3, 0, 1, 1);","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"/* Style the SplitPane */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":".split-pane {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":".split-pane .split-pane-divider {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #ff9cb9;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 0 1px;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"/* Style the status bar */","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":".status-bar {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: linear-gradient(to bottom, #ffcee5 0%, #ffadc9 100%);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #ff9cb9;","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 1px 0 0 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    -fx-effect: innershadow(three-pass-box, rgba(0,0,0,0.1), 3, 0, 0, 0);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":55}},{"path":"src/main/resources/css/PersonListCard.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Set the background color and border for the card pane */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"#cardPane {","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #d8d8d8;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/* Style the labels */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":".cell_big_label {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":".cell_small_label {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #666666;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"/* Style the FlowPane for tags */","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"#tags {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    -fx-hgap: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    -fx-vgap: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"/* Style the tags */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":".tag {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #4caf50;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 2px 6px;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    -fx-border-radius: 3px;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 12px;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":".progress-indicator .percentage {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    -fx-fill: black;","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":".progress-indicator  {","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 0 0 -16 0;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    visibility: true;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":44}},{"path":"src/main/resources/css/PersonListView.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Style the ListView */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":".list-view {","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #d8d8d8;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell:filled:selected {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #9b9b9b;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell:filled:selected:focused {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #6495ed;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell:filled:hover {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f0f0f0;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":27}},{"path":"src/main/resources/css/ResultDisplay.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Style the StackPane */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/* Credit https://www.freepik.com/ for free image */","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":".pane-with-border {","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    -fx-background-image: url(\"../images/grassland.png\");","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    -fx-background-size: 100% auto; /* Scale the background image horizontally to fit the width of the container */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    -fx-background-repeat: no-repeat;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    -fx-background-position: center; /* Center the background image vertically */","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"/* Style the Label */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":".result-display {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #000000; /* White text for better contrast against the grass background */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":17}},{"path":"src/main/resources/css/StatusBar.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Style the GridPane with status-bar class */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/* Credit https://www.freepik.com/ for free image */","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":".status-bar {","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    -fx-background-image: url(\"../images/wave.png\");","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    -fx-background-size: 100% auto; /* Scale the background image horizontally to fit the width of the container */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    -fx-background-repeat: no-repeat;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    -fx-background-position: center; /* Center the background image vertically */","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #5d99c6;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 1px 0px;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"/* Style the Label inside the GridPane */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":".status-bar .label {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    -fx-effect: dropshadow( one-pass-box , rgba(0,0,0,0.8) , 1, 0.0 , 1 , 1 );","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":19}},{"path":"src/main/resources/css/TaskCardView.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Set the background color and border for the task card pane */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"#taskCardPane {","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #d8d8d8;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/* Style the labels */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":".cell_big_label {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":".cell_small_label {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #666666;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"/* Style the status label */","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"#status {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":25}},{"path":"src/main/resources/css/TaskListView.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"/* Style the ListView */","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":".list-view {","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"    -fx-border-color: #d8d8d8;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"    -fx-border-radius: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell {","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    -fx-padding: 5px 10px;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #333333; /* Add this line to set the text color */","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell:filled:selected {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #9b9b9b;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell:filled:selected:focused {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #6495ed;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":".list-view .list-cell:filled:hover {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    -fx-background-color: #f0f0f0;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":27}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    \u003cURL value\u003d\"@../css/CommandBox.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"SPWwj":5,"-":7}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.control.TreeItem?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.control.TreeView?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        \u003cURL value\u003d\"@../css/HelpWindow.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"302.0\" prefWidth\u003d\"632.0\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"               \u003cBorderPane prefHeight\u003d\"287.0\" prefWidth\u003d\"614.0\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"                  \u003ctop\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"                     \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"                           \u003cHBox stylesheets\u003d\"@../css/HelpWindow.css\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"                                       \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"                                 \u003cRegion prefHeight\u003d\"31.0\" prefWidth\u003d\"150.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"                            \u003cButton id\u003d\"copyButton\" fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" prefHeight\u003d\"26.0\" prefWidth\u003d\"103.0\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"                                 \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"                           \u003c/HBox\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"                  \u003c/top\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"                  \u003cleft\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"                      \u003cTreeView fx:id\u003d\"treeView\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"                          \u003cTreeItem expanded\u003d\"true\" value\u003d\"User\u0027s Methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"addmethods\" value\u003d\"Add methods\" \u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"addperson\" value\u003d\"addperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"addtask\" value\u003d\"addtask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"deletemethods\" value\u003d\"Delete methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"deleteperson\" value\u003d\"deleteperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"deletetask\" value\u003d\"deletetask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"listmethods\" value\u003d\"List methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"listperson\" value\u003d\"listperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"listtask\" value\u003d\"listtask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"findmethods\" value\u003d\"Find methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"findperson\" value\u003d\"findperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"findtask\" value\u003d\"findtask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"assignmethods\" value\u003d\"Assign methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"assign\" value\u003d\"assign\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"                          \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"                        \u003cBorderPane.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"                           \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"                        \u003c/BorderPane.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"                      \u003c/TreeView\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"                  \u003c/left\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"                  \u003ccenter\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"                     \u003cTextArea fx:id\u003d\"methodDescription\"","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"                               editable\u003d\"false\" prefHeight\u003d\"200.0\"","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"                               prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"                               text\u003d\"\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"                        \u003cBorderPane.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"                           \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"kayyenl"},"content":"                        \u003c/BorderPane.margin\u003e\u003c/TextArea\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"kayyenl"},"content":"                  \u003c/center\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"               \u003c/BorderPane\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"SPWwj":2,"-":43,"kayyenl":76}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"         title\u003d\"OfficeConnect App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    \u003cImage url\u003d\"@/images/officeconnect.png\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        \u003cURL value\u003d\"@../css/MainWindow.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        \u003cSplitPane id\u003d\"splitPane\" fx:id\u003d\"splitPane\" dividerPositions\u003d\"0.4\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"          \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"          \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" SplitPane.resizableWithParent\u003d\"false\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"            \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"        \u003c/SplitPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"SPWwj":14,"-":55}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.ProgressIndicator?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    \u003cURL value\u003d\"@../css/PersonListCard.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        \u003cProgressIndicator fx:id\u003d\"progressIndicator\" minWidth\u003d\"25\" minHeight\u003d\"25\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"SPWwj":10,"-":33}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    \u003cURL value\u003d\"@../css/PersonListView.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":5,"-":7}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    \u003cURL value\u003d\"@../css/ResultDisplay.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"  \u003cLabel fx:id\u003d\"resultDisplay\" styleClass\u003d\"result-display\"/\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"SPWwj":7,"-":6}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"\u003cGridPane styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    \u003cURL value\u003d\"@../css/StatusBar.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"SPWwj":5,"-":11}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"\u003cHBox id\u003d\"taskCardPane\" fx:id\u003d\"taskCardPane\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        \u003cURL value\u003d\"@../css/TaskCardView.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"                \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"            \u003cLabel fx:id\u003d\"content\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$content\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"            \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":36}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"        \u003cURL value\u003d\"@../css/TaskListView.css\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    \u003cListView fx:id\u003d\"taskListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":9}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"        assertNotNull(AppUtil.getImage(\"/images/officeconnect.png\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"SPWwj":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"officeconnect.json\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"                + ADDRESS_DESC_AMY + ID_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SPWwj":4,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub, new OfficeConnectModelStub());","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        assertEquals(Collections.singletonList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"                addCommand.execute(modelStub, new OfficeConnectModelStub()));","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"Nicklelodeon"},"content":"    private class OfficeConnectModelStub extends OfficeConnectModel {","lastModifiedDate":"2023-03-01"},{"lineNumber":195,"author":{"gitId":"Nicklelodeon"},"content":"        public RepositoryModelManager\u003cTask\u003e getTaskModelManager() {","lastModifiedDate":"2023-03-01"},{"lineNumber":196,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":197,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":198,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":199,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":200,"author":{"gitId":"SPWwj"},"content":"        public RepositoryModelManager\u003cAssignTask\u003e getAssignTaskModelManager() {","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":202,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":203,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Nicklelodeon":15,"SPWwj":10,"-":180}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"class AddTaskCommandTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    public void constructor_nullTask_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddTaskCommand(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_taskAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"        RepositoryModelManagerStub repoModelManagerStub \u003d new RepositoryModelManagerStub();","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"        OfficeConnectModel testModel \u003d new OfficeConnectModel(repoModelManagerStub,","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"                new RepositoryModelManager\u003cAssignTask\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"        CommandResult commandResult \u003d new AddTaskCommand(validTask).execute(new ModelStub(), testModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(Arrays.asList(validTask), repoModelManagerStub.tasksAdded);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand(validTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"        RepositoryModelManagerStubWithTask repositoryModelManagerStubWithTask \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"                new RepositoryModelManagerStubWithTask(validTask);","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"        OfficeConnectModel testModel \u003d new OfficeConnectModel(repositoryModelManagerStubWithTask,","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"                new RepositoryModelManager\u003cAssignTask\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"        assertThrows(CommandException.class, AddTaskCommand.MESSAGE_DUPLICATE_TASK, () -\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"                addTaskCommand.execute(new ModelStub(), testModel));","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"    public void equals() {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"        Task taskEat \u003d new TaskBuilder().withTitle(\"Recreation Day\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"        Task taskDrink \u003d new TaskBuilder().withTitle(\"Project RUN\").build();","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"        AddTaskCommand addTaskEatCommand \u003d new AddTaskCommand(taskEat);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"        AddTaskCommand addTaskDrinkCommand \u003d new AddTaskCommand(taskDrink);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"        assertTrue(addTaskEatCommand.equals(addTaskEatCommand));","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Nicklelodeon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"        AddTaskCommand addTaskEatCommandCopy \u003d new AddTaskCommand(taskEat);","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"        assertTrue(addTaskEatCommand.equals(addTaskEatCommandCopy));","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        assertFalse(addTaskEatCommand.equals(1));","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"        assertFalse(addTaskEatCommand.equals(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Nicklelodeon"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Nicklelodeon"},"content":"        assertFalse(addTaskEatCommand.equals(addTaskDrinkCommand));","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Nicklelodeon"},"content":"    private class RepositoryModelManagerStub extends RepositoryModelManager\u003cTask\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"Nicklelodeon"},"content":"        final ArrayList\u003cTask\u003e tasksAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"Nicklelodeon"},"content":"        RepositoryModelManagerStub() {","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Nicklelodeon"},"content":"            super(new Repository\u003cTask\u003e());","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"Nicklelodeon"},"content":"        public boolean hasItem(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"Nicklelodeon"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"Nicklelodeon"},"content":"            return tasksAdded.stream().anyMatch(task::isSame);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Nicklelodeon"},"content":"        public void addItem(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"Nicklelodeon"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"Nicklelodeon"},"content":"            tasksAdded.add(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"Nicklelodeon"},"content":"    private class RepositoryModelManagerStubWithTask extends RepositoryModelManager\u003cTask\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"Nicklelodeon"},"content":"        private final Task task;","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"Nicklelodeon"},"content":"        RepositoryModelManagerStubWithTask(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"Nicklelodeon"},"content":"            super(new Repository\u003cTask\u003e());","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"Nicklelodeon"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"Nicklelodeon"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Nicklelodeon"},"content":"        public boolean hasItem(Task task) {","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"Nicklelodeon"},"content":"            requireNonNull(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"Nicklelodeon"},"content":"            return this.task.isSame(task);","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"Nicklelodeon"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"Nicklelodeon"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"Nicklelodeon"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"Nicklelodeon"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"Nicklelodeon"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"Nicklelodeon"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"Nicklelodeon"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"Nicklelodeon"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"Nicklelodeon"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"Nicklelodeon"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"Nicklelodeon"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"Nicklelodeon"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"Nicklelodeon"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":177,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":178,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"Nicklelodeon"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":182,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"Nicklelodeon"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"Nicklelodeon"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cyiting":1,"Nicklelodeon":185,"SPWwj":3}},{"path":"src/test/java/seedu/address/logic/commands/AssignCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FOURTH;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalTasks.COMPLETE_SLIDES;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalTasks.SEND_EMAIL_TO_CLIENT;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalTasks.STOCK_PANTRY;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":" * Contains integration and unit tests for {@code AssignCommand}.","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"public class AssignCommandTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"    private OfficeConnectModel officeConnectModel \u003d new OfficeConnectModel(","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"            new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"            new RepositoryModelManager\u003c\u003e(getPersonTaskRepository()));","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"        //null person index","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignCommand(INDEX_FIRST, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"cyiting"},"content":"        //null task index","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"cyiting"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignCommand(null, INDEX_SECOND));","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"cyiting"},"content":"        //all null args","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"cyiting"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignCommand(null, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"cyiting"},"content":"     * Test for valid indexes","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"cyiting"},"content":"    public void execute_validIndex_throwsCommandException() throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"cyiting"},"content":"        Index personIndex \u003d INDEX_FOURTH;","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"cyiting"},"content":"        Index taskIndex \u003d INDEX_FOURTH;","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"cyiting"},"content":"        Person person \u003d model.getFilteredPersonList().get(personIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"cyiting"},"content":"        Task task \u003d officeConnectModel.getTaskModelManager().getFilteredItemList().get(taskIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"cyiting"},"content":"        AssignCommand command \u003d new AssignCommand(personIndex, taskIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"cyiting"},"content":"        CommandResult result \u003d command.execute(model, officeConnectModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cAssignTask\u003e repo \u003d getPersonTaskRepository();","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        repo.addItem(new AssignTask(person.getId(), task.getId()));","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"        assertEquals(String.format(AssignCommand.MESSAGE_SUCCESS, person, task), result.getFeedbackToUser());","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        assertEquals(repo, officeConnectModel.getAssignTaskModelManager().getReadOnlyRepository());","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"     * Test for duplicate AssignTask","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"cyiting"},"content":"    public void execute_duplicatePersonTask_throwsCommandException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"        AssignCommand command \u003d new AssignCommand(INDEX_FIRST, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"        assertThrows(CommandException.class, AssignCommand.MESSAGE_DUPLICATE_ASSIGNMENT, () -\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"                command.execute(model, officeConnectModel));","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"     * Test if an invalid person index throws a CommandException and that the","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"     * AssignTask repo does not change.","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"cyiting"},"content":"    public void execute_invalidPersonIndex_throwsCommandException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"cyiting"},"content":"        Index outOfBounds \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"cyiting"},"content":"        Index correct \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"cyiting"},"content":"        AssignCommand command \u003d new AssignCommand(outOfBounds, correct);","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":97,"author":{"gitId":"cyiting"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"cyiting"},"content":"                command.execute(model, officeConnectModel));","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"cyiting"},"content":"        assertEquals(getPersonTaskRepository(),","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"                officeConnectModel.getAssignTaskModelManager().getReadOnlyRepository());","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"cyiting"},"content":"     * Test if an invalid task index throws a CommandException and that the","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"     * AssignTask repo does not change.","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"cyiting"},"content":"    public void execute_invalidTaskIndex_throwsCommandException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"cyiting"},"content":"        Index correct \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"cyiting"},"content":"        Index outOfBounds \u003d Index.fromOneBased(officeConnectModel.getTaskModelManager()","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"cyiting"},"content":"                .getFilteredItemList().size() + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"cyiting"},"content":"        AssignCommand command \u003d new AssignCommand(correct, outOfBounds);","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"cyiting"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"cyiting"},"content":"                command.execute(model, officeConnectModel));","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"cyiting"},"content":"        assertEquals(getPersonTaskRepository(),","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"                officeConnectModel.getAssignTaskModelManager().getReadOnlyRepository());","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"cyiting"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"cyiting"},"content":"        AssignCommand assignFirstCommand \u003d new AssignCommand(INDEX_FIRST, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"cyiting"},"content":"        AssignCommand assignSecondCommand \u003d new AssignCommand(INDEX_SECOND, INDEX_SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"cyiting"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"cyiting"},"content":"        assertTrue(assignFirstCommand.equals(assignFirstCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"cyiting"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"cyiting"},"content":"        AssignCommand assignFirstCommandCopy \u003d new AssignCommand(INDEX_FIRST, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"cyiting"},"content":"        assertTrue(assignFirstCommand.equals(assignFirstCommandCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"cyiting"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"cyiting"},"content":"        assertFalse(assignFirstCommand.equals(1));","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"cyiting"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"cyiting"},"content":"        assertFalse(assignFirstCommand.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"cyiting"},"content":"        // different personTask -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"cyiting"},"content":"        assertFalse(assignFirstCommand.equals(assignSecondCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"cyiting"},"content":"     * IMPLEMENTED THIS FOR TESTING FOR NOW","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"cyiting"},"content":"     * TO DO: WRAP MODEL, OFFICECONNECTMODEL IN ANOTHER CLASS NEXT","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"cyiting"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"SPWwj"},"content":"     * Returns a {@code Repository} with a few AssignTask mappings for the TypicalTaskRepository and","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"cyiting"},"content":"     * TypicalAddressBook used in this class.","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"SPWwj"},"content":"    private Repository\u003cAssignTask\u003e getPersonTaskRepository() {","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"SPWwj"},"content":"        AssignTask mapping1 \u003d new AssignTask(ALICE.getId(), SEND_EMAIL_TO_CLIENT.getId());","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"SPWwj"},"content":"        AssignTask mapping2 \u003d new AssignTask(BENSON.getId(), COMPLETE_SLIDES.getId());","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"SPWwj"},"content":"        AssignTask mapping3 \u003d new AssignTask(CARL.getId(), STOCK_PANTRY.getId());","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cAssignTask\u003e ptl \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"cyiting"},"content":"        ptl.addItem(mapping1);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"cyiting"},"content":"        ptl.addItem(mapping2);","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"cyiting"},"content":"        ptl.addItem(mapping3);","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"cyiting"},"content":"        return ptl;","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"cyiting":146,"SPWwj":15}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CONTENT;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TASK_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TITLE;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public static final String VALID_ID_AMY \u003d PersonBuilder.DEFAULT_ID.replace(\"0\", \"1\");","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    public static final String VALID_ID_BOB \u003d PersonBuilder.DEFAULT_ID.replace(\"0\", \"2\");","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    public static final String ID_DESC_BOB \u003d \" \" + PREFIX_ID + VALID_ID_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    public static final String ID_DESC_AMY \u003d \" \" + PREFIX_ID + VALID_ID_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String VALID_TITLE_SPORTS \u003d \"Recreation day\";","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String VALID_CONTENT_SPORTS \u003d \"Ride bicycle\";","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String VALID_STATUS_SPORTS \u003d \"False\";","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String SUBJECT_DESC_SPORTS \u003d \" \" + PREFIX_TITLE + VALID_TITLE_SPORTS;","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String CONTENT_DESC_SPORTS \u003d \" \" + PREFIX_CONTENT + VALID_CONTENT_SPORTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String STATUS_DESC_SPORTS \u003d \" \" + PREFIX_STATUS + VALID_STATUS_SPORTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"    public static final String VALID_PERSON_INDEX \u003d \" \" + PREFIX_PERSON_INDEX + \"1\";","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"    public static final String VALID_TASK_INDEX \u003d \" \" + PREFIX_TASK_INDEX + \"2\";","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"cyiting"},"content":"    public static final String INVALID_PERSON_INDEX \u003d \" \" + PREFIX_PERSON_INDEX + \"o\";","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"cyiting"},"content":"    public static final String INVALID_TASK_INDEX \u003d \" \" + PREFIX_TASK_INDEX + \"!\";","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"Nicklelodeon"},"content":"            CommandResult result \u003d command.execute(actualModel, new OfficeConnectModel());","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"Guo-KeCheng"},"content":"            System.out.println(ce.getMessage());","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"Guo-KeCheng"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"Guo-KeCheng"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"Guo-KeCheng"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"Guo-KeCheng"},"content":"     * - the {@code actualOfficeConnectModel} matches {@code expectedOfficeConnectModel}","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"Guo-KeCheng"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"Guo-KeCheng"},"content":"                                            Model expectedModel, OfficeConnectModel actualOfficeConnectModel,","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"Guo-KeCheng"},"content":"                                            OfficeConnectModel expectedOfficeConnectModel) {","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Guo-KeCheng"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Guo-KeCheng"},"content":"            CommandResult result \u003d command.execute(actualModel, actualOfficeConnectModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"Guo-KeCheng"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Guo-KeCheng"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"Guo-KeCheng"},"content":"            RepositoryModelManager\u003cTask\u003e actualModelTaskModelManager \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"Guo-KeCheng"},"content":"                    actualOfficeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"Guo-KeCheng"},"content":"            RepositoryModelManager\u003cTask\u003e expectedModelTaskModelManager \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"Guo-KeCheng"},"content":"                    expectedOfficeConnectModel.getTaskModelManager();","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"Guo-KeCheng"},"content":"            assertEquals(actualModelTaskModelManager, expectedModelTaskModelManager);","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"Guo-KeCheng"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"Guo-KeCheng"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"Guo-KeCheng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"Guo-KeCheng"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult,","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"Guo-KeCheng"},"content":"     *                                                      Model, OfficeConnectModel, OfficeConnectModel)}","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"Guo-KeCheng"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"Guo-KeCheng"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"Guo-KeCheng"},"content":"                                            Model expectedModel, OfficeConnectModel actualOfficeConnectModel,","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"Guo-KeCheng"},"content":"                                            OfficeConnectModel expectedOfficeConnectModel) {","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"Guo-KeCheng"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel,","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"Guo-KeCheng"},"content":"                actualOfficeConnectModel, expectedOfficeConnectModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"Nicklelodeon"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"Nicklelodeon"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":166,"author":{"gitId":"Nicklelodeon"},"content":"     * - the {@code actualModel} matches {@code expectedModel} for tasks","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"Nicklelodeon"},"content":"    public static void assertTaskCommandSuccess(Command command, OfficeConnectModel actualModel,","lastModifiedDate":"2023-03-09"},{"lineNumber":169,"author":{"gitId":"Nicklelodeon"},"content":"                                                CommandResult expectedCommandResult, OfficeConnectModel expectedModel) {","lastModifiedDate":"2023-03-09"},{"lineNumber":170,"author":{"gitId":"Nicklelodeon"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"Nicklelodeon"},"content":"            CommandResult result \u003d command.execute(new ModelManager(), actualModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":172,"author":{"gitId":"Nicklelodeon"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-09"},{"lineNumber":173,"author":{"gitId":"Nicklelodeon"},"content":"            RepositoryModelManager\u003cTask\u003e actualModelTaskModelManager \u003d actualModel.getTaskModelManager();","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"Nicklelodeon"},"content":"            RepositoryModelManager\u003cTask\u003e expectedModelTaskModelManager \u003d expectedModel.getTaskModelManager();","lastModifiedDate":"2023-03-09"},{"lineNumber":175,"author":{"gitId":"Nicklelodeon"},"content":"            assertEquals(actualModelTaskModelManager, expectedModelTaskModelManager);","lastModifiedDate":"2023-03-09"},{"lineNumber":176,"author":{"gitId":"Nicklelodeon"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-03-09"},{"lineNumber":177,"author":{"gitId":"Nicklelodeon"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-09"},{"lineNumber":178,"author":{"gitId":"Nicklelodeon"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":179,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":180,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":181,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":182,"author":{"gitId":"Nicklelodeon"},"content":"     * Convenience wrapper to {@link #assertTaskCommandSuccess(Command, OfficeConnectModel, String, OfficeConnectModel)}","lastModifiedDate":"2023-03-09"},{"lineNumber":183,"author":{"gitId":"Nicklelodeon"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-09"},{"lineNumber":184,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":185,"author":{"gitId":"Nicklelodeon"},"content":"    public static void assertTaskCommandSuccess(Command command, OfficeConnectModel actualModel, String expectedMessage,","lastModifiedDate":"2023-03-09"},{"lineNumber":186,"author":{"gitId":"Nicklelodeon"},"content":"                                            OfficeConnectModel expectedModel) {","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"Nicklelodeon"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":188,"author":{"gitId":"Nicklelodeon"},"content":"        assertTaskCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":189,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":190,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"Nicklelodeon"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":204,"author":{"gitId":"Nicklelodeon"},"content":"                command.execute(actualModel, new OfficeConnectModel()));","lastModifiedDate":"2023-03-01"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":208,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"Nicklelodeon"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"Nicklelodeon"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"Nicklelodeon"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"Nicklelodeon"},"content":"     * - the repository, filtered person list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"Nicklelodeon"},"content":"    public static void assertTaskCommandFailure(Command command,","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"Nicklelodeon"},"content":"                                                OfficeConnectModel actualModel, String expectedMessage) {","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"Nicklelodeon"},"content":"        // we are unable to defensively copy the OfficeConnectModel for comparison later, so we can","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"Nicklelodeon"},"content":"        // only do so by copying its components. copy repository model manager as filtered item list","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"Nicklelodeon"},"content":"        // must be same","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"Nicklelodeon"},"content":"        RepositoryModelManager\u003cTask\u003e expectedRepositoryModelManager \u003d actualModel.getTaskModelManager();","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"Nicklelodeon"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getTaskModelManager().getFilteredItemList());","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"Nicklelodeon"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"Nicklelodeon"},"content":"                command.execute(new ModelManager(), actualModel));","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(expectedRepositoryModelManager, actualModel.getTaskModelManager());","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(expectedFilteredList, actualModel.getTaskModelManager().getFilteredItemList());","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":236,"author":{"gitId":"SPWwj"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":242,"author":{"gitId":"Nicklelodeon"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-10"},{"lineNumber":243,"author":{"gitId":"Nicklelodeon"},"content":"     * {@code model}\u0027s repository.","lastModifiedDate":"2023-03-10"},{"lineNumber":244,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":245,"author":{"gitId":"Nicklelodeon"},"content":"    public static void showTaskAtIndex(OfficeConnectModel model, Index targetIndex) {","lastModifiedDate":"2023-03-10"},{"lineNumber":246,"author":{"gitId":"Nicklelodeon"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getTaskModelManager().getFilteredItemList().size());","lastModifiedDate":"2023-03-10"},{"lineNumber":247,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":248,"author":{"gitId":"Nicklelodeon"},"content":"        Task task \u003d model.getTaskModelManager().getFilteredItemList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":249,"author":{"gitId":"SPWwj"},"content":"        String taskSubject \u003d task.getTitle().getValue();","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"SPWwj"},"content":"        model.getTaskModelManager().updateFilteredItemList(x -\u003e x.getTitle().getValue().equals(taskSubject));","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(1, model.getTaskModelManager().getFilteredItemList().size());","lastModifiedDate":"2023-03-10"},{"lineNumber":252,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":253,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":254,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cyiting":6,"Nicklelodeon":78,"SPWwj":10,"-":124,"Guo-KeCheng":37}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"cyiting"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"cyiting"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"cyiting"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cyiting":12,"-":97}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandSuccess;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"public class DeleteTaskCommandTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private final OfficeConnectModel model \u003d new OfficeConnectModel(","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    private final OfficeConnectModel expectedModel \u003d new OfficeConnectModel(new","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"        RepositoryModelManager\u003c\u003e(model.getTaskModelManager().getReadOnlyRepository()),","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"        Task taskToDelete \u003d model.getTaskModelManager().getFilteredItemList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"        expectedModel.getTaskModelManager().deleteItem(taskToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"        assertTaskCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"Nicklelodeon"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"                model.getTaskModelManager().getFilteredItemList().size() + 1);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Nicklelodeon"},"content":"        assertTaskCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Nicklelodeon"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"        Task taskToDelete \u003d model.getTaskModelManager().getFilteredItemList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"        String expectedMessage \u003d String.format(DeleteTaskCommand.MESSAGE_DELETE_TASK_SUCCESS, taskToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"        expectedModel.getTaskModelManager().deleteItem(taskToDelete);","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"        showNoTask(expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"Nicklelodeon"},"content":"        assertTaskCommandSuccess(deleteTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"Nicklelodeon"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"Nicklelodeon"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"Nicklelodeon"},"content":"        assertTrue(outOfBoundIndex.getZeroBased()","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"                \u003c model.getTaskModelManager().getReadOnlyRepository().getData().size());","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand deleteTaskCommand \u003d new DeleteTaskCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"        assertTaskCommandFailure(deleteTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"Nicklelodeon"},"content":"    public void equals() {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand deleteFirstCommand \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand deleteSecondCommand \u003d new DeleteTaskCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"Nicklelodeon"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"Nicklelodeon"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand deleteFirstCommandCopy \u003d new DeleteTaskCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"Nicklelodeon"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"Nicklelodeon"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"Nicklelodeon"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"Nicklelodeon"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"Nicklelodeon"},"content":"    private void showNoTask(OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"Nicklelodeon"},"content":"        officeConnectModel.getTaskModelManager().updateFilteredItemList(x -\u003e false);","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"Nicklelodeon"},"content":"        assertTrue(officeConnectModel.getTaskModelManager().getFilteredItemList().isEmpty());","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Nicklelodeon":96,"SPWwj":14}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"cyiting"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"cyiting"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"cyiting"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"cyiting"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"cyiting"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"cyiting"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"cyiting"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"cyiting"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"cyiting"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"cyiting"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"cyiting"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"cyiting"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"cyiting"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"cyiting":19,"-":154}},{"path":"src/test/java/seedu/address/logic/commands/ListAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListAllCommand.","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"public class ListAllCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"    private Model model;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"    private OfficeConnectModel officeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"    private OfficeConnectModel expectedofficeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Guo-KeCheng"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Guo-KeCheng"},"content":"        officeConnectModel \u003d new OfficeConnectModel(new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"                new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Guo-KeCheng"},"content":"        expectedofficeConnectModel \u003d new OfficeConnectModel(officeConnectModel.getTaskModelManager(),","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"                new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Guo-KeCheng"},"content":"        ListAllCommand command \u003d new ListAllCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTaskCommandSuccess(command, officeConnectModel,","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedofficeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_onlyPersonListIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Guo-KeCheng"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Guo-KeCheng"},"content":"        ListAllCommand command \u003d new ListAllCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTaskCommandSuccess(command, officeConnectModel,","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedofficeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_onlyTaskListIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Guo-KeCheng"},"content":"        showTaskAtIndex(officeConnectModel, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Guo-KeCheng"},"content":"        ListAllCommand command \u003d new ListAllCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTaskCommandSuccess(command, officeConnectModel,","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedofficeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_bothListsAreFiltered_showsEverything() {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Guo-KeCheng"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Guo-KeCheng"},"content":"        showTaskAtIndex(officeConnectModel, INDEX_FIRST);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Guo-KeCheng"},"content":"        ListAllCommand command \u003d new ListAllCommand();","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, model,","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTaskCommandSuccess(command, officeConnectModel,","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Guo-KeCheng"},"content":"                ListAllCommand.MESSAGE_SUCCESS, expectedofficeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":3,"Guo-KeCheng":74}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cyiting":2,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":" * Contains integration tests (interaction with OfficeConnectModel) and unit tests for ListTaskCommand.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"    private OfficeConnectModel model;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    private OfficeConnectModel expectedModel;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        model \u003d new OfficeConnectModel(new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"                new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        expectedModel \u003d new OfficeConnectModel(model.getTaskModelManager(),","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"                new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"        assertTaskCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Nicklelodeon"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"        showTaskAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"        assertTaskCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Nicklelodeon":39,"SPWwj":3}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"    private OfficeConnectModel officeConnectModel \u003d new OfficeConnectModel(","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"            new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"    private OfficeConnectModel expectedOfficeConnectModel \u003d new OfficeConnectModel(new","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"            RepositoryModelManager\u003c\u003e(officeConnectModel.getTaskModelManager().getReadOnlyRepository()),","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"    public void execute_validIndexList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"        Task task \u003d officeConnectModel.getTaskModelManager().getFilteredItemList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"        MarkCommand command \u003d new MarkCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"        Task markedTask \u003d new TaskBuilder(task).withStatus(true).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_TASK_SUCCESS, markedTask);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"        expectedOfficeConnectModel.getTaskModelManager().setItem(task, markedTask);","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"        assertTaskCommandSuccess(command, officeConnectModel, expectedMessage, expectedOfficeConnectModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"cyiting"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"cyiting"},"content":"        Index outOfBounds \u003d Index.fromOneBased(officeConnectModel.getTaskModelManager()","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"cyiting"},"content":"                .getFilteredItemList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"cyiting"},"content":"        MarkCommand command \u003d new MarkCommand(outOfBounds);","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"cyiting"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"cyiting"},"content":"                command.execute(model, officeConnectModel));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"cyiting"},"content":"        assertTaskCommandFailure(command, officeConnectModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"cyiting"},"content":"    public void execute_alreadyMarkedTask_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"cyiting"},"content":"        Index markedTaskIndex \u003d Index.fromOneBased(officeConnectModel.getTaskModelManager()","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"cyiting"},"content":"                .getFilteredItemList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"cyiting"},"content":"        MarkCommand command \u003d new MarkCommand(markedTaskIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"cyiting"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_TASK_ALREADY_DONE, () -\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"cyiting"},"content":"                command.execute(model, officeConnectModel));","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"cyiting"},"content":"        assertTaskCommandFailure(command, officeConnectModel, Messages.MESSAGE_TASK_ALREADY_DONE);","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"cyiting"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"cyiting"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"cyiting"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"cyiting"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"cyiting"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"cyiting"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"cyiting"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"cyiting"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"cyiting"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cyiting":88,"SPWwj":3}},{"path":"src/test/java/seedu/address/logic/commands/ReviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.person.NameContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":" * Contains integration tests (interaction with the Model) for {@code ReviewCommand}.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Guo-KeCheng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Guo-KeCheng"},"content":"    private OfficeConnectModel officeConnectModel \u003d new OfficeConnectModel(","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Guo-KeCheng"},"content":"            new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Guo-KeCheng"},"content":"    private OfficeConnectModel expectedOfficeConnectModel \u003d new OfficeConnectModel(new","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Guo-KeCheng"},"content":"            RepositoryModelManager\u003c\u003e(officeConnectModel.getTaskModelManager().getReadOnlyRepository()),","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Guo-KeCheng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Guo-KeCheng"},"content":"        NameContainsExactKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Guo-KeCheng"},"content":"                new NameContainsExactKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Guo-KeCheng"},"content":"        NameContainsExactKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Guo-KeCheng"},"content":"                new NameContainsExactKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewCommand reviewFirstCommand \u003d new ReviewCommand(firstPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewCommand reviewSecondCommand \u003d new ReviewCommand(secondPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Guo-KeCheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTrue(reviewFirstCommand.equals(reviewFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Guo-KeCheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewCommand reviewFirstCommandCopy \u003d new ReviewCommand(firstPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTrue(reviewFirstCommand.equals(reviewFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Guo-KeCheng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Guo-KeCheng"},"content":"        assertFalse(reviewFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Guo-KeCheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Guo-KeCheng"},"content":"        assertFalse(reviewFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Guo-KeCheng"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Guo-KeCheng"},"content":"        assertFalse(reviewFirstCommand.equals(reviewSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_invalidKeywords_noPersonReviewed() {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"Guo-KeCheng"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"Guo-KeCheng"},"content":"        NameContainsExactKeywordsPredicate predicate \u003d preparePredicate(\"invalidKeyword\");","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewCommand command \u003d new ReviewCommand(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Guo-KeCheng"},"content":"        // Does not flush out the GUI when taking in invalid keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Guo-KeCheng"},"content":"        assertEquals(expectedModel.getFilteredPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Guo-KeCheng"},"content":"        assertEquals(expectedOfficeConnectModel.getTaskModelManager().getFilteredItemList(),","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Guo-KeCheng"},"content":"                officeConnectModel.getTaskModelManager().getFilteredItemList());","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_validKeywords_noTaskAssigned() {","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Guo-KeCheng"},"content":"        String expectedMessage \u003d String.format(ReviewCommand.MESSAGE_NO_TASK_ASSIGNED, \"Alice Pauline\");","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Guo-KeCheng"},"content":"        NameContainsExactKeywordsPredicate predicate \u003d preparePredicate(\"Alice Pauline\");","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewCommand command \u003d new ReviewCommand(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"Guo-KeCheng"},"content":"        Id pId \u003d getAssignedPersonId(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"        ObservableList\u003cAssignTask\u003e assignedTaskList \u003d getAssignedTaskList(pId);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Guo-KeCheng"},"content":"        assertEquals(Collections.emptyList(), assignedTaskList);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Guo-KeCheng"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e person.getId().equals(pId));","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Guo-KeCheng"},"content":"        expectedOfficeConnectModel.getTaskModelManager()","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"Guo-KeCheng"},"content":"                .updateFilteredItemList(assignedPerson -\u003e assignedTaskList.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"Guo-KeCheng"},"content":"                .anyMatch(personTask -\u003e personTask.getPersonId().equals(assignedPerson.getId())));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"Guo-KeCheng"},"content":"        // Person list should be updated accordingly","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"Guo-KeCheng"},"content":"        // Task list expected to be empty","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"Guo-KeCheng"},"content":"                officeConnectModel, expectedOfficeConnectModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"Guo-KeCheng"},"content":"    private Id getAssignedPersonId(NameContainsExactKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Guo-KeCheng"},"content":"        List\u003cPerson\u003e personList \u003d model.getAddressBook()","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Guo-KeCheng"},"content":"                .getPersonList()","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"Guo-KeCheng"},"content":"        Id pId \u003d personList.get(0).getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Guo-KeCheng"},"content":"        return pId;","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"    private ObservableList\u003cAssignTask\u003e getAssignedTaskList(Id pId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"        ObservableList\u003cAssignTask\u003e assignedTaskList \u003d expectedOfficeConnectModel.getAssignTaskModelManager()","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Guo-KeCheng"},"content":"                .getFilteredItemList()","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(persontask -\u003e persontask.getPersonId().equals(pId));","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Guo-KeCheng"},"content":"        return assignedTaskList;","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Guo-KeCheng"},"content":"     * Parses {@code userInput} into a {@code NameContainsExactKeywordsPredicate}.","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"Guo-KeCheng"},"content":"    private NameContainsExactKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Guo-KeCheng"},"content":"        return new NameContainsExactKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":6,"Guo-KeCheng":118}},{"path":"src/test/java/seedu/address/logic/commands/ReviewTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.TitleContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewTaskCommandTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Guo-KeCheng"},"content":"    private OfficeConnectModel officeConnectModel \u003d new OfficeConnectModel(","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Guo-KeCheng"},"content":"            new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Guo-KeCheng"},"content":"    private OfficeConnectModel expectedOfficeConnectModel \u003d new OfficeConnectModel(new","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Guo-KeCheng"},"content":"            RepositoryModelManager\u003c\u003e(officeConnectModel.getTaskModelManager().getReadOnlyRepository()),","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Guo-KeCheng"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        TitleContainsExactKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"                new TitleContainsExactKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        TitleContainsExactKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"                new TitleContainsExactKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewTaskCommand reviewFirstCommand \u003d new ReviewTaskCommand(firstPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewTaskCommand reviewSecondCommand \u003d new ReviewTaskCommand(secondPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Guo-KeCheng"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTrue(reviewFirstCommand.equals(reviewFirstCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Guo-KeCheng"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewTaskCommand reviewFirstCommandCopy \u003d new ReviewTaskCommand(firstPredicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTrue(reviewFirstCommand.equals(reviewFirstCommandCopy));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Guo-KeCheng"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"Guo-KeCheng"},"content":"        assertFalse(reviewFirstCommand.equals(1));","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Guo-KeCheng"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Guo-KeCheng"},"content":"        assertFalse(reviewFirstCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Guo-KeCheng"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Guo-KeCheng"},"content":"        assertFalse(reviewFirstCommand.equals(reviewSecondCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_invalidKeywords_noTaskReviewed() {","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Guo-KeCheng"},"content":"        String expectedMessage \u003d Messages.MESSAGE_INVALID_TASK;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        TitleContainsExactKeywordsPredicate predicate \u003d preparePredicate(\"Project Destroy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewTaskCommand command \u003d new ReviewTaskCommand(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandFailure(command, model, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"Guo-KeCheng"},"content":"        // Does not flush out the GUI when taking in invalid keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Guo-KeCheng"},"content":"        assertEquals(expectedModel.getFilteredPersonList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Guo-KeCheng"},"content":"        assertEquals(expectedOfficeConnectModel.getTaskModelManager().getFilteredItemList(),","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Guo-KeCheng"},"content":"                officeConnectModel.getTaskModelManager().getFilteredItemList());","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Guo-KeCheng"},"content":"    public void execute_validKeywords_noPersonAssigned() {","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"Guo-KeCheng"},"content":"        String expectedMessage \u003d String.format(ReviewTaskCommand.MESSAGE_NO_PERSON_ASSIGNED, \"Send email to client\");","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"        TitleContainsExactKeywordsPredicate predicate \u003d preparePredicate(\"Send email to client\");","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewTaskCommand command \u003d new ReviewTaskCommand(predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Guo-KeCheng"},"content":"        Id tId \u003d getAssignedTaskId(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"        ObservableList\u003cAssignTask\u003e assignedPersonList \u003d getAssignedPersonList(tId);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Guo-KeCheng"},"content":"        assertEquals(Collections.emptyList(), assignedPersonList);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"Guo-KeCheng"},"content":"        expectedModel.updateFilteredPersonList(person -\u003e assignedPersonList.stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"Guo-KeCheng"},"content":"                .anyMatch(personTask -\u003e personTask.getPersonId().equals(person.getId())));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Guo-KeCheng"},"content":"        expectedOfficeConnectModel.getTaskModelManager()","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"Guo-KeCheng"},"content":"                .updateFilteredItemList(task -\u003e task.getId().equals(tId));","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"Guo-KeCheng"},"content":"        // Person list expected to be empty","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"Guo-KeCheng"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel,","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"Guo-KeCheng"},"content":"                officeConnectModel, expectedOfficeConnectModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"Guo-KeCheng"},"content":"        // Task list expected to be updated accordingly","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Guo-KeCheng"},"content":"        assertTaskCommandSuccess(command, officeConnectModel, expectedMessage, expectedOfficeConnectModel);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"    private Id getAssignedTaskId(TitleContainsExactKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"Guo-KeCheng"},"content":"        ObservableList\u003cTask\u003e taskList \u003d officeConnectModel","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Guo-KeCheng"},"content":"                .getTaskModelManager()","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"                .getReadOnlyRepository().getData()","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Guo-KeCheng"},"content":"        Id tId \u003d taskList.get(0).getId();","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"Guo-KeCheng"},"content":"        return tId;","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"    private ObservableList\u003cAssignTask\u003e getAssignedPersonList(Id tId) {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"        ObservableList\u003cAssignTask\u003e assignedPersonList \u003d officeConnectModel.getAssignTaskModelManager()","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"Guo-KeCheng"},"content":"                .getFilteredItemList()","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Guo-KeCheng"},"content":"                .filtered(persontask -\u003e persontask.getTaskId().equals(tId));","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"Guo-KeCheng"},"content":"        return assignedPersonList;","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"Guo-KeCheng"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"     * Parses {@code userInput} into a {@code TitleContainsExactKeywordsPredicate}.","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Guo-KeCheng"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"    private TitleContainsExactKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"        return new TitleContainsExactKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":18,"Guo-KeCheng":106}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SEVENTH;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTaskRepository;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"    private OfficeConnectModel officeConnectModel \u003d new OfficeConnectModel(","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"            new RepositoryModelManager\u003c\u003e(getTypicalTaskRepository()),","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"    private OfficeConnectModel expectedOfficeConnectModel \u003d new OfficeConnectModel(new","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"            RepositoryModelManager\u003c\u003e(officeConnectModel.getTaskModelManager().getReadOnlyRepository()),","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(new Repository\u003cAssignTask\u003e()));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"    public void execute_validIndexList_success() {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"        Task task \u003d officeConnectModel.getTaskModelManager().getFilteredItemList().get(INDEX_SEVENTH.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(INDEX_SEVENTH);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"        Task unmarkedTask \u003d new TaskBuilder(task).withStatus(false).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"        String expectedMessage \u003d String.format(UnmarkCommand.MESSAGE_UNMARK_TASK_SUCCESS, unmarkedTask);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"        expectedOfficeConnectModel.getTaskModelManager().setItem(task, unmarkedTask);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"cyiting"},"content":"        assertTaskCommandSuccess(command, officeConnectModel, expectedMessage, expectedOfficeConnectModel);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"cyiting"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"cyiting"},"content":"        Index outOfBounds \u003d Index.fromOneBased(officeConnectModel.getTaskModelManager()","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"cyiting"},"content":"                .getFilteredItemList().size() + 1);","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"cyiting"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(outOfBounds);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"cyiting"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"cyiting"},"content":"                command.execute(model, officeConnectModel));","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"        assertTaskCommandFailure(command, officeConnectModel, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"cyiting"},"content":"    public void execute_alreadyUnmarkedTask_throwsCommandException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"cyiting"},"content":"        Index unmarkedTaskIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"cyiting"},"content":"        UnmarkCommand command \u003d new UnmarkCommand(unmarkedTaskIndex);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"cyiting"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_TASK_ALREADY_NOT_DONE, () -\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"cyiting"},"content":"                command.execute(model, officeConnectModel));","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"cyiting"},"content":"        assertTaskCommandFailure(command, officeConnectModel, Messages.MESSAGE_TASK_ALREADY_NOT_DONE);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"cyiting"},"content":"    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"        UnmarkCommand unmarkFirstCommand \u003d new UnmarkCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"cyiting"},"content":"        UnmarkCommand unmarkSecondCommand \u003d new UnmarkCommand(INDEX_SECOND);","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"cyiting"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"cyiting"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"cyiting"},"content":"        UnmarkCommand unmarkFirstCommandCopy \u003d new UnmarkCommand(INDEX_FIRST);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"cyiting"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"cyiting"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"cyiting"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"cyiting"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cyiting":88,"SPWwj":3}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ID_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    private final AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + ID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ID_DESC_BOB, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"            + ADDRESS_DESC_AMY + ID_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ID_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ID_DESC_BOB, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ID_DESC_BOB, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"SPWwj"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ID_DESC_BOB, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":132,"author":{"gitId":"SPWwj"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND + ID_DESC_BOB, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"SPWwj"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + ID_DESC_BOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"SPWwj":17,"-":126}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.CONTENT_DESC_SPORTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_SPORTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_DESC_SPORTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CONTENT_SPORTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_SPORTS;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TITLE_SPORTS;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"        // missing subject prefix","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"        assertParseFailure(parser, VALID_TITLE_SPORTS + CONTENT_DESC_SPORTS + STATUS_DESC_SPORTS,","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"        // missing content prefix","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"        assertParseFailure(parser, SUBJECT_DESC_SPORTS + VALID_CONTENT_SPORTS + STATUS_DESC_SPORTS,","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"        // missing status prefix","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"        assertParseFailure(parser, SUBJECT_DESC_SPORTS + SUBJECT_DESC_SPORTS + VALID_STATUS_SPORTS,","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"Nicklelodeon":36}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.ListTaskCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"Nicklelodeon"},"content":"    public void parseCommand_addTask() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"Nicklelodeon"},"content":"        Task task \u003d new TaskBuilder().build();","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"Nicklelodeon"},"content":"        AddTaskCommand command \u003d (AddTaskCommand) parser.parseCommand(\"addtask title/Recreation day \"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"Nicklelodeon"},"content":"                + \"c/Play football st/false\");","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(new AddTaskCommand(task), command);","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"Nicklelodeon"},"content":"    public void parseCommand_deleteTask() throws Exception {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"        DeleteTaskCommand command \u003d (DeleteTaskCommand) parser.parseCommand(","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"                DeleteTaskCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        assertEquals(new DeleteTaskCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"    public void parseCommand_assign() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"        AssignCommand command \u003d (AssignCommand) parser.parseCommand(","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"                        AssignCommand.COMMAND_WORD + \" pi/2 ti/1\");","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"        assertEquals(new AssignCommand(INDEX_SECOND, INDEX_FIRST), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"    public void parseCommand_markTask() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"cyiting"},"content":"        MarkCommand command \u003d (MarkCommand) parser.parseCommand(","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"cyiting"},"content":"                    MarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"cyiting"},"content":"        assertEquals(new MarkCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"cyiting"},"content":"    public void parseCommand_unmarkTask() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"cyiting"},"content":"        UnmarkCommand command \u003d (UnmarkCommand) parser.parseCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"cyiting"},"content":"                UnmarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"cyiting"},"content":"        assertEquals(new UnmarkCommand(INDEX_FIRST), command);","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"cyiting"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"cyiting"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"Nicklelodeon"},"content":"    public void parseCommand_listTask() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"Nicklelodeon"},"content":"        assertTrue(parser.parseCommand(ListTaskCommand.COMMAND_WORD) instanceof ListTaskCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"Nicklelodeon"},"content":"        assertTrue(parser.parseCommand(ListTaskCommand.COMMAND_WORD + \" 3\") instanceof ListTaskCommand);","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":141,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cyiting":28,"Nicklelodeon":26,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/AssignCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PERSON_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TASK_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PERSON_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TASK_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.AssignCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"public class AssignCommandParserTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"    private AssignCommandParser parser \u003d new AssignCommandParser();","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"        // missing person index","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"        assertParseFailure(parser, VALID_TASK_INDEX, expectedMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"        // missing task index","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"        assertParseFailure(parser, VALID_PERSON_INDEX, expectedMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"    public void parse_validArgs_returnsAssignCommand() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"        assertParseSuccess(parser, VALID_PERSON_INDEX + VALID_TASK_INDEX,","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"                new AssignCommand(INDEX_FIRST, INDEX_SECOND));","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"        //invalid task index","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"        assertParseFailure(parser, VALID_PERSON_INDEX + INVALID_TASK_INDEX,","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"        //invalid person index","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"        assertParseFailure(parser, INVALID_PERSON_INDEX + VALID_TASK_INDEX,","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AssignCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"cyiting":48}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"cyiting":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.logic.commands.DeleteTaskCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":" * outside of the DeleteTaskCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":" * same path through the DeleteTaskCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"public class DeleteTaskCommandParserTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    private DeleteTaskCommandParser parser \u003d new DeleteTaskCommandParser();","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"        assertParseSuccess(parser, \"1\", new DeleteTaskCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Nicklelodeon"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"Nicklelodeon":35}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"cyiting"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"cyiting"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"cyiting"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"cyiting"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"cyiting"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"cyiting"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"cyiting":9,"-":202}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"        assertParseSuccess(parser, \"1\", new MarkCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"cyiting":24}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString((long) Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"cyiting"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"cyiting"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"SPWwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"SPWwj"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"SPWwj"},"content":"    void parseId_emptyString_generatesValidUuid() throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d ParserUtil.parseId(\"\");","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"SPWwj"},"content":"        assertFalse(Id.isInValidId(id.toString()), \"Generated UUID should be valid\");","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"SPWwj"},"content":"    void parseId_validString_returnsId() throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"SPWwj"},"content":"        String validUuid \u003d \"d9cc62ca-0f19-11ec-82a8-0242ac130003\";","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d ParserUtil.parseId(validUuid);","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"SPWwj"},"content":"        assertEquals(validUuid, id.toString(), \"Parsed UUID should be equal to the input string\");","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"SPWwj"},"content":"    void parseId_invalidString_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"SPWwj"},"content":"        String invalidUuid \u003d \"not a valid uuid\";","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"SPWwj"},"content":"        assertThrows(ParseException.class, Id.MESSAGE_CONSTRAINTS, () -\u003e ParserUtil.parseId(invalidUuid));","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"SPWwj"},"content":"    void parseSubject_validString_returnsSubject() throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"SPWwj"},"content":"        String validSubject \u003d \"Math\";","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"SPWwj"},"content":"        Title title \u003d ParserUtil.parseSubject(validSubject);","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"SPWwj"},"content":"        assertEquals(validSubject, title.toString(), \"Parsed title should be equal to the input string\");","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"SPWwj"},"content":"    void parseSubject_invalidString_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"SPWwj"},"content":"        String invalidSubject \u003d \"Invalid_Subject\";","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"SPWwj"},"content":"        assertThrows(ParseException.class, Title.MESSAGE_CONSTRAINTS, () -\u003e ParserUtil.parseSubject(invalidSubject));","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"SPWwj"},"content":"    void parseContent_validString_returnsContent() throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"SPWwj"},"content":"        String validContent \u003d \"This is a valid content\";","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"SPWwj"},"content":"        Content content \u003d ParserUtil.parseContent(validContent);","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"SPWwj"},"content":"        assertEquals(validContent, content.toString(), \"Parsed content should be equal to the input string\");","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"SPWwj"},"content":"    void parseContent_invalidString_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"SPWwj"},"content":"        String invalidContent \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"SPWwj"},"content":"        assertThrows(ParseException.class, Content.MESSAGE_CONSTRAINTS, () -\u003e ParserUtil.parseContent(invalidContent));","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"SPWwj"},"content":"    void parseStatus_validString_returnsStatus() throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"SPWwj"},"content":"        String validStatus \u003d \"true\";","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"SPWwj"},"content":"        Status status \u003d ParserUtil.parseStatus(validStatus);","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"SPWwj"},"content":"        assertTrue(status.isValue(), \"Parsed status should be equal to the input boolean value\");","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"SPWwj"},"content":"    void parseStatus_invalidString_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"SPWwj"},"content":"        String invalidStatus \u003d \"invalid\";","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"SPWwj"},"content":"        assertThrows(ParseException.class, Status.MESSAGE_CONSTRAINTS, () -\u003e ParserUtil.parseStatus(invalidStatus));","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"cyiting":3,"SPWwj":69,"-":187}},{"path":"src/test/java/seedu/address/logic/parser/ReviewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ReviewCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.model.person.NameContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"    private ReviewCommandParser parser \u003d new ReviewCommandParser();","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"    public void parse_empty_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReviewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"    public void parse_validArgs_returnsReviewTaskCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewCommand expectedReviewCommand \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"                new ReviewCommand(new NameContainsExactKeywordsPredicate(((Arrays.asList(\"Alice\", \"Bob\")))));","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedReviewCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedReviewCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Guo-KeCheng":35}},{"path":"src/test/java/seedu/address/logic/parser/ReviewTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"import seedu.address.logic.commands.ReviewTaskCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.TitleContainsExactKeywordsPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"public class ReviewTaskCommandParserTest {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    private final ReviewTaskCommandParser parser \u003d new ReviewTaskCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"    public void parse_empty_throwsParseException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ReviewTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"    public void parse_validArgs_returnsReviewTaskCommand() {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"        ReviewTaskCommand expectedReviewTaskCommand \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"                new ReviewTaskCommand(new TitleContainsExactKeywordsPredicate((Arrays.asList(\"Task\", \"1\"))));","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"        assertParseSuccess(parser, \"Task 1\", expectedReviewTaskCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Guo-KeCheng"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Guo-KeCheng"},"content":"        assertParseSuccess(parser, \" \\n Task \\n \\t 1  \\t\", expectedReviewTaskCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Guo-KeCheng"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Guo-KeCheng"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"SPWwj":3,"Guo-KeCheng":31}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"import seedu.address.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"public class UnmarkCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"    private UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkCommand(INDEX_FIRST));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cyiting":25}},{"path":"src/test/java/seedu/address/model/ItemStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * A Simple Stub class implements Relationship","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public class ItemStub implements Relationship\u003cItemStub\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    private final String value;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    public ItemStub(String value) {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public boolean isSame(ItemStub otherItem) {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        if (otherItem \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        return otherItem !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherItem.value.equals(value);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"    public boolean hasSameId(ItemStub otherItem) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"        return isSame(otherItem);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"cyiting":4,"SPWwj":27}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.model.ModelManager.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs));","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs));","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs));","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"SPWwj":9,"-":124}},{"path":"src/test/java/seedu/address/model/OfficeConnectModelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"class OfficeConnectModelTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    private OfficeConnectModel officeModel;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private Task testTask;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private AssignTask testAssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    void setUp() {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        officeModel \u003d new OfficeConnectModel();","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        Person testPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        testTask \u003d TaskBuilder.ofRandomTask();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        testAssignTask \u003d new AssignTask(testPerson.getId(), testTask.getId());","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    void addTask_validTask_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        officeModel.getTaskModelManager().addItem(testTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        assertTrue(officeModel.getTaskModelManager().hasItem(testTask));","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    void removeTask_validTask_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        officeModel.getTaskModelManager().addItem(testTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        officeModel.getTaskModelManager().deleteItem(testTask);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        assertFalse(officeModel.getTaskModelManager().hasItem(testTask));","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    void addPersonTask_validPersonTask_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        officeModel.getAssignTaskModelManager().addItem(testAssignTask);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        assertTrue(officeModel.getAssignTaskModelManager().hasItem(testAssignTask));","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    void removePersonTask_validPersonTask_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        officeModel.getAssignTaskModelManager().addItem(testAssignTask);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        officeModel.getAssignTaskModelManager().deleteItem(testAssignTask);","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        assertFalse(officeModel.getAssignTaskModelManager().hasItem(testAssignTask));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":57}},{"path":"src/test/java/seedu/address/model/RepositoryModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"public class RepositoryModelManagerTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private RepositoryModelManager\u003cItemStub\u003e itemManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private ItemStub item1;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private ItemStub item2;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        itemManager \u003d new RepositoryModelManager\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        item1 \u003d new ItemStub(\"item1\");","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        item2 \u003d new ItemStub(\"item2\");","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    public void hasItem_itemExists() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemManager.hasItem(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    public void hasItem_itemDoesNotExist() {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        assertFalse(itemManager.hasItem(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    public void deleteItem_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        itemManager.deleteItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        assertFalse(itemManager.hasItem(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    public void addItem_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemManager.hasItem(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    public void setItem_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        itemManager.setItem(item1, item2);","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        assertFalse(itemManager.hasItem(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemManager.hasItem(item2));","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    public void getFilteredItemList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        assertNotNull(itemManager.getFilteredItemList());","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    public void updateFilteredItemList_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        Predicate\u003cItemStub\u003e predicate \u003d (item) -\u003e item.getValue().equals(\"item1\");","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item2);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        itemManager.updateFilteredItemList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        assertEquals(1, itemManager.getFilteredItemList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemManager.getFilteredItemList().contains(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    public void showAllItems_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        Predicate\u003cItemStub\u003e predicate \u003d (item) -\u003e item.getValue().equals(\"item1\");","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item2);","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        itemManager.updateFilteredItemList(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        itemManager.showAllItems();","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"        assertEquals(2, itemManager.getFilteredItemList().size());","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        assertEquals(itemManager, itemManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    public void equals_sameValues_true() {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cItemStub\u003e otherRepo \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        otherRepo.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        otherRepo.addItem(item2);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cItemStub\u003e otherManager \u003d new RepositoryModelManager\u003c\u003e(otherRepo);","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"        itemManager.setRepository(otherRepo);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"        assertEquals(itemManager, otherManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"    public void equals_differentValues_false() {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cItemStub\u003e otherRepo \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"        otherRepo.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"        otherRepo.addItem(item2);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"        itemManager.addItem(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cItemStub\u003e otherManager \u003d new RepositoryModelManager\u003c\u003e(otherRepo);","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(itemManager, otherManager);","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"    public void equals_differentObject_false() {","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(itemManager, new Object());","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":119}},{"path":"src/test/java/seedu/address/model/UniqueItemListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.exceptions.DuplicateItemException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.exceptions.ItemNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"class UniqueItemListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    private UniqueItemList\u003cItemStub\u003e itemList;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private ItemStub item1;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private ItemStub item2;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private ItemStub item3;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        itemList \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        item1 \u003d new ItemStub(\"item1\");","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        item2 \u003d new ItemStub(\"item2\");","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        item3 \u003d new ItemStub(\"item3\");","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    public void contains_itemExists() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        itemList.add(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemList.contains(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    public void contains_itemDoesNotExist() {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        assertFalse(itemList.contains(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    public void add_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        itemList.add(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemList.contains(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public void add_duplicateItem() {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        itemList.add(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e itemList.add(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    public void setItem_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        itemList.add(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        ItemStub editedItem \u003d new ItemStub(\"item1-edited\");","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"        itemList.setItem(item1, editedItem);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemList.contains(editedItem));","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    public void setItem_itemNotFound() {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e itemList.setItem(item1, item2));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"    public void setItem_duplicateItem() {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        itemList.add(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        itemList.add(item2);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e itemList.setItem(item1, item2));","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"    public void remove_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        itemList.add(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        itemList.remove(item1);","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        assertFalse(itemList.contains(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    public void remove_itemNotFound() {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        assertThrows(ItemNotFoundException.class, () -\u003e itemList.remove(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"    public void setItems_success() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"        itemList.setItems(Arrays.asList(item1, item2, item3));","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemList.contains(item1));","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemList.contains(item2));","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        assertTrue(itemList.contains(item3));","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    public void setItems_duplicateItems() {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        assertThrows(DuplicateItemException.class, () -\u003e itemList.setItems(Arrays.asList(item1, item1)));","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":97}},{"path":"src/test/java/seedu/address/model/mapping/AssignTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"public class AssignTaskTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    public void constructor_validIds_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"        Id personId \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        Id taskId \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"        AssignTask assignTask \u003d new AssignTask(personId, taskId);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"        assertEquals(personId, assignTask.getPersonId());","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"        assertEquals(taskId, assignTask.getTaskId());","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public void constructor_nullIds_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        Id personId \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        Id taskId \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AssignTask(personId, taskId));","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    public void equals_sameAssignTask_returnsTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        Id personId \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        Id taskId \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        AssignTask assignTask1 \u003d new AssignTask(personId, taskId);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        AssignTask assignTask2 \u003d new AssignTask(personId, taskId);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        assertEquals(assignTask1, assignTask2);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    public void equals_differentAssignTask_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        Id personId1 \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        Id taskId1 \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        AssignTask assignTask1 \u003d new AssignTask(personId1, taskId1);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        Id personId2 \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        Id taskId2 \u003d new Id();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        AssignTask assignTask2 \u003d new AssignTask(personId2, taskId2);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(assignTask1, assignTask2);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"SPWwj":50}},{"path":"src/test/java/seedu/address/model/shared/IdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.shared;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"class IdTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    void constructor_generateValidUuid() {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d new Id();","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        assertFalse(Id.isInValidId(id.toString()), \"Generated UUID should be valid\");","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    void constructor_generateUuidFromString() {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"        String uuid \u003d \"d9cc62ca-0f19-11ec-82a8-0242ac130003\";","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d new Id(uuid);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        assertEquals(uuid, id.toString(), \"UUID should be equal to the string used to create it\");","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    void isInValidId_invalidUuid() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        String invalidUuid \u003d \"not a valid uuid\";","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        assertTrue(Id.isInValidId(invalidUuid), \"Invalid UUID should not be valid\");","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    void isInValidId_validUuid() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        String validUuid \u003d \"d9cc62ca-0f19-11ec-82a8-0242ac130003\";","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        assertFalse(Id.isInValidId(validUuid), \"Valid UUID should be valid\");","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    void equals_sameObject() {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d new Id();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        assertEquals(id, id, \"Object should be equal to itself\");","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    void equals_null() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d new Id();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(id, null, \"Object should not be equal to null\");","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    void equals_differentClass() {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        Id id \u003d new Id();","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(id, new Object(), \"Object should not be equal to object of a different class\");","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    void equals_sameValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        Id id1 \u003d new Id(\"d9cc62ca-0f19-11ec-82a8-0242ac130003\");","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        Id id2 \u003d new Id(\"d9cc62ca-0f19-11ec-82a8-0242ac130003\");","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        assertEquals(id1, id2, \"Objects with same value should be equal\");","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    void hashCode_sameValue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        Id id1 \u003d new Id(\"d9cc62ca-0f19-11ec-82a8-0242ac130003\");","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        Id id2 \u003d new Id(\"d9cc62ca-0f19-11ec-82a8-0242ac130003\");","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        assertEquals(id1.hashCode(), id2.hashCode(), \"Objects with same value should have the same hash code\");","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":69}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAssignTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"class JsonAdaptedAssignTaskTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_PERSON_ID \u003d UUID.randomUUID().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_TASK_ID \u003d UUID.randomUUID().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private static final String INVALID_ID \u003d \"a\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_validPersonTaskDetails_returnsPersonTask() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedAssignTask jsonPersonTask \u003d new JsonAdaptedAssignTask(VALID_PERSON_ID, VALID_TASK_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        AssignTask expectedAssignTask \u003d new AssignTask(new Id(VALID_PERSON_ID), new Id(VALID_TASK_ID));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        assertEquals(expectedAssignTask, jsonPersonTask.toModelType());","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_invalidPersonId_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedAssignTask jsonPersonTask \u003d new JsonAdaptedAssignTask(INVALID_ID, VALID_TASK_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonPersonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_invalidTaskId_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedAssignTask jsonPersonTask \u003d new JsonAdaptedAssignTask(VALID_PERSON_ID, INVALID_ID);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonPersonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":38}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_ID \u003d BENSON.getId().getValue().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"                VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"            VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"            VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"            VALID_EMAIL, null, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ID, invalidTags);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SPWwj":15,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.UUID;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"class JsonAdaptedTaskTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_ID \u003d UUID.randomUUID().toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_SUBJECT \u003d \"Math homework\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_CONTENT \u003d \"Do exercises 1 to 10 in Chapter 3\";","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_STATUS \u003d \"true\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private static final String INVALID_ID \u003d \"a\";","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private static final String INVALID_SUBJECT \u003d \"Math homework #1\";","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    private static final String INVALID_CONTENT \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    private static final String INVALID_STATUS \u003d \"yes\";","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(VALID_ID, VALID_SUBJECT, VALID_CONTENT, VALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        Task expectedTask \u003d new Task(new Title(VALID_SUBJECT), new Content(VALID_CONTENT),","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"            new Status(true), new Id(VALID_ID));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        assertEquals(expectedTask, jsonTask.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_missingId_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(null, VALID_SUBJECT, VALID_CONTENT, VALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_invalidId_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(INVALID_ID, VALID_SUBJECT, VALID_CONTENT, VALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_missingSubject_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(VALID_ID, null, VALID_CONTENT, VALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_invalidSubject_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(VALID_ID, INVALID_SUBJECT, VALID_CONTENT, VALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_missingContent_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(VALID_ID, VALID_SUBJECT, null, VALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_invalidContent_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(VALID_ID, VALID_SUBJECT, INVALID_CONTENT, VALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_missingStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(VALID_ID, VALID_SUBJECT, VALID_CONTENT, null);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedTask jsonTask \u003d new JsonAdaptedTask(VALID_ID, VALID_SUBJECT, VALID_CONTENT, INVALID_STATUS);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        assertThrows(IllegalValueException.class, jsonTask::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"SPWwj":86}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"officeconnect.json\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"SPWwj":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.AssignTask;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        JsonTaskStorage taskStorage \u003d new JsonTaskStorage(getTempFilePath(\"test_task\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        JsonAssignTaskStorage personTaskStorage \u003d new JsonAssignTaskStorage(getTempFilePath(\"test_person_task\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskStorage, personTaskStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"    public void taskBookReadSave() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        /*","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"         * {@link JsonTaskStorage} class.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cTask\u003e original \u003d TaskBuilder.ofRandomTaskBook(10);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        storageManager.saveTaskBook(original);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        ReadOnlyRepository\u003cTask\u003e retrieved \u003d storageManager.readTaskBook().get();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        assertEquals(original, Repository.of(retrieved));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    public void personTaskBookReadSave() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        /*","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"         * {@link JsonAssignTaskStorage} class.","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        Task task \u003d TaskBuilder.ofRandomTask();","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cAssignTask\u003e original \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"        original.addItem(new AssignTask(person.getId(), task.getId()));","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        storageManager.savePersonTaskBook(original);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        ReadOnlyRepository\u003cAssignTask\u003e retrieved \u003d storageManager.readPersonTaskBook().get();","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        assertEquals(original, Repository.of(retrieved));","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":37,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private final EditPersonDescriptor descriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        descriptor.setId(person.getId());","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"     * Sets the {@code Id} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    public EditPersonDescriptorBuilder withId(String id) {","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        descriptor.setId(new Id(id));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"SPWwj":14,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public static final String DEFAULT_ID \u003d \"00000000-0000-0000-0000-000000000000\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private Id id;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        id \u003d new Id(DEFAULT_ID);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"     * Sets the {@code Id} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d new Id(id);","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"        return new Person(name, phone, email, address, tags, id);","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"SPWwj":14,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ID;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        sb.append(PREFIX_NAME).append(person.getName().fullName).append(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        sb.append(PREFIX_PHONE).append(person.getPhone().value).append(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        sb.append(PREFIX_EMAIL).append(person.getEmail().value).append(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        sb.append(PREFIX_ID).append(person.getId().getValue().toString()).append(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        sb.append(PREFIX_ADDRESS).append(person.getAddress().value).append(\" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        person.getTags().forEach(","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"            s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \")","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        descriptor.getId().ifPresent(id -\u003e sb.append(PREFIX_ID).append(id.getValue().toString()).append(\" \"));","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"SPWwj":9,"-":56}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Title;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":" * A utility class to help with building Task objects.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"public class TaskBuilder {","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String RANDOM_TASK_TITLE \u003d \"Random Title\";","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    public static final String RANDOM_TASK_CONTENT \u003d \"Random Content ABC\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    public static final boolean RANDOM_TASK_STATUS \u003d true;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    public static final String DEFAULT_TITLE \u003d \"Recreation day\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    public static final String DEFAULT_CONTENT \u003d \"Play football\";","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"    public static final boolean DEFAULT_STATUS \u003d false;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private Title title;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"    private Content content;","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"    private Status status;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Nicklelodeon"},"content":"    public TaskBuilder() {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        title \u003d new Title(DEFAULT_TITLE);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Nicklelodeon"},"content":"        content \u003d new Content(DEFAULT_CONTENT);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Nicklelodeon"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Nicklelodeon"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Nicklelodeon"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        title \u003d taskToCopy.getTitle();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Nicklelodeon"},"content":"        content \u003d taskToCopy.getContent();","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"Nicklelodeon"},"content":"        status \u003d taskToCopy.getStatus();","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    private Task buildRandomTask() {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Nicklelodeon"},"content":"        return new Task(new Title(RANDOM_TASK_TITLE), new Content(RANDOM_TASK_CONTENT),","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            new Status(RANDOM_TASK_STATUS));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    private Task buildRandomTaskWithIndex(int index) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Nicklelodeon"},"content":"        return new Task(new Title(RANDOM_TASK_TITLE + \" \" + index),","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"            new Content(RANDOM_TASK_CONTENT + \" \" + index),","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"            new Status(RANDOM_TASK_STATUS));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"     * Generates a random task","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    public static Task ofRandomTask() {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        return new TaskBuilder().buildRandomTask();","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"     * Generates a random list of tasks","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    public static Repository\u003cTask\u003e ofRandomTaskBook(int size) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cTask\u003e taskRepository \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"            taskRepository.addItem(new TaskBuilder().buildRandomTaskWithIndex(i));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        return taskRepository;","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"     * Sets the {@code Title} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Nicklelodeon"},"content":"    public TaskBuilder withTitle(String title) {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"Nicklelodeon"},"content":"        this.title \u003d new Title(title);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"Nicklelodeon"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"cyiting"},"content":"     * Sets the {@code Content} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"cyiting"},"content":"    public TaskBuilder withContent(String content) {","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"cyiting"},"content":"        this.content \u003d new Content(content);","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"cyiting"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"cyiting"},"content":"     * Sets the {@code Status} of the {@code Task} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"cyiting"},"content":"    public TaskBuilder withStatus(boolean status) {","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"cyiting"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"cyiting"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"Nicklelodeon"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"Nicklelodeon"},"content":"     * Sets Task to be created","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"     * @return Task containing specified {@code Title, @code Content, @code Status}","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"Nicklelodeon"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"Nicklelodeon"},"content":"    public Task build() {","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        return new Task(title, content, status);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"Nicklelodeon"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"Nicklelodeon"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cyiting":18,"Nicklelodeon":47,"SPWwj":42}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"    public static final Index INDEX_FOURTH \u003d Index.fromOneBased(4);","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"    public static final Index INDEX_SEVENTH \u003d Index.fromOneBased(7);","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"cyiting":5,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ID_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        .withPhone(\"94351253\").withId(\"cfa7fa72-e310-4928-a53b-2a5658242f7b\")","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        .withAddress(\"311, Clementi Ave 2, #02-25\").withId(\"5ad1dd04-e8d8-411e-9916-2f89bce26a85\")","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        .withId(\"5ad1dd04-e8d8-3333-9916-2f89bce26b85\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        .withEmail(\"cornelia@example.com\")","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        .withId(\"5ad1dd04-e8d8-411e-9916-2f89bce26b83\")","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        .withEmail(\"werner@example.com\")","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        .withId(\"5ad1dd04-2222-311e-9916-2f89bce26b85\")","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        .withEmail(\"lydia@example.com\")","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        .withId(\"5ad1dd04-e8d8-411e-9916-2f89bce26baa\")","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        .withId(\"5ad1dd04-e8d8-411e-9916-2f89bce26bcc\")","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        .withPhone(\"9482442\")","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        .withId(VALID_ID_AMY).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"        .withId(VALID_ID_BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"SPWwj":21,"-":67}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":" * A utility class containing a list of {@code Tasks} objects to be used in tests.","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"public class TypicalTasks {","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Task SEND_EMAIL_TO_CLIENT \u003d new TaskBuilder().withTitle(\"Send email to client\")","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"            .withContent(\"Email Mr. Chan about the recent updates on Project X.\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Task COMPLETE_SLIDES \u003d new TaskBuilder().withTitle(\"Complete slides\")","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"            .withContent(\"Finish up slides for meeting on 1st March.\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Task STOCK_PANTRY \u003d new TaskBuilder().withTitle(\"Stock pantry\")","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"            .withContent(\"Purchase food for the pantry on level 6.\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Task CHECK_BALANCES \u003d new TaskBuilder().withTitle(\"Check balances\")","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"            .withContent(\"Check all bank statements.\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Task DEPOSIT_CASH \u003d new TaskBuilder().withTitle(\"Deposit cash\")","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"            .withContent(\"Deposit cash from last week at the bank.\").build();","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Task SET_APPOINTMENT \u003d new TaskBuilder().withTitle(\"Set appointment\")","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"            .withContent(\"Set up meeting with Mdm Tay for next Monday\").withStatus(true).build();","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"    public static final Task DATA_ENTRY \u003d new TaskBuilder().withTitle(\"Data entry\")","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"            .withContent(\"Update spreadsheet with client information.\").withStatus(true).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"cyiting"},"content":"    private TypicalTasks() {}","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"cyiting"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"cyiting"},"content":"     * Returns a {@code Repository} with all the typical tasks.","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"cyiting"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"cyiting"},"content":"    public static Repository\u003cTask\u003e getTypicalTaskRepository() {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"cyiting"},"content":"        Repository\u003cTask\u003e tl \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"cyiting"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"cyiting"},"content":"            tl.addItem(task);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"cyiting"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"cyiting"},"content":"        return tl;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"cyiting"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"cyiting"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SEND_EMAIL_TO_CLIENT, COMPLETE_SLIDES, STOCK_PANTRY,","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"cyiting"},"content":"                CHECK_BALANCES, DEPOSIT_CASH, SET_APPOINTMENT, DATA_ENTRY));","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"cyiting"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"cyiting"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"cyiting":40,"Nicklelodeon":7}},{"path":"src/test/java/seedu/address/ui/HelpWindowTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"public class HelpWindowTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"    public void instructionMap_emptyInput_returnEmptyString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"        String testStr \u003d \"\";","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"        String resultStr \u003d \"\";","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"        assertEquals(HelpWindow.instructionMap(testStr), resultStr);","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"    public void instructionMap_addMethods_returnEmptyString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"        String testStr \u003d \"Add methods\";","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"        String resultStr \u003d HelpStrings.ADDMETHODS_HELP;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"        assertEquals(HelpWindow.instructionMap(testStr), resultStr);","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"kayyenl":20}}]
