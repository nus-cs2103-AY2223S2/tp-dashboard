[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"# OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"## Description","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target users are individuals who are responsible for assigning tasks and overseeing the work of a team. The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails. OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organized manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"## Features","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"- Manage tasks for employees","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"- Overview of all tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"- Quick locate of important tasks","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"- Assign tasks to specific employees","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"- Find tasks related to certain employees","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"## Getting Started","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"- Check out our [OfficeConnect Website](https://ay2223s2-cs2103-f10-1.github.io/tp/)","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"- Download our latest release from [OfficeConnect Release Page](https://github.com/AY2223S2-CS2103T-W10-1/tp/releases)","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"## Usage","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"- `addtask n/NAME`","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"- `deletetask INDEX [MORE_INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"- `assign /task INDEX /person INDEX`","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"- `listtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"- `findtask KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"## Contributing","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"This project is a part of the se-education.org initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"## License","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"This project is licensed under the [MIT License](LICENSE).","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"## Acknowledgments","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"Nicklelodeon"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"* This is a sample project for Software Engineering (SE) students.","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"  * As a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"  * As a case study","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"  * It is written in OOP fashion. It provides a reasonably well-written codebase that is bigger (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"  * It comes with a reasonable level of user and developer documentation.","lastModifiedDate":"2023-02-25"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"* It is named `AddressBook Level 3` (`AB3` for short) because it was initially created as part of a series of `AddressBook` projects (`Level 1`, `Level 2`, `Level 3`, etc.).","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"* For detailed documentation of this project, see the [Address Book Product Website](https://se-education.org/addressbook-level3).","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"Nicklelodeon":1,"SPWwj":42,"-":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"### Damith C. Rajapakse","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"damithc\" src\u003d\"images/damithc.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"[[github](https://github.com/damithc)]","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"### KIM JUNGBAE","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"jbkim1999\" src\u003d\"images/jbkim1999.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"[[github](https://github.com/jbkim1999)]","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"* Role: Project Advisor","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"### Lee Kay Yen  ","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"\u003cimg alt\u003d\"kayyenl\" src\u003d\"images/kayyenl.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"[[github](http://github.com/kayyenl)]","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"[[portfolio](team/kayyenl.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"### Wei Wenjie","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"spwwj\" src\u003d\"images/spwwj.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"[[github](http://github.com/spwwj)]","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"[[portfolio](team/spwwj.md)]","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Guo-KeCheng"},"content":"### Guo Kecheng","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"guo-kecheng\" src\u003d\"images/guo-kecheng.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Guo-KeCheng"},"content":"[[github](https://github.com/Guo-KeCheng)]","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"Guo-KeCheng"},"content":"[[portfolio](team/guokecheng.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"Nicklelodeon"},"content":"### Nicholas Cheong","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"nicklelodeon\" src \u003d \"images/nicklelodeon.png\" width \u003d \"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"Nicklelodeon"},"content":"[[github](https://github.com/Nicklelodeon)]","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"Nicklelodeon"},"content":"[[portfolio](team/nicklelodeon.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"Nicklelodeon"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"cyiting"},"content":"### Chu Yi Ting","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"\u003cimg alt\u003d\"cyiting\" src\u003d\"images/cyiting.png\" width\u003d\"200px\"/\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"cyiting"},"content":"[[github](https://github.com/cyiting)]","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"cyiting"},"content":"[[portfolio](team/cyiting.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"cyiting"},"content":"* Role: Developer","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"cyiting"},"content":"* Responsibilities: Model","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"cyiting":9,"Nicklelodeon":4,"SPWwj":16,"-":43,"Guo-KeCheng":3,"kayyenl":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Nicklelodeon"},"content":"* has a need to manage a significant number of subordinates","lastModifiedDate":"2023-02-27"},{"lineNumber":261,"author":{"gitId":"Nicklelodeon"},"content":"* has a need to assign large number of tasks to subordinates","lastModifiedDate":"2023-02-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"Nicklelodeon"},"content":"**Value proposition**: ","lastModifiedDate":"2023-02-27"},{"lineNumber":268,"author":{"gitId":"Nicklelodeon"},"content":"* manage tasks and contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-02-27"},{"lineNumber":269,"author":{"gitId":"Nicklelodeon"},"content":"* allows efficient delegation of tasks to subordinates in an organised and centralised manner","lastModifiedDate":"2023-02-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                                | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Nicklelodeon"},"content":"| -------- |--------------------------------------------|---------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-02-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                      | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | add tasks                                   |                                                                        |","lastModifiedDate":"2023-02-27"},{"lineNumber":280,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | delete tasks                                | remove tasks that I no longer need                                     |","lastModifiedDate":"2023-02-27"},{"lineNumber":281,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | find tasks assigned to specific subordinate | better manage my subordinates workload                                 |","lastModifiedDate":"2023-02-27"},{"lineNumber":282,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | check all ongoing tasks available           | better delegate my tasks                                               |","lastModifiedDate":"2023-02-27"},{"lineNumber":283,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | assign tasks to a subordinate               | keep track of which subordinate is in charge of which task             |","lastModifiedDate":"2023-02-27"},{"lineNumber":284,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | add a subordinate                           |                                                                        |","lastModifiedDate":"2023-02-27"},{"lineNumber":285,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | delete a subordinate                        | remove subordinates that I no longer need                              |","lastModifiedDate":"2023-02-27"},{"lineNumber":286,"author":{"gitId":"Nicklelodeon"},"content":"| `* * *`  | manager                                    | find a subordinate by name                  | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-02-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                        | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":290,"author":{"gitId":"SPWwj"},"content":"## Acceptance Criteria","lastModifiedDate":"2023-02-25"},{"lineNumber":291,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":292,"author":{"gitId":"SPWwj"},"content":"- When I use the \"add\" command followed by a task name, a new task with the given name should be added to my task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":293,"author":{"gitId":"SPWwj"},"content":"- The task name should be displayed in the task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":294,"author":{"gitId":"SPWwj"},"content":"- The task should be saved to persistent storage so that it is not lost when I exit the app.","lastModifiedDate":"2023-02-25"},{"lineNumber":295,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":296,"author":{"gitId":"SPWwj"},"content":"## Example Usage","lastModifiedDate":"2023-02-25"},{"lineNumber":297,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":298,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":299,"author":{"gitId":"SPWwj"},"content":"\u003e addtask n/Finish report ","lastModifiedDate":"2023-02-25"},{"lineNumber":300,"author":{"gitId":"SPWwj"},"content":"- Task added: Finish report","lastModifiedDate":"2023-02-28"},{"lineNumber":301,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":302,"author":{"gitId":"SPWwj"},"content":"\u003e listtask","lastModifiedDate":"2023-02-25"},{"lineNumber":303,"author":{"gitId":"SPWwj"},"content":"1. Finish report","lastModifiedDate":"2023-02-25"},{"lineNumber":304,"author":{"gitId":"SPWwj"},"content":"2. Send email to team","lastModifiedDate":"2023-02-25"},{"lineNumber":305,"author":{"gitId":"SPWwj"},"content":"3. Call client","lastModifiedDate":"2023-02-25"},{"lineNumber":306,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":307,"author":{"gitId":"SPWwj"},"content":"\u003e findtask report","lastModifiedDate":"2023-02-25"},{"lineNumber":308,"author":{"gitId":"SPWwj"},"content":"1. Finish report","lastModifiedDate":"2023-02-25"},{"lineNumber":309,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":310,"author":{"gitId":"SPWwj"},"content":"\u003e deletetask 1","lastModifiedDate":"2023-02-25"},{"lineNumber":311,"author":{"gitId":"SPWwj"},"content":"- Task deleted: Finish report","lastModifiedDate":"2023-02-28"},{"lineNumber":312,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":313,"author":{"gitId":"SPWwj"},"content":"\u003e listtask","lastModifiedDate":"2023-02-25"},{"lineNumber":314,"author":{"gitId":"SPWwj"},"content":"1. Send email to team","lastModifiedDate":"2023-02-25"},{"lineNumber":315,"author":{"gitId":"SPWwj"},"content":"2. Call client","lastModifiedDate":"2023-02-25"},{"lineNumber":316,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":317,"author":{"gitId":"SPWwj"},"content":"\u003e bye","lastModifiedDate":"2023-02-28"},{"lineNumber":318,"author":{"gitId":"SPWwj"},"content":"- Goodbye!","lastModifiedDate":"2023-02-28"},{"lineNumber":319,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":320,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":321,"author":{"gitId":"SPWwj"},"content":"In the example above, the user story is clearly defined at the top, followed by the acceptance criteria for the feature. Below that, we have a series of example usages, shown in a code editor block to provide clarity and context for how the feature would work in practice.","lastModifiedDate":"2023-02-25"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":323,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"cyiting"},"content":"(For all use cases below, the **System** is the `OfficeConnect` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-27"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"cyiting"},"content":"**Use case: Assign a task to a person**","lastModifiedDate":"2023-02-27"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"SPWwj"},"content":"# Main Success Scenario (MSS)","lastModifiedDate":"2023-02-28"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"SPWwj"},"content":"1. User opens OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":334,"author":{"gitId":"SPWwj"},"content":"2. System list persons","lastModifiedDate":"2023-02-28"},{"lineNumber":335,"author":{"gitId":"SPWwj"},"content":"3. User inputs one of the options.","lastModifiedDate":"2023-02-28"},{"lineNumber":336,"author":{"gitId":"SPWwj"},"content":"4. System executes the selected option.","lastModifiedDate":"2023-02-28"},{"lineNumber":337,"author":{"gitId":"SPWwj"},"content":"5. If the inputs option is to add a person or task, the system prompts the user to enter the necessary information.","lastModifiedDate":"2023-02-28"},{"lineNumber":338,"author":{"gitId":"SPWwj"},"content":"6. If the inputs option is to list persons or tasks, the system displays a list of persons or tasks.","lastModifiedDate":"2023-02-28"},{"lineNumber":339,"author":{"gitId":"SPWwj"},"content":"7. If the inputs option is to find a person or task, the system prompts the user to enter a keyword to search for and displays a list of persons or tasks that match the keyword.","lastModifiedDate":"2023-02-28"},{"lineNumber":340,"author":{"gitId":"SPWwj"},"content":"8. If the inputs option is to assign a task, the system prompts the user to select a person and a task from a list of persons and tasks, respectively, and assigns the task to the selected person.","lastModifiedDate":"2023-02-28"},{"lineNumber":341,"author":{"gitId":"SPWwj"},"content":"9. If the inputs option is to delete a person or task, the system prompts the user to select a person or task from a list of persons or tasks, respectively, and deletes the selected person or task.","lastModifiedDate":"2023-02-28"},{"lineNumber":342,"author":{"gitId":"SPWwj"},"content":"10. If the inputs option is to clear the screen, the system clears the screen.","lastModifiedDate":"2023-02-28"},{"lineNumber":343,"author":{"gitId":"SPWwj"},"content":"11. If the inputs option is to quit the application, the system saves the data and exits.","lastModifiedDate":"2023-02-28"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"SPWwj"},"content":"## Extensions","lastModifiedDate":"2023-02-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"SPWwj"},"content":"2a. If the user inputs an invalid option, the system displays an error message and displays the main menu again.","lastModifiedDate":"2023-02-28"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"SPWwj"},"content":"5a. If the user enters invalid information when adding a person or task, the system displays an error message and prompts the user to re-enter the information.","lastModifiedDate":"2023-02-28"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"SPWwj"},"content":"6a. If there are no persons or tasks to list, the system displays a message indicating that there are no persons or tasks to list.","lastModifiedDate":"2023-02-28"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":353,"author":{"gitId":"SPWwj"},"content":"7a. If there are no persons or tasks that match the keyword, the system displays a message indicating that there are no persons or tasks that match the keyword.","lastModifiedDate":"2023-02-28"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":355,"author":{"gitId":"SPWwj"},"content":"8a. If the user inputs an invalid person or task when assigning a task, the system displays an error message and prompts the user to re-select.","lastModifiedDate":"2023-02-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"SPWwj"},"content":"9a. If the user inputs an invalid person or task when deleting a person or task, the system displays an error message and prompts the user to re-select.","lastModifiedDate":"2023-02-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"SPWwj"},"content":"11a. If the system is unable to save the data, the system displays an error message and exits without saving.","lastModifiedDate":"2023-02-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"SPWwj"},"content":"1. Performance: The system shall respond to user input within 2 seconds, even under peak load conditions.","lastModifiedDate":"2023-02-28"},{"lineNumber":364,"author":{"gitId":"SPWwj"},"content":"2. Maintainability: The system shall be designed to allow for easy maintenance and updates, with clear documentation and modular architecture.","lastModifiedDate":"2023-02-28"},{"lineNumber":365,"author":{"gitId":"SPWwj"},"content":"3. Compatibility: The system shall be compatible to operating systems with java 11 runtime (e.g. Windows, MacOS, Linux).","lastModifiedDate":"2023-02-28"},{"lineNumber":366,"author":{"gitId":"SPWwj"},"content":"4. Interoperability: The system shall be able to exchange data with other systems using standard formats and protocols.","lastModifiedDate":"2023-02-28"},{"lineNumber":367,"author":{"gitId":"SPWwj"},"content":"5. Usability: The system shall have a user interface that is intuitive and easy to use, with a learning curve of no more than 2 hours for a new user.","lastModifiedDate":"2023-02-28"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cyiting":2,"Nicklelodeon":14,"SPWwj":58,"-":352}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies.","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates’ workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"1. Download the latest `officeconnect.jar` from [OfficeConnect Release Page](https://github.com/AY2223S2-CS2103T-W10-1/tp/releases).","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar officeconnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"\u003cdiv class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"* Items with `…` after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"  e.g. `[t/TAG]…` can be used as (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"Displays a comprehensive window detailing the outline of executable commands by user. ","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"A ***TreeView*** on the left window lists the hierarchical ordering of commands, with the description of the command on the right in a ***TextArea***.","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"![help interface pic](https://user-images.githubusercontent.com/99934242/221747645-0bbdf6c7-91f3-4adc-b4b7-b6c70c7de540.jpg)","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"### Adding a person: `add`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…`","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"\u003cdiv class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"### Listing all persons : `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"Shows a list of all persons in the OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"Edits an existing person in the OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…`","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"SPWwj"},"content":"Deletes the specified person from the OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"SPWwj"},"content":"* The index **must be a positive integer** 1, 2, 3, …","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"SPWwj"},"content":"Clears all entries from the OfficeConnect.","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"SPWwj"},"content":"OfficeConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":171,"author":{"gitId":"SPWwj"},"content":"OfficeConnect data are saved as a JSON file `[JAR file location]/data/officeconnect.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"SPWwj"},"content":"\u003cdiv class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-02-25"},{"lineNumber":174,"author":{"gitId":"SPWwj"},"content":"If your changes to the data file makes its format invalid, OfficeConnect will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":177,"author":{"gitId":"SPWwj"},"content":"# Command Summary For OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":178,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":179,"author":{"gitId":"SPWwj"},"content":"## Adding a Task: `addtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"SPWwj"},"content":"Format: `addtask n/NAME`","lastModifiedDate":"2023-02-25"},{"lineNumber":181,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"SPWwj"},"content":"Adds a task to OfficeConnect.","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"SPWwj"},"content":"- `add n/Send email to supplier`","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"SPWwj"},"content":"- `add n/Restock shelves`","lastModifiedDate":"2023-02-25"},{"lineNumber":187,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":188,"author":{"gitId":"SPWwj"},"content":"## Deleting a Task: `deletetask`","lastModifiedDate":"2023-02-25"},{"lineNumber":189,"author":{"gitId":"SPWwj"},"content":"Format: `deletetask INDEX [MORE_INDEX]`","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":191,"author":{"gitId":"SPWwj"},"content":"Deletes the task at the specified INDEX.","lastModifiedDate":"2023-02-25"},{"lineNumber":192,"author":{"gitId":"SPWwj"},"content":"The INDEX refers to the INDEX shown in the displayed task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":193,"author":{"gitId":"SPWwj"},"content":"The INDEX must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-02-25"},{"lineNumber":194,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":195,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":196,"author":{"gitId":"SPWwj"},"content":"- `listtasks` followed by `delete 2` deletes the 2nd task in the task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":197,"author":{"gitId":"SPWwj"},"content":"- `findtasks book` followed by `delete 1` deletes the 1st task in the results of the `findtask` command.","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":199,"author":{"gitId":"SPWwj"},"content":"## Finding a Specific Task: `findtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":200,"author":{"gitId":"SPWwj"},"content":"Format: `findtask KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"SPWwj"},"content":"Finds the task based on given keyword.","lastModifiedDate":"2023-02-25"},{"lineNumber":203,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"SPWwj"},"content":"- `findtask complete`","lastModifiedDate":"2023-02-25"},{"lineNumber":206,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":207,"author":{"gitId":"SPWwj"},"content":"## Listing the Tasks: `listtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"SPWwj"},"content":"Format: `listtask`","lastModifiedDate":"2023-02-25"},{"lineNumber":209,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":210,"author":{"gitId":"SPWwj"},"content":"Lists all the tasks in OfficeConnect.","lastModifiedDate":"2023-02-25"},{"lineNumber":211,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":212,"author":{"gitId":"SPWwj"},"content":"## Assigning a Task to a Person: `assign`","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"SPWwj"},"content":"Format: `assign /task INDEX /person INDEX`","lastModifiedDate":"2023-02-25"},{"lineNumber":214,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"SPWwj"},"content":"Assigns the task at specified index to the person at specified index.","lastModifiedDate":"2023-02-25"},{"lineNumber":216,"author":{"gitId":"SPWwj"},"content":"The index refers to the index number shown in the displayed person/task list.","lastModifiedDate":"2023-02-25"},{"lineNumber":217,"author":{"gitId":"SPWwj"},"content":"The index must be a positive integer 1, 2, 3...","lastModifiedDate":"2023-02-25"},{"lineNumber":218,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"SPWwj"},"content":"Examples:","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"SPWwj"},"content":"- `assign /task 2 /person 3` assigns task 2 to person 3.","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":222,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":223,"author":{"gitId":"SPWwj"},"content":"### Archiving data files `[coming in v1.3]`","lastModifiedDate":"2023-02-28"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"SPWwj"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous OfficeConnect home folder.","lastModifiedDate":"2023-02-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"SPWwj"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2023-02-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Clear** | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"SPWwj"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2023-02-28"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SPWwj":76,"-":167,"kayyenl":3}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"title: OfficeConnect","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103-F10-1/tp/actions)","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103-F10-1/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103-F10-1/tp)","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"**OfficeConnect is a task management tool designed specifically for managerial role personnel at companies.** ","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"- The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"- The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"- OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"**Try it out!**","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"* If you are interested in using OfficeConnect, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"* If you are interested about developing OfficeConnect, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"SPWwj":13,"-":13}},{"path":"docs/team/cyiting.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cyiting"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"cyiting"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"cyiting"},"content":"title: Chu Yi Ting\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"cyiting"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"cyiting"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"cyiting"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel ","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"cyiting"},"content":"at companies. The target users are managers who are responsible for assigning tasks and ","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"cyiting"},"content":"overseeing the work of a team.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"cyiting"},"content":"OfficeConnect provides managers a convenient way to manage their subordinates as it gives ","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"cyiting"},"content":"managers an overview of their subordinates contacts and their teams  as well as track tasks ","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"cyiting"},"content":"that the subordinates are responsible for completing.","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"cyiting"},"content":"Through OfficeConnect, managers can also plan deadlines, delegate tasks and automate sending ","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"cyiting"},"content":"mass emails.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"cyiting"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"cyiting"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"cyiting"},"content":"* **New Feature**:","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"cyiting"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dcyiting\u0026tabRepo\u003dAY2223S2-CS2103-F10-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003d\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"cyiting"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"cyiting"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"cyiting"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"cyiting"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"cyiting"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"cyiting":27}},{"path":"docs/team/guokecheng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Guo-KeCheng"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"Guo-KeCheng"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"Guo-KeCheng"},"content":"title: Guo Kecheng\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"Guo-KeCheng"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"Guo-KeCheng"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"Guo-KeCheng"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"Guo-KeCheng"},"content":"users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"Guo-KeCheng"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"Guo-KeCheng"},"content":"among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"Guo-KeCheng"},"content":"tasks like typing and sending emails.","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"Guo-KeCheng"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads,","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"Guo-KeCheng"},"content":"allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning ","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"Guo-KeCheng"},"content":"and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"Guo-KeCheng"},"content":"that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"Guo-KeCheng"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"Guo-KeCheng"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"Guo-KeCheng"},"content":"- **New Feature**:","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"Guo-KeCheng"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"Guo-KeCheng"},"content":"- **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"Guo-KeCheng"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"Guo-KeCheng"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"Guo-KeCheng"},"content":"- **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"Guo-KeCheng"},"content":"- **Tools**:","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"Guo-KeCheng":28}},{"path":"docs/team/kayyenl.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kayyenl"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"kayyenl"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"title: Lee Kay Yen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"kayyenl"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"* **New Feature**: Modified help window, more extensive","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"![image](https://user-images.githubusercontent.com/99934242/221522239-2a64f9dd-ce8d-4fd5-834d-1a2fb513cf32.png)","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"  * What it does: allows the user view help for each individual command that can be entered into OfficeConnect.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"  * Justification: This feature improves the user experience as he/she uses the app, as this extensive help window removes the need to go online and scour through all the documentation pages (which are not written for the user\u0027s use, anyway.) ","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"  * Highlights: This enhancement gives the user a bird\u0027s eye view of the ways a command can be used in a digestable (TreeView, hierarchical like manner) that is intuitive and not stressful on the fingers of a slow typer.","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"* **New Feature**: To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"kayyenl"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"  * To be added.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"kayyenl":39}},{"path":"docs/team/nicklelodeon.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Nicklelodeon"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"Nicklelodeon"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"Nicklelodeon"},"content":"title: Nicholas Cheongs\u0027 Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"Nicklelodeon"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"Nicklelodeon"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"Nicklelodeon"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"Nicklelodeon"},"content":"users are managers who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"Nicklelodeon"},"content":"The product addresses several challenges faced by managers in the current office environment, including but not limited","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"Nicklelodeon"},"content":"to difficulty in coordinating tasks among a large number of subordinates, possible work overload of any single","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Nicklelodeon"},"content":"subordinate within a huge team and hassle of manually typing and sending out emails.","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Nicklelodeon"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads and","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"Nicklelodeon"},"content":"allowing managers to efficiently delegate tasks in an organised and centralised manner. It also removes the manual","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"Nicklelodeon"},"content":"aspect of sending emails, as mass emails can be automated and sent with just a simple command!","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"Nicklelodeon"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Nicklelodeon"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Nicklelodeon"},"content":"- **New Feature**:","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Nicklelodeon"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Nicklelodeon"},"content":"- **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Nicklelodeon"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Nicklelodeon"},"content":"- **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Nicklelodeon"},"content":"- **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Nicklelodeon"},"content":"- **Tools**:","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"Nicklelodeon":27}},{"path":"docs/team/spwwj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"title: Wei Wenjie\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"### Project: OfficeConnect","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"OfficeConnect is a task management tool designed specifically for managerial role personnel at companies. The target users are individuals who are responsible for assigning tasks and overseeing the work of a team.","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"The product addresses several challenges faced by managers in the current office environment, such as work overload among subordinates, difficulties in coordinating tasks with a large number of employees, and time-consuming manual tasks like typing and sending emails.","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"OfficeConnect offers a solution to these problems by providing better visibility into subordinates\u0027 workloads, allowing managers to efficiently delegate tasks in an organised manner. The app also automates the process of planning and communicating with subordinates, making it easier for managers to get things done. Additionally, the app ensures that emails are sent during working hours, so that subordinates will not be disturbed outside of work.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"* **New Feature**: Local Storage for OfficeConnect.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"  * What it does: With this new feature, users can now save OfficeConnect data to a local file, enabling them to easily restore their data from local storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"  * Justification: The addition of Local Storage is a crucial enhancement for OfficeConnect. It provides users with a convenient and reliable way to store their data, which can be easily accessed and restored as needed. This feature ensures that users have complete control over their data, helping to improve productivity and streamline workflows.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"  * Highlights: The addition of Local Storage is a significant update that impacts the existing data structure of OfficeConnect. This feature is a fundamental building block for all other OfficeConnect features, making it a key component of the software\u0027s architecture. With Local Storage, OfficeConnect provides a more comprehensive and user-friendly solution for managing data, enabling users to work more efficiently and effectively.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"* **Project management**:","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"  * User Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"* **Community**:","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"* **Tools**:","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"  * To be added.","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"SPWwj":40}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"SPWwj"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/officeconnect.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-02-28"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"SPWwj":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.RepositoryModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"import seedu.address.storage.JsonPersonTaskStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"import seedu.address.storage.JsonTaskStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"import seedu.address.storage.RepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    protected OfficeConnectModel officeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        RepositoryStorage\u003cTask\u003e taskRepositoryStorage \u003d new JsonTaskStorage(userPrefs.getTaskFilePath());","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        RepositoryStorage\u003cPersonTask\u003e personTaskStorage \u003d new JsonPersonTaskStorage(userPrefs","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            .getPersonTaskPath());","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, taskRepositoryStorage, personTaskStorage);","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        officeConnectModel \u003d initOfficeConnectModel(storage);","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        logic \u003d new LogicManager(model, storage, officeConnectModel);","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"     * Returns a {@code OfficeConnectModel} with the data from {@code storage}\u0027s repository and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"     * The data from the sample repository will be used instead if {@code storage}\u0027s repository is not found,","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"     * or an empty repository will be used instead if errors occur when reading {@code storage}\u0027s repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"    private OfficeConnectModel initOfficeConnectModel(Storage storage) {","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e taskReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cReadOnlyRepository\u003cPersonTask\u003e\u003e personTaskReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"        ReadOnlyRepository\u003cTask\u003e initialTaskData;","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        ReadOnlyRepository\u003cPersonTask\u003e initialPersonTaskData;","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"            taskReadOnlyRepository \u003d storage.readTaskBook();","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"            personTaskReadOnlyRepository \u003d storage.readPersonTaskBook();","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"            if (taskReadOnlyRepository.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"            initialTaskData \u003d taskReadOnlyRepository.orElseGet(SampleDataUtil::getSampleTasksRepo);","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"            initialPersonTaskData \u003d personTaskReadOnlyRepository.orElseGet(SampleDataUtil::getSamplePersonTasksRepo);","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"            initialTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"            initialPersonTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"            initialTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"            initialPersonTaskData \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cTask\u003e taskRepositoryModelManager \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(initialTaskData);","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003cPersonTask\u003e personTaskRepositoryModelManager \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"            new RepositoryModelManager\u003c\u003e(initialPersonTaskData);","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"        return new OfficeConnectModel(taskRepositoryModelManager, personTaskRepositoryModelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":135,"author":{"gitId":"SPWwj"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":57,"-":180}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.OfficeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private final OfficeConnectModel officeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        this.officeConnectModel \u003d new OfficeConnectModel();","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public LogicManager(Model model, Storage storage, OfficeConnectModel officeConnectModel) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        this.officeConnectModel \u003d officeConnectModel;","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"            storage.saveTaskBook(officeConnectModel.getTaskModelManager().getReadOnlyRepository());","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"            storage.savePersonTaskBook(officeConnectModel.getPersonTaskModelManager().getReadOnlyRepository());","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SPWwj":17,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.model.ModelManager.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"SPWwj":1,"-":225}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.model.ModelManager.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SPWwj":1,"-":23}},{"path":"src/main/java/seedu/address/model/OfficeConnectModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" * The API of the OfficeConnectModel component.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"public class OfficeConnectModel {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryModelManager\u003cTask\u003e taskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryModelManager\u003cPersonTask\u003e personTaskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"     * Initializes a OfficeConnectModel empty data.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    public OfficeConnectModel() {","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        taskModelManager \u003d new RepositoryModelManager\u003c\u003e(new Repository\u003cTask\u003e());","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"        personTaskModelManager \u003d new RepositoryModelManager\u003c\u003e(new Repository\u003cPersonTask\u003e());","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * Initializes a OfficeConnectModel given data.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public OfficeConnectModel(RepositoryModelManager\u003cTask\u003e taskModelManager,","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"                              RepositoryModelManager\u003cPersonTask\u003e personTaskModelManager) {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        this.taskModelManager \u003d taskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        this.personTaskModelManager \u003d personTaskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    public RepositoryModelManager\u003cTask\u003e getTaskModelManager() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        return taskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    public RepositoryModelManager\u003cPersonTask\u003e getPersonTaskModelManager() {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        return personTaskModelManager;","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":36}},{"path":"src/main/java/seedu/address/model/ReadOnlyRepository.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Unmodifiable view of a repository","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"public interface ReadOnlyRepository\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     * Returns an unmodifiable view of the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    ObservableList\u003cT\u003e getReadOnlyRepository();","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    Path getTaskFilePath();","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    Path getPersonTaskPath();","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"SPWwj":2,"-":16}},{"path":"src/main/java/seedu/address/model/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * The relationship logic for OfficeConnect Model","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public interface Relationship\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"    boolean isSame(T obj);","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":8}},{"path":"src/main/java/seedu/address/model/Repository.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":" * Wraps all data at the repository level","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"public class Repository\u003cT extends Relationship\u003cT\u003e\u003e implements ReadOnlyRepository\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    private final UniqueItemList\u003cT\u003e items;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     *   among constructors.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        items \u003d new UniqueItemList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public Repository() {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     * Creates an Repository using the data in the {@code toBeCopied}","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    private Repository(ReadOnlyRepository\u003cT\u003e toBeCopied) {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        this();","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public static \u003cS extends Relationship\u003cS\u003e\u003e Repository\u003cS\u003e of(ReadOnlyRepository\u003cS\u003e toBeCopied) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        return new Repository\u003c\u003e(toBeCopied);","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     * Replaces the contents of the item list with {@code items}.","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     * {@code items} must not contain duplicate items.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.items.setItems(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"     * Resets the existing data of this {@code items} with {@code newData}.","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    public void resetData(ReadOnlyRepository\u003cT\u003e newData) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        setItems(newData.getReadOnlyRepository());","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    //// task-level operations","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a item with the same identity as {@code item} exists in the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    public boolean hasItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        return items.contains(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"     * Adds an item to the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"     * The item must not already exist in the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"    public void addItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        items.add(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"    // /**","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"    //  * Replaces the given item {@code target} in the list with {@code editedItem}.","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    //  * {@code target} must exist in the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"    //  * The item identity of {@code editedItem} must not be the same as another existing task in the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"    //  */","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"    // public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"    //     requireNonNull(editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    //     items.setItem(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"    // /**","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"    //  * Removes {@code key} from this {@code Repository}.","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"    //  * {@code key} must exist in the repository.","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"    //  */","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    // public void removeItem(T key) {","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"    //     items.remove(key);","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"    //// util methods","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"        return items.asUnmodifiableObservableList().size() + \" tasks\";","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        // TODO: refine later","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"    public ObservableList\u003cT\u003e getReadOnlyRepository() {","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"        return items.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Repository\u003c?\u003e // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 items.equals(((Repository\u003c?\u003e) other).items));","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"        return items.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":121}},{"path":"src/main/java/seedu/address/model/RepositoryModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Represents the in-memory model of the repository data.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"public class RepositoryModelManager\u003cT extends Relationship\u003cT\u003e\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(RepositoryModelManager.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    private final Repository\u003cT\u003e repo;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final FilteredList\u003cT\u003e itemFilteredList;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * Initializes a RepositoryModelManager with the given taskBook","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public RepositoryModelManager(ReadOnlyRepository\u003cT\u003e repo) {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(repo);","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Initializing with repo book: \" + repo);","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        this.repo \u003d Repository.of(repo);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        itemFilteredList \u003d new FilteredList\u003c\u003e(this.repo.getReadOnlyRepository());","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    public void setRepository(Repository\u003cT\u003e repo) {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        this.repo.resetData(repo);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    public ReadOnlyRepository\u003cT\u003e getReadOnlyRepository() {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        return repo;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    // public boolean hasItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    //     requireNonNull(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    //     return repo.hasItem(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    // public void deleteItem(T target) {","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    //     repo.removeItem(target);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    // public void addItem(T item) {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    //     repo.addItem(item);","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    //     showAllItems();","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    // public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    //     requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    //     repo.setItem(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    // public ObservableList\u003cT\u003e getFilteredItemList() {","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    //     return itemFilteredList;","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"    // public void updateFilteredItemList(Predicate\u003cT\u003e predicate) {","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    //     requireNonNull(predicate);","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    //     itemFilteredList.setPredicate(predicate);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    // public void showAllItems() {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"    //     updateFilteredItemList(x -\u003e true);","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"        // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        if (!(obj instanceof RepositoryModelManager\u003c?\u003e)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"        RepositoryModelManager\u003c?\u003e other \u003d (RepositoryModelManager\u003c?\u003e) obj;","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        return repo.equals(other.repo)","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 itemFilteredList.equals(other.itemFilteredList);","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":93}},{"path":"src/main/java/seedu/address/model/UniqueItemList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":" * A list of item that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"public class UniqueItemList\u003cT extends Relationship\u003cT\u003e\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"        FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        return internalList.stream().anyMatch(toCheck::isSame);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    // /**","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    //  * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    //  * {@code target} must exist in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    //  * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    //  */","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    // public void setItem(T target, T editedItem) {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    //     requireAllNonNull(target, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    //     int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    //     if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    //         throw new TaskNotFoundException();","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    //     }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    //     if (!target.isSame(editedItem) \u0026\u0026 contains(editedItem)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    //         throw new DuplicateTaskException();","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    //     }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    //","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    //     internalList.set(index, editedItem);","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    // }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * The task must exist in the list.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"    public void setItems(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        if (!tasksAreUnique(items)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        internalList.setAll(items);","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof UniqueItemList\u003c?\u003e // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 internalList.equals(((UniqueItemList\u003c?\u003e) other).internalList));","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"     * Returns true if {@code items} contains only unique items.","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"    private boolean tasksAreUnique(List\u003cT\u003e items) {","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"        for (int i \u003d 0; i \u003c items.size() - 1; i++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"            for (int j \u003d i + 1; j \u003c items.size(); j++) {","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"                if (items.get(i).isSame(items.get(j))) {","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"                    return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"                }","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"        return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":125}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"officeconnect.json\");","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private final Path taskFilePath \u003d Paths.get(\"data\", \"tasks.json\");","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private final Path personTaskPath \u003d Paths.get(\"data\", \"person_task_mapping.json\");","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    public Path getTaskFilePath() {","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        return taskFilePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    public Path getPersonTaskPath() {","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        return personTaskPath;","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 taskFilePath.equals(o.taskFilePath)","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 personTaskPath.equals(o.personTaskPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(guiSettings, addressBookFilePath,","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"            taskFilePath, personTaskPath);","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        return \"Gui Settings : \" + guiSettings","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"            + \"\\nLocal data file location : \" + addressBookFilePath","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"            + \"\\nLocal data task file location : \" + taskFilePath","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"            + \"\\nLocal data taskPerson mapping file location : \" + personTaskPath;","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":24,"-":79}},{"path":"src/main/java/seedu/address/model/mapping/PersonTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.mapping;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Relationship;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * A many-to-many relationship mapping for task and person","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" * Take note that both personId and taskId must refer to a","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":" * valid Object.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":" * TODO BUT THIS CODE HAS NOT IMPLEMENT THE LOGIC TO VERIFY THE TIGHT BOUND OF VALID RELATIONSHIP","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"public class PersonTask implements Relationship\u003cPersonTask\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final Id personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private final Id taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public PersonTask(Id personId, Id taskId) {","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(personId, taskId);","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    public Id getPersonId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        return personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    public Id getTaskId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        return taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        if (!(other instanceof PersonTask)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        PersonTask otherPersonTask \u003d (PersonTask) other;","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        return otherPersonTask.getPersonId().equals(getPersonId())","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherPersonTask.getTaskId().equals(getTaskId());","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(personId, taskId);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    public boolean isSame(PersonTask obj) {","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        return equals(obj);","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":61}},{"path":"src/main/java/seedu/address/model/mapping/exceptions/DuplicatePersonTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.mapping.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * Signals that the operation will result in duplicate PersonTasks (PersonTasks","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" * are considered duplicates if they have the same identity).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"public class DuplicatePersonTaskException extends RuntimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    public DuplicatePersonTaskException() {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"        super(\"Operation would result in duplicate personTasks\");","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":11}},{"path":"src/main/java/seedu/address/model/mapping/exceptions/PersonTaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.mapping.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":" * Signals that the operation is unable to find the specified personTask.","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"public class PersonTaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":5}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final Id id;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d new Id();","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     * ID must be specific when loading from local storage","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Id id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    public Id getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SPWwj":20,"-":123}},{"path":"src/main/java/seedu/address/model/shared/Id.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.shared;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.UUID;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Represents an ID to identify the object","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"public class Id {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     * Must be valid UUID representation","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$\";","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        \"UUIDs format is in 5 groups of hexadecimal digits, \"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"            + \"separated by hyphens. The length of each group is: 8-4-4-4-12\";","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    private final UUID value;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code Id}.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     **/","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public Id() {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d UUID.randomUUID();","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    public Id(String id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d UUID.fromString(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    public UUID getValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid id.","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    public static boolean isInValidId(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"        return !test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Id) // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value.equals(((Id) other).value); // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":52}},{"path":"src/main/java/seedu/address/model/task/Content.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Represents a Task\u0027s content in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidContent(String)}","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"public class Content {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Content can take any values, and it should not be blank\";","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"     * The first character of the content must not be a whitespace,","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final String value;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     * Constructs an {@code Content}.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     * @param value A valid content.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public Content(String value) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        checkArgument(isValidContent(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    public String getValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid content.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public static boolean isValidContent(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Content // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value.equals(((Content) other).value)); // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":60}},{"path":"src/main/java/seedu/address/model/task/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" * Represents a Task\u0027s status in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Guarantees: immutable;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"public class Status {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"     * Must be valid boolean representation","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"(?i)(true|false)\";","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"        \"Status is true or false value\";","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final boolean value;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     * @param value status of a task;","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    public Status(boolean value) {","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    public boolean isValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid status.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        return value ? \"Done\" : \"Undone\";","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value \u003d\u003d ((Status) other).value); // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        return Objects.hashCode(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":55}},{"path":"src/main/java/seedu/address/model/task/Subject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":" * Represents a Task\u0027s subject in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidSubject(String)}","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"public class Subject {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"        \"Subjects should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"    /*","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private final String value;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code Subject}.","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     * @param value A valid subject.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    public Subject(String value) {","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        checkArgument(isValidSubject(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    public String getValue() {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     * Returns true if a given string is a valid subject.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    public static boolean isValidSubject(String test) {","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        return value;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            || (other instanceof Subject // instanceof handles nulls","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 value.equals(((Subject) other).value)); // state check","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":62}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Relationship;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"public class Task implements Relationship\u003cTask\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    // Identity fields","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    private final Id id;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    // Data fields","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    private final Subject subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    private final Content content;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    private final Status status;","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    public Task(Subject subject, Content content, Status status) {","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(subject, content, status);","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d new Id();","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * ID must be specific when loading from local storage","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public Task(Subject subject, Content content, Status status, Id id) {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        requireAllNonNull(subject, content, status);","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    public Id getId() {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        return id;","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"    public Subject getSubject() {","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        return subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    public Content getContent() {","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        return content;","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        return status;","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * Returns true if both tasks have the same subject.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    public boolean isSame(Task otherTask) {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherTask.getSubject().equals(getSubject());","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"            return true;","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"            return false;","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"        return otherTask.getSubject().equals(getSubject())","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherTask.getContent().equals(getContent())","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"            \u0026\u0026 otherTask.getStatus().equals(getStatus());","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        return Objects.hash(id, subject, content, status);","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    public String toString() {","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        return getSubject()","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"            + \"; Status: \"","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"            + getStatus()","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"            + \"; Content: \"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"            + getContent();","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":110}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * Signals that the operation will result in duplicate tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" * identity).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":11}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":7}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"                getTagSet(\"friends\"), new Id(\"f26605e3-613d-4d6b-946c-43e496f07f76\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Id(\"c916334d-0b63-4dbd-9372-e553116b3892\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        return new Task[] {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            new Task(new Subject(\"Task 1\"), new Content(\"Content 1\"), new Status(true),","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"                new Id(\"c916334d-1111-4dbd-9372-e553116b3892\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            new Task(new Subject(\"Task 2\"), new Content(\"Content 2\"), new Status(false),","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"                new Id(\"a716334d-0000-4dbd-9372-e553116b3893\"))","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        };","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    public static PersonTask[] getSamplePersonTask() {","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"        return new PersonTask[] {","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"            new PersonTask(new Id(\"f26605e3-613d-4d6b-946c-43e496f07f76\"),","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"                new Id(\"c916334d-1111-4dbd-9372-e553116b3892\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"            new PersonTask(new Id(\"c916334d-0b63-4dbd-9372-e553116b3892\"),","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"                new Id(\"a716334d-0000-4dbd-9372-e553116b3893\")),","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        };","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    public static ReadOnlyRepository\u003cTask\u003e getSampleTasksRepo() {","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cTask\u003e sampleTasksRepo \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"            sampleTasksRepo.addItem(sampleTask);","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        return sampleTasksRepo;","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    public static ReadOnlyRepository\u003cPersonTask\u003e getSamplePersonTasksRepo() {","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cPersonTask\u003e samplePersonTasksRepo \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        for (PersonTask personTask : getSamplePersonTask()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"            samplePersonTasksRepo.addItem(personTask);","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        return samplePersonTasksRepo;","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"SPWwj":45,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"id\")","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            @JsonProperty(\"id\") String id,","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"        id \u003d source.getId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SPWwj":12,"-":109}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPersonTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Jackson-friendly version of {@link PersonTask}.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"public class JsonAdaptedPersonTask {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"person_id\")","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    private final String personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"task_id\")","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"    private final String taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonAdaptedPersonTask} with the given {@code personTask}.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedPersonTask(String personId, String taskId) {","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        this.personId \u003d personId;","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"        this.taskId \u003d taskId;","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code PersonTask} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedPersonTask(PersonTask source) {","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        personId \u003d source.getPersonId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        taskId \u003d source.getTaskId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code PersonTask} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted personTask.","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    public PersonTask toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"        if (Id.isInValidId(personId)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        if (Id.isInValidId(taskId)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        Id modePersonId \u003d new Id(personId);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        Id modeTaskId \u003d new Id(taskId);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        return new PersonTask(modePersonId, modeTaskId);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":59}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.shared.Id;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Content;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Status;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"id\")","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private final String id;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"subject\")","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private final String subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"content\")","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    private final String content;","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"status\")","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    private final String status;","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given person details.","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedTask(String id, String subject, String content, String status) {","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"        this.id \u003d id;","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        this.content \u003d content;","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        subject \u003d source.getSubject().getValue();","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        content \u003d source.getContent().getValue();","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        status \u003d String.valueOf(source.getStatus().isValue());","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        id \u003d source.getId().getValue().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"        if (id \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Id.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"        if (Id.isInValidId(id)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Id.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        if (subject \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        if (!Subject.isValidSubject(subject)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"        if (content \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"SPWwj"},"content":"        if (!Content.isValidContent(content)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Content.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"SPWwj"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"SPWwj"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"SPWwj"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"SPWwj"},"content":"        final Id modeId \u003d new Id(id);","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"SPWwj"},"content":"        final Subject modelSubject \u003d new Subject(subject);","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"SPWwj"},"content":"        final Content modelContent \u003d new Content(content);","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"        final Status modelStatus \u003d new Status(Boolean.parseBoolean(status));","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"SPWwj"},"content":"        return new Task(modelSubject, modelContent, modelStatus, modeId);","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":100}},{"path":"src/main/java/seedu/address/storage/JsonPersonTaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":" * A class to access PersonTaskBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"public class JsonPersonTaskStorage implements RepositoryStorage\u003cPersonTask\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPersonTaskStorage.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    public JsonPersonTaskStorage(Path filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cPersonTask\u003e\u003e readRepository() throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        return readRepository(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #readRepository()}.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cPersonTask\u003e\u003e readRepository(Path filePath) throws","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"            DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cJsonSerializablePersonTaskBook\u003e jsonPersonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"            filePath, JsonSerializablePersonTaskBook.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        if (jsonPersonTaskBook.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            return Optional.of(jsonPersonTaskBook.get().toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cPersonTask\u003e repository) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"        saveRepository(repository, filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #saveRepository(ReadOnlyRepository)}.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cPersonTask\u003e repository, Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(repository);","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePersonTaskBook(repository), filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":78}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePersonTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":" * An Immutable person_task_book that is serializable to JSON format.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"@JsonRootName(value \u003d \"person_task_book\")","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"class JsonSerializablePersonTaskBook {","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"PersonTask list contains duplicate personTask(s).\";","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"person_task\")","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private final List\u003cJsonAdaptedPersonTask\u003e personTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonSerializablePersonTaskBook} with the given tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializablePersonTaskBook(List\u003cJsonAdaptedPersonTask\u003e personTasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"        this.personTasks.addAll(personTasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code ReadOnlyRepository} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePersonTaskBook}.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializablePersonTaskBook(ReadOnlyRepository\u003cPersonTask\u003e source) {","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"        personTasks.addAll(source.getReadOnlyRepository().stream()","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"            .map(JsonAdaptedPersonTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     * Converts this personTask book into the model\u0027s {@code PersonTaskBook} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    public Repository\u003cPersonTask\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cPersonTask\u003e personTaskBook \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        for (JsonAdaptedPersonTask jsonAdaptedPersonTask : personTasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            PersonTask personTask \u003d jsonAdaptedPersonTask.toModelType();","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            if (personTaskBook.hasItem(personTask)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"            personTaskBook.addItem(personTask);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        return personTaskBook;","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":62}},{"path":"src/main/java/seedu/address/storage/JsonSerializableTaskBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.util.List;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.Repository;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":" * An Immutable task_book that is serializable to JSON format.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"@JsonRootName(value \u003d \"task_book\")","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"class JsonSerializableTaskBook {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    public static final String MESSAGE_DUPLICATE \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    @JsonProperty(\"tasks\")","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     * Constructs a {@code JsonSerializableTaskBook} with the given tasks.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializableTaskBook(List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * Converts a given {@code ReadOnlyRepository} into this class for Jackson use.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableTaskBook}.","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    public JsonSerializableTaskBook(ReadOnlyRepository\u003cTask\u003e source) {","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"        tasks.addAll(source.getReadOnlyRepository().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"     * Converts this task book into the model\u0027s {@code TaskBook} object.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"    public Repository\u003cTask\u003e toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"        Repository\u003cTask\u003e taskBook \u003d new Repository\u003c\u003e();","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            if (taskBook.hasItem(task)) {","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE);","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"            }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"            taskBook.addItem(task);","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"        return taskBook;","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":62}},{"path":"src/main/java/seedu/address/storage/JsonTaskStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":" * A class to access Repository data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"public class JsonTaskStorage implements RepositoryStorage\u003cTask\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonTaskStorage.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    public JsonTaskStorage(Path filePath) {","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readRepository() throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"        return readRepository(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #readRepository()}.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readRepository(Path filePath)","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"            throws DataConversionException {","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        Optional\u003cJsonSerializableTaskBook\u003e jsonTaskBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"            filePath, JsonSerializableTaskBook.class);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        if (jsonTaskBook.isEmpty()) {","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"SPWwj"},"content":"        try {","lastModifiedDate":"2023-02-23"},{"lineNumber":51,"author":{"gitId":"SPWwj"},"content":"            return Optional.of(jsonTaskBook.get().toModelType());","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"SPWwj"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"SPWwj"},"content":"        }","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cTask\u003e repository) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"SPWwj"},"content":"        saveRepository(repository, filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"SPWwj"},"content":"     * Similar to {@link #saveRepository(ReadOnlyRepository)}.","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"SPWwj"},"content":"     *","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"SPWwj"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"    public void saveRepository(ReadOnlyRepository\u003cTask\u003e repository, Path filePath) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(repository);","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"SPWwj"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"SPWwj"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"SPWwj"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableTaskBook(repository), filePath);","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":76}},{"path":"src/main/java/seedu/address/storage/RepositoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SPWwj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"SPWwj"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"SPWwj"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"SPWwj"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":" * Represents a general storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"public interface RepositoryStorage\u003cT\u003e {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"SPWwj"},"content":"     * Returns Repository data as a {@link ReadOnlyRepository}.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"SPWwj"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"SPWwj"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"SPWwj"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cT\u003e\u003e readRepository() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cT\u003e\u003e readRepository(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"SPWwj"},"content":"     * Saves the given {@link ReadOnlyRepository} to the storage.","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"SPWwj"},"content":"     * @param repository cannot be null.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"SPWwj"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"SPWwj"},"content":"    void saveRepository(ReadOnlyRepository\u003cT\u003e repository) throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"     * @see #saveRepository(ReadOnlyRepository)","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    void saveRepository(ReadOnlyRepository\u003cT\u003e repository, Path filePath) throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"SPWwj":39}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    void saveTaskBook(ReadOnlyRepository\u003cTask\u003e taskBook) throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    Optional\u003cReadOnlyRepository\u003cPersonTask\u003e\u003e readPersonTaskBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    void savePersonTaskBook(ReadOnlyRepository\u003cPersonTask\u003e personTaskBook) throws IOException;","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"SPWwj":11,"-":32}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.ReadOnlyRepository;","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.mapping.PersonTask;","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"SPWwj"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"SPWwj"},"content":"    private final AddressBookStorage addressBookStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"SPWwj"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryStorage\u003cTask\u003e taskRepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"SPWwj"},"content":"    private final RepositoryStorage\u003cPersonTask\u003e personTaskRepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"SPWwj"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"SPWwj"},"content":"        taskRepositoryStorage \u003d new JsonTaskStorage(userPrefs.getTaskFilePath());","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"SPWwj"},"content":"        personTaskRepositoryStorage \u003d new JsonPersonTaskStorage(userPrefs.getPersonTaskPath());","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"SPWwj"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"SPWwj"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"SPWwj"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"SPWwj"},"content":"        RepositoryStorage\u003cTask\u003e taskRepositoryStorage, RepositoryStorage\u003cPersonTask\u003e personTaskRepositoryStorage) {","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"SPWwj"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"        this.taskRepositoryStorage \u003d taskRepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"SPWwj"},"content":"        this.personTaskRepositoryStorage \u003d personTaskRepositoryStorage;","lastModifiedDate":"2023-02-23"},{"lineNumber":49,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cTask\u003e\u003e readTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to read data from task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"SPWwj"},"content":"        return taskRepositoryStorage.readRepository();","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"SPWwj"},"content":"    public void saveTaskBook(ReadOnlyRepository\u003cTask\u003e taskBook) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to save data to task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"        taskRepositoryStorage.saveRepository(taskBook);","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"SPWwj"},"content":"    public Optional\u003cReadOnlyRepository\u003cPersonTask\u003e\u003e readPersonTaskBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to read data to person_task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"        return personTaskRepositoryStorage.readRepository();","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"SPWwj"},"content":"    @Override","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"SPWwj"},"content":"    public void savePersonTaskBook(ReadOnlyRepository\u003cPersonTask\u003e personTaskBook) throws IOException {","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"SPWwj"},"content":"        logger.fine(\"Attempting to save data to person_task file\");","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"SPWwj"},"content":"        personTaskRepositoryStorage.saveRepository(personTaskBook);","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"SPWwj"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SPWwj":48,"-":76}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"kayyenl"},"content":"import java.net.URL;","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"kayyenl"},"content":"import java.util.ResourceBundle;","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"kayyenl"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"import javafx.fxml.Initializable;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TreeItem;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"import javafx.scene.control.TreeView;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"kayyenl"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e implements Initializable {","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    public static final String USERGUIDE_URL \u003d \"\\nhttps://ay2223s2-cs2103-f10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"kayyenl"},"content":"    public static final String HELP_MESSAGE \u003d \"For more help, Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"    private static final String ADDMETHODS_HELP \u003d \"Nested within addmethods are the methods that you \"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"            + \"can use for adding tasks, and people.\";","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"    private static final String ADDPERSON_HELP \u003d \"What it does: Adds a person to OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"kayyenl"},"content":"            + \"Format: addperson n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…\";","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"kayyenl"},"content":"    private static final String ADDTASK_HELP \u003d \"What it does: Adds a task to OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"kayyenl"},"content":"            + \"Format: addtask n/NAME\";","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"kayyenl"},"content":"    private static final String DELETEMETHODS_HELP \u003d \"Nested within deletemethods are the methods that you \"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"kayyenl"},"content":"            + \"can use for deleting tasks, and people.\";","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"    private static final String DELETEPERSON_HELP \u003d \"What it does: Deletes the person at the specified ID.\\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"            + \"The index refers to the INDEX shown in the displayed person list.\"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"            + \"The INDEX must be a positive integer (eg. 1, 2, 3...) \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"kayyenl"},"content":"            + \"Format: deleteperson INDEX\";","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"    private static final String DELETETASK_HELP \u003d \"What it does: Deletes the task at the specified INDEX.\\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"            + \"The index refers to the INDEX shown in the displayed task list\"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"kayyenl"},"content":"            + \"The INDEX must be a positive integer (eg. 1, 2, 3...) \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"kayyenl"},"content":"            + \"Format: deletetask INDEX\";","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"kayyenl"},"content":"    private static final String LISTMETHODS_HELP \u003d \"Nested within are the commands related\"","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"kayyenl"},"content":"            + \" to listing out persons, and tasks.\";","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"kayyenl"},"content":"    private static final String LISTPERSON_HELP \u003d \"What it does: Lists all persons in OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"            + \"Format: listpersons\";","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"    private static final String LISTTASK_HELP \u003d \"What it does: Lists all the tasks in OfficeConnect. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"            + \"Format: listtask\";","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"    private static final String FINDMETHODS_HELP \u003d \"Nested within are the commands related to\"","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"            + \" finding persons, and tasks.\";","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"    private static final String FINDTASK_HELP \u003d \"What it does: Finds the task based on given keyword. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"            + \"Format: findtask KEYWORD\";","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"    private static final String FINDPERSON_HELP \u003d \"What it does: Returns a person whose\"","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"            + \" name matches the input keyword. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"            + \"The search is case-sensitive, and partial inputs are also accepted. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"            + \"Format: findperson KEYWORD\";","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"    private static final String ASSIGNMETHODS_HELP \u003d \"Nested within are the commands\"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"            + \" related to the assigning of tasks,\"","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"            + \" to a person.\";","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"    private static final String ASSIGN_HELP \u003d \"What it does: Assigns the task at\"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"            + \" specified index to person at specified\"","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"            + \"index. The index refers to the index number shown in the displayed persons/task list. \\n\\n\"","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"            + \"Format: assign /task INDEX /person INDEX\";","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"    private TreeView\u003cString\u003e treeView;","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"    private TextArea methodDescription;","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"    public HelpWindow() {","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"        this(new Stage());","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"        methodDescription.setWrapText(true);","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"        treeView","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"                .getSelectionModel()","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"                .selectedItemProperty()","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"                .addListener(new ChangeListener\u003cTreeItem\u003cString\u003e\u003e() {","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"                    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"                    public void changed(ObservableValue\u003c? extends TreeItem\u003cString\u003e\u003e observable,","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"                                        TreeItem\u003cString\u003e oldValue, TreeItem\u003cString\u003e newValue) {","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"                        TreeItem\u003cString\u003e selectedTreeItem \u003d (TreeItem\u003cString\u003e) newValue;","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"                        methodDescription.setText(instructionMap(selectedTreeItem.getValue()));","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"                    }","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"                });","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"kayyenl"},"content":"     * Generates a String of information based on which TreeItem was clicked in the help interface.","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"kayyenl"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"kayyenl"},"content":"     * @param treeItemValue from the TreeItem\u0027s getValue(), we will process the String and return help text.","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"kayyenl"},"content":"    public String instructionMap(String treeItemValue) {","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"kayyenl"},"content":"        switch (treeItemValue) {","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"kayyenl"},"content":"        case \"Add methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"kayyenl"},"content":"            return ADDMETHODS_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"kayyenl"},"content":"        case \"addperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"kayyenl"},"content":"            return ADDPERSON_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"kayyenl"},"content":"        case \"addtask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"kayyenl"},"content":"            return ADDTASK_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"kayyenl"},"content":"        case \"Delete methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"kayyenl"},"content":"            return DELETEMETHODS_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":126,"author":{"gitId":"kayyenl"},"content":"        case \"deleteperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":127,"author":{"gitId":"kayyenl"},"content":"            return DELETEPERSON_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"kayyenl"},"content":"        case \"deletetask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"kayyenl"},"content":"            return DELETETASK_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"kayyenl"},"content":"        case \"List methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"kayyenl"},"content":"            return LISTMETHODS_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"kayyenl"},"content":"        case \"listperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"kayyenl"},"content":"            return LISTPERSON_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"kayyenl"},"content":"        case \"listtask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"kayyenl"},"content":"            return LISTTASK_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"kayyenl"},"content":"        case \"Find methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"kayyenl"},"content":"            return FINDMETHODS_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"kayyenl"},"content":"        case \"findperson\":","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"kayyenl"},"content":"            return FINDPERSON_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"kayyenl"},"content":"        case \"findtask\":","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"kayyenl"},"content":"            return FINDTASK_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"kayyenl"},"content":"        case \"Assign methods\":","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"kayyenl"},"content":"            return ASSIGNMETHODS_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"kayyenl"},"content":"        case \"assign\":","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"kayyenl"},"content":"            return ASSIGN_HELP;","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"kayyenl"},"content":"        default:","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"kayyenl"},"content":"            return \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"kayyenl"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"kayyenl"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"kayyenl"},"content":"    @Override","lastModifiedDate":"2023-02-25"},{"lineNumber":152,"author":{"gitId":"kayyenl"},"content":"    public void initialize(URL location, ResourceBundle resources) {","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":96,"kayyenl":114}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"#treeView {","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"    -fx-border-width: 8px;","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"kayyenl"},"content":"    -fx-border-radius: 6 6 6 6;","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"    -fx-background-radius: 14 14 14 14;","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"kayyenl"},"content":"    -fx-border-color: dimgray;","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"kayyenl"},"content":"#methodDescription {","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"kayyenl"},"content":"    -fx-border-width: 4px;","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"    -fx-border-radius: 6 6 6 6;","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"kayyenl"},"content":"    -fx-background-radius: 14 14 14 14;","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"kayyenl"},"content":"    -fx-border-color: dimgray;","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"kayyenl"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"kayyenl"},"content":"    -fx-word-wrap: break-word;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":26,"author":{"gitId":"kayyenl"},"content":"    -fx-background-color: #add8e6;","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"-":20,"kayyenl":15}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.control.TreeItem?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.control.TreeView?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":12,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":14,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"kayyenl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"kayyenl"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"kayyenl"},"content":"      \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"302.0\" prefWidth\u003d\"632.0\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"kayyenl"},"content":"               \u003cBorderPane prefHeight\u003d\"287.0\" prefWidth\u003d\"614.0\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"kayyenl"},"content":"                  \u003ctop\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"kayyenl"},"content":"                     \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"kayyenl"},"content":"                        \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"kayyenl"},"content":"                           \u003cHBox stylesheets\u003d\"@HelpWindow.css\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                            \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                                \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"kayyenl"},"content":"                                    \u003cpadding\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"kayyenl"},"content":"                                       \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"kayyenl"},"content":"                                    \u003c/padding\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                            \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"kayyenl"},"content":"                                 \u003cRegion prefHeight\u003d\"31.0\" prefWidth\u003d\"150.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"kayyenl"},"content":"                            \u003cButton id\u003d\"copyButton\" fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" prefHeight\u003d\"26.0\" prefWidth\u003d\"103.0\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                                \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                            \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":51,"author":{"gitId":"kayyenl"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"kayyenl"},"content":"                                 \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" top\u003d\"6.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"kayyenl"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":54,"author":{"gitId":"kayyenl"},"content":"                           \u003c/HBox\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"kayyenl"},"content":"                        \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"kayyenl"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"kayyenl"},"content":"                  \u003c/top\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"kayyenl"},"content":"                  \u003cleft\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"kayyenl"},"content":"                      \u003cTreeView fx:id\u003d\"treeView\" prefHeight\u003d\"200.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"kayyenl"},"content":"                          \u003cTreeItem expanded\u003d\"true\" value\u003d\"User\u0027s Methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"kayyenl"},"content":"                              \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"addmethods\" value\u003d\"Add methods\" \u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"addperson\" value\u003d\"addperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"addtask\" value\u003d\"addtask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":66,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":68,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"deletemethods\" value\u003d\"Delete methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":69,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"deleteperson\" value\u003d\"deleteperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"deletetask\" value\u003d\"deletetask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"listmethods\" value\u003d\"List methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"listperson\" value\u003d\"listperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":77,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"listtask\" value\u003d\"listtask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":78,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":79,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":80,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"findmethods\" value\u003d\"Find methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":81,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":82,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"findperson\" value\u003d\"findperson\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":83,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"findtask\" value\u003d\"findtask\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":84,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":85,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":86,"author":{"gitId":"kayyenl"},"content":"                                  \u003cTreeItem fx:id\u003d\"assignmethods\" value\u003d\"Assign methods\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"kayyenl"},"content":"                                      \u003cchildren\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"kayyenl"},"content":"                                          \u003cTreeItem fx:id\u003d\"assign\" value\u003d\"assign\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"kayyenl"},"content":"                                      \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"kayyenl"},"content":"                                  \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"kayyenl"},"content":"                              \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":92,"author":{"gitId":"kayyenl"},"content":"                          \u003c/TreeItem\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":93,"author":{"gitId":"kayyenl"},"content":"                        \u003copaqueInsets\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"kayyenl"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":95,"author":{"gitId":"kayyenl"},"content":"                        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"kayyenl"},"content":"                        \u003cBorderPane.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":97,"author":{"gitId":"kayyenl"},"content":"                           \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"kayyenl"},"content":"                        \u003c/BorderPane.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"kayyenl"},"content":"                      \u003c/TreeView\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"kayyenl"},"content":"                  \u003c/left\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"kayyenl"},"content":"                  \u003ccenter\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"kayyenl"},"content":"                     \u003cTextArea fx:id\u003d\"methodDescription\"","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"kayyenl"},"content":"                               editable\u003d\"false\" prefHeight\u003d\"200.0\"","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"kayyenl"},"content":"                               prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"","lastModifiedDate":"2023-02-25"},{"lineNumber":105,"author":{"gitId":"kayyenl"},"content":"                               text\u003d\"\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":106,"author":{"gitId":"kayyenl"},"content":"                        \u003cBorderPane.margin\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"kayyenl"},"content":"                           \u003cInsets bottom\u003d\"4.0\" left\u003d\"4.0\" right\u003d\"4.0\" /\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"kayyenl"},"content":"                        \u003c/BorderPane.margin\u003e\u003c/TextArea\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":109,"author":{"gitId":"kayyenl"},"content":"                  \u003c/center\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"kayyenl"},"content":"               \u003c/BorderPane\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":43,"kayyenl":78}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"SPWwj"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"SPWwj"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"officeconnect.json\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SPWwj":2,"-":160}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"SPWwj"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"SPWwj"},"content":"import static seedu.address.model.ModelManager.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"SPWwj"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"SPWwj"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs));","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs));","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"SPWwj"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs));","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"SPWwj":9,"-":124}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"SPWwj"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"SPWwj"},"content":"                VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"SPWwj"},"content":"            VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"SPWwj"},"content":"            VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"SPWwj"},"content":"            VALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"SPWwj"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE,","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"SPWwj"},"content":"            VALID_EMAIL, null, VALID_ID, VALID_TAGS);","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"SPWwj"},"content":"            new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_ID, invalidTags);","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SPWwj":15,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"SPWwj"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"officeconnect.json\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"SPWwj":1,"-":122}}]
