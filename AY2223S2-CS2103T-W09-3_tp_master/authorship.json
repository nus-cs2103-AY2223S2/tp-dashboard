[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"* This is **our team Project  for Software Engineering (SE) students of CS2103T-W09-3**.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"* It is named `CareFlow`","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"* `CareFlow` aims to be an efficient patient and drug inventory management application for medical clinic receptionists.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"* The user (receptionist) can interact with the system via commands _[user input]_ and view the response _[system response]_","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"as well as drug _[drug inventory display]_ and patient list _[patient management display]_ as shown above in the UI mockup.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"* For the detailed documentation of this project, see the **[CareFlow Website](https://ay2223s2-cs2103t-w09-3.github.io/tp/)**.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":11,"-":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"### Li Xintong","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"\u003cimg src\u003d\"images/emrysil.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"[[homepage](https://ay2223s2-cs2103t-w09-3.github.io/tp/)]","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"[[github](https://github.com/Emrysil)]","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"* Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"* Responsibilities: develop drug inventory sub-system","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"* Contact: e0772646@u.nus.edu","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"### Tseng Chen-Yu","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"\u003cimg src\u003d\"images/cydtseng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"[[github](http://github.com/cydtseng)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"* Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"* Responsibilities: Working on Patient subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"### Chen Shuwen","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"\u003cimg src\u003d\"images/cshuwen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"[[github](https://github.com/CShuwen)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"* Responsibilities: Working on Patient Subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"### Jiayan Lim","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"\u003cimg src\u003d\"images/jiayan-lim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"[[github](http://github.com/Jiayan-Lim)]","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"[[portfolio](team/jiayan-lim.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"* Responsibilities: Working on Patient Subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"### Nevin Lim","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"\u003cimg src\u003d\"images/nevinlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"[[github](http://github.com/nevinlim)]","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"[[portfolio](team/nevinlim.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"* Responsibilities: Drug Inventory Subsystem","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":5,"cydtseng":5,"Emrysil":7,"CShuwen":4,"-":33,"Jiayan-Lim":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"| Priority | As a …​                           | I want to …​                                                                                                                           | So that I can…​                                                                                                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"CShuwen"},"content":"|----------|-----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-23"},{"lineNumber":274,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | Add new patients profiles                                                                                                              | use the system to track their personal information and health records                                                                                                       |","lastModifiedDate":"2023-02-23"},{"lineNumber":275,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | delete a patient                                                                                                                       | remove patient data that I no longer need                                                                                                                                   |","lastModifiedDate":"2023-02-23"},{"lineNumber":276,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | find a person by name                                                                                                                  | locate details of persons without having to go through the entire list                                                                                                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":277,"author":{"gitId":"CShuwen"},"content":"| `* * * ` | A receptionist at the GP clinic   |Retrieve patients’ contact number| remind patients of their upcoming appointments                                                                                                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":278,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | update patient profiles                                                                                                                | have access to the most updated version of their personal information in terms of their contact number, address etc to facilitate our internal patient management procedure |","lastModifiedDate":"2023-02-23"},{"lineNumber":279,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | sort persons by name                                                                                                                   | locate a person easily                                                                                                                                                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":280,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | archive a patient profile if the patient has not visited for a long time                                                               | searching in a smaller dataset and when I distribute health information, I can omit patients in the archive to reduce spamming                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":281,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Refer the patient to hospitals                                                                                                         | easily forward their personal information, health record and health condition to hospitals if the patient needs more professional treatment                                 |","lastModifiedDate":"2023-02-23"},{"lineNumber":282,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check if a patient has any drug allergy                                                                                                | Inform the doctor of the patient’s drug allergy and ensure the safety of the patients by avoiding prescribing them with drugs that they are allergic to                     |","lastModifiedDate":"2023-02-23"},{"lineNumber":283,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Update patients on crowd conditions                                                                                                    | They can avoid visiting during peak clinic capacities                                                                                                                       |","lastModifiedDate":"2023-02-23"},{"lineNumber":284,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Access all hotlines to major SG hospitals                                                                                              | easily contact them for emergency cases                                                                                                                                     |","lastModifiedDate":"2023-02-23"},{"lineNumber":285,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Add appointment dates for a patient                                                                                                    | easily tell who has upcoming appointments and sms/email them to remind them                                                                                                 |","lastModifiedDate":"2023-02-23"},{"lineNumber":286,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Use the system to send notifications to patients who have upcoming appointments                                                        | send out mass notifications with one simple click without having to text each patient individually                                                                          |","lastModifiedDate":"2023-02-23"},{"lineNumber":287,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check a patient’s past appointment records at the clinic                                                                               | get information about their past visits (doctor, visit frequency, drugs prescribed etc.)                                                                                    |","lastModifiedDate":"2023-02-23"},{"lineNumber":288,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Detect patients who have missed their appointment                                                                                      | send them reminders to make another appointment                                                                                                                             |","lastModifiedDate":"2023-02-23"},{"lineNumber":289,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Update patients on the crowding condition upon request                                                                                 | provide a more flexible experience at the clinic since they can decide whether or when to visit the clinic based on the crowding condition that can be easily retrieved     |","lastModifiedDate":"2023-02-23"},{"lineNumber":290,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Append patient to the queue                                                                                                            | Ensure that the patients are served on a first-come-first-served basis and new patients will be lined at the end of the queue.                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":291,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check number of patients in the queue for doctor consultation                                                                          | Know the number of patients already in the queue and inform new patients about the rough waiting hours before their consultation.                                           |","lastModifiedDate":"2023-02-23"},{"lineNumber":292,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Dequeue patients once they enter consultation room                                                                                     | ensure that the patient who is consulting is no longer in the queue and other patients in the queue can get to see the doctor                                               |","lastModifiedDate":"2023-02-23"},{"lineNumber":293,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Take down special request from patient: male doctor/ female doctor/ specific doctor                                                    | Ensure that the patient is assigned to a doctor that they wish to visit and are comfortable with                                                                            |","lastModifiedDate":"2023-02-23"},{"lineNumber":294,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Edit a calendar of patient appointments                                                                                                | make amendment to the patient appoitment if there is a need to delete or change the date of patient appointment                                                             |","lastModifiedDate":"2023-02-23"},{"lineNumber":295,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | View calendar of patient appointments                                                                                                  | be informed about the upcoming appointments in the day                                                                                                                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":296,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Distribute health information / news to patients (SMS / whatsapp)                                                                      | let patients know their personal health info                                                                                                                                |","lastModifiedDate":"2023-02-23"},{"lineNumber":297,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Record down the visitor who has entered the clinic                                                                                     | Eliminate paper sign-in system                                                                                                                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":298,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Track patient’s observation time at the clinic after vaccination/treatment                                                             | easily track and tell when they can leave                                                                                                                                   |","lastModifiedDate":"2023-02-23"},{"lineNumber":299,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Update drug inventory count                                                                                                            | increase the drug inventory count when new drugs arrive and also decrease the count when the drugs are prescribed to patients                                               |","lastModifiedDate":"2023-02-23"},{"lineNumber":300,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check if a drug is still available and if it needs more supply                                                                         | ensuer that the dispensary does not run out of supply of drugs                                                                                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":301,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Generate pdf receipts for consultation, procedures and medication prescribed                                                           | have the choice to print out upon patient requests or email it to them (go green and paperless)                                                                             |","lastModifiedDate":"2023-02-23"},{"lineNumber":302,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check if a doctor has an appointment during a period of time.                                                                          | Ensure that appointments will not clash                                                                                                                                     |","lastModifiedDate":"2023-02-23"},{"lineNumber":303,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | notify patients to enter the consultation room by using the system to send push notifications / SMS, or any external broadcast devices | choose not to call out their names                                                                                                                                          |","lastModifiedDate":"2023-02-23"},{"lineNumber":304,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | retrieve the patient\u0027s past vaccination records                                                                                        | Inform the doctor and allow him or her to decide on whether to provide additional vaccines                                                                                  |","lastModifiedDate":"2023-02-23"},{"lineNumber":305,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   |Retrieve patients’ emergency contact| Inform the patients’ loved ones or guardian during unexpected situations                                                                                                    |","lastModifiedDate":"2023-02-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"Jiayan-Lim"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `GP receptionist`, unless specified otherwise)","lastModifiedDate":"2023-02-23"},{"lineNumber":310,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":311,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case: UC01 - Add a patient**","lastModifiedDate":"2023-02-23"},{"lineNumber":312,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":313,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":314,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":315,"author":{"gitId":"Jiayan-Lim"},"content":"**Guarantee: A new user account is created on the system with at least a name, NRIC, phone, email, and address**","lastModifiedDate":"2023-02-23"},{"lineNumber":316,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":317,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":318,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":319,"author":{"gitId":"Jiayan-Lim"},"content":"1. User request to add a new patient to the system.","lastModifiedDate":"2023-02-23"},{"lineNumber":320,"author":{"gitId":"Jiayan-Lim"},"content":"2. The user enters patient details ","lastModifiedDate":"2023-02-23"},{"lineNumber":321,"author":{"gitId":"Jiayan-Lim"},"content":"   1. The following are required information:","lastModifiedDate":"2023-02-23"},{"lineNumber":322,"author":{"gitId":"Jiayan-Lim"},"content":"         - Patient name","lastModifiedDate":"2023-02-23"},{"lineNumber":323,"author":{"gitId":"Jiayan-Lim"},"content":"         - NRIC","lastModifiedDate":"2023-02-23"},{"lineNumber":324,"author":{"gitId":"Jiayan-Lim"},"content":"         - Phone Number","lastModifiedDate":"2023-02-23"},{"lineNumber":325,"author":{"gitId":"Jiayan-Lim"},"content":"         - Email","lastModifiedDate":"2023-02-23"},{"lineNumber":326,"author":{"gitId":"Jiayan-Lim"},"content":"         - Address","lastModifiedDate":"2023-02-23"},{"lineNumber":327,"author":{"gitId":"Jiayan-Lim"},"content":"   2. The following are non-required information:","lastModifiedDate":"2023-02-23"},{"lineNumber":328,"author":{"gitId":"Jiayan-Lim"},"content":"         - Drug Allergy","lastModifiedDate":"2023-02-23"},{"lineNumber":329,"author":{"gitId":"Jiayan-Lim"},"content":"         - Emergency contact","lastModifiedDate":"2023-02-23"},{"lineNumber":330,"author":{"gitId":"Jiayan-Lim"},"content":"3. The system creates the new user account","lastModifiedDate":"2023-02-23"},{"lineNumber":331,"author":{"gitId":"Jiayan-Lim"},"content":"4. The system show the new created user in the patient list","lastModifiedDate":"2023-02-23"},{"lineNumber":332,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":333,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":334,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":335,"author":{"gitId":"Jiayan-Lim"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":336,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. If any of the required fields are not completed","lastModifiedDate":"2023-02-23"},{"lineNumber":337,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":338,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. the user is informed which required fields are missing","lastModifiedDate":"2023-02-23"},{"lineNumber":339,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":340,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":341,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":342,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. If the username is already in use","lastModifiedDate":"2023-02-23"},{"lineNumber":343,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":344,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. the user is informed that he or she must choose a different name","lastModifiedDate":"2023-02-23"},{"lineNumber":345,"author":{"gitId":"Jiayan-Lim"},"content":"   ","lastModifiedDate":"2023-02-23"},{"lineNumber":346,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":347,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":348,"author":{"gitId":"Jiayan-Lim"},"content":"* 2c. If the input field is invalid, the user is informed of this, and the corresponding valid naming criteria is displayed","lastModifiedDate":"2023-02-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":350,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c1. If the NRIC is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":351,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":352,"author":{"gitId":"Jiayan-Lim"},"content":"\t * 2c2. If the phone number is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":353,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":354,"author":{"gitId":"Jiayan-Lim"},"content":"\t * 2c3. If the email is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":355,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":356,"author":{"gitId":"Jiayan-Lim"},"content":"\t * 2c4. If the address is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":357,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":358,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":359,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":360,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case: UC02 - Delete a person**","lastModifiedDate":"2023-02-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User \u003cins\u003elist all patients(UC03)\u003c/ins\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":367,"author":{"gitId":"Jiayan-Lim"},"content":"3.  User enters NRIC or index to delete a specific person in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":368,"author":{"gitId":"Jiayan-Lim"},"content":"4.  CareFlow deletes the person from the system","lastModifiedDate":"2023-02-23"},{"lineNumber":369,"author":{"gitId":"Jiayan-Lim"},"content":"5.  Careflow show the upddated patient list","lastModifiedDate":"2023-02-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"Jiayan-Lim"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. The given NRIC is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":380,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":381,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"Jiayan-Lim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":384,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":385,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":387,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC03 - List all patients**","lastModifiedDate":"2023-02-23"},{"lineNumber":392,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":393,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":394,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":395,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":396,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":397,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to list all patients","lastModifiedDate":"2023-02-23"},{"lineNumber":398,"author":{"gitId":"Jiayan-Lim"},"content":"2.  CareFlow shows a list of patients","lastModifiedDate":"2023-02-23"},{"lineNumber":399,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":400,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":401,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":402,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC04 - Add a drug**","lastModifiedDate":"2023-02-23"},{"lineNumber":403,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":404,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":405,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":406,"author":{"gitId":"Jiayan-Lim"},"content":"**Guarantee: A new user account is created on the system with**","lastModifiedDate":"2023-02-23"},{"lineNumber":407,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":408,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":409,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":410,"author":{"gitId":"Jiayan-Lim"},"content":"1. User request to add a new drug to the system","lastModifiedDate":"2023-02-23"},{"lineNumber":411,"author":{"gitId":"Jiayan-Lim"},"content":"2. The user enters drug details","lastModifiedDate":"2023-02-23"},{"lineNumber":412,"author":{"gitId":"Jiayan-Lim"},"content":"3. The system creates the new user account","lastModifiedDate":"2023-02-23"},{"lineNumber":413,"author":{"gitId":"Jiayan-Lim"},"content":"4. The system show the new created drug in the drug list ","lastModifiedDate":"2023-02-23"},{"lineNumber":414,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":415,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":416,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":417,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC05 - Delete a drug**","lastModifiedDate":"2023-02-23"},{"lineNumber":418,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":419,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":420,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":421,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":422,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":423,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User \u003cins\u003elists all drugs(UC06)\u003c/ins\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":424,"author":{"gitId":"Jiayan-Lim"},"content":"3.  User enters drug\u0027s trade name or index to delete a specific drug in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":425,"author":{"gitId":"Jiayan-Lim"},"content":"4.  CareFlow deletes the drug from the system","lastModifiedDate":"2023-02-23"},{"lineNumber":426,"author":{"gitId":"Jiayan-Lim"},"content":"5.  Careflow show the updated drug list","lastModifiedDate":"2023-02-23"},{"lineNumber":427,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":428,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":429,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":430,"author":{"gitId":"Jiayan-Lim"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":431,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":432,"author":{"gitId":"Jiayan-Lim"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":433,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":434,"author":{"gitId":"Jiayan-Lim"},"content":"  Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":435,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":436,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. The given trade name is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":437,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":438,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":439,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":440,"author":{"gitId":"Jiayan-Lim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":441,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":442,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":443,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":444,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":445,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":446,"author":{"gitId":"Jiayan-Lim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":447,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":448,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC06 - List all drugs**","lastModifiedDate":"2023-02-23"},{"lineNumber":449,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":450,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":451,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":452,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":453,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":454,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to list all drugs","lastModifiedDate":"2023-02-23"},{"lineNumber":455,"author":{"gitId":"Jiayan-Lim"},"content":"2.  CareFlow shows a list of drugs","lastModifiedDate":"2023-02-23"},{"lineNumber":456,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":457,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":458,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"CShuwen"},"content":"4.  Should be easy to use and navigate for the clinic receptionist. It should have a simple and intuitive interface that is easy to learn and use","lastModifiedDate":"2023-02-23"},{"lineNumber":467,"author":{"gitId":"CShuwen"},"content":"5.  Should be secure and protect patient data from unauthorized access or disclosure.","lastModifiedDate":"2023-02-23"},{"lineNumber":468,"author":{"gitId":"CShuwen"},"content":"6.  Should be able to accommodate growth and expansion. It should be easy to add new features and functionalities as needed.","lastModifiedDate":"2023-02-23"},{"lineNumber":469,"author":{"gitId":"CShuwen"},"content":"7.  Should be easy to maintain and update through a clear and well-documented architecture, and it should be easy to troubleshoot and fix problems should they arise.","lastModifiedDate":"2023-02-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"Jiayan-Lim"},"content":"* **GP receptionist**: General practitioners receptionist","lastModifiedDate":"2023-02-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CShuwen":37,"-":359,"Jiayan-Lim":133}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"title: CareFlow User Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"Careflow is a **desktop application for patient and drug inventory management, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"If you are a receptionist for a GP clinic and you can type fast, Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"1. Ensure you have Java 11 installed in your Computer.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"   * [Installing Java 11 on Windows](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-microsoft-windows-platforms.html#GUID-371F38CC-248F-49EC-BB9C-C37FC89E52A0)","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"   * [Installing Java 11 on macOS](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-macos.html)","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"2. Download the latest `careflow.jar` from [here](https://github.com/AY2223S2-CS2103T-W09-3/tp).","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"3. Copy the file to the folder you want to use as the home folder for your careflowBook.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar careflow.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"   * `p list` : Lists all patients.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"   * `d list` : Lists all drugs.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"   * `p add -n John Doe -g male -p 98765432 -e johnd@example.com -a John street, block 123, #01-01` : Adds a patient named `John Doe` to the patient records.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"   * `p delete -in 3` : Deletes the 3rd patient record shown in the current list.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"   * `p clear` : Deletes all patient records.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"   * `d clear` : Deletes all drug records","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"#### Notes about command format:","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"* Words in UPPER CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"e.g. in add -n NAME, NAME is a parameter which can be used as add -n John Doe.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"* Words in `UPPER CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"  e.g. in `add -n NAME`, NAME is a parameter which can be used as `add -n John Doe`.","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"Shows all valid command formats and their functionalities.","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"Format: `help`","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"### Adding a patient:  `p add`","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"Adds a patient to the list of patients.","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"Format: `p add -n PATIENT_NAME -ic NRIC -p PHONE_NUMBER -e EMAIL -a ADDRESS`","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"* `add -n John Doe -ic T3871918C -p 98765432 -e johnd@example.com -a John Street, Block 123, #01-01`","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"* `add -n Betsy Crowe -ic T8837191D -p 92478963 -e betsycrowe@example.com -a Sambal Street, Block 72, #04-12`","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"### Listing all persons : `p list`","lastModifiedDate":"2023-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"Shows a list of all patients in the CareFlow system in alphabetical order.","lastModifiedDate":"2023-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"Format: `p list`","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"### Retrieve a patient record by name: `p find`","lastModifiedDate":"2023-02-23"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"Format: `p find -n PATIENT_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"* Only the name is searched.","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"* `find John` returns john and John Doe","lastModifiedDate":"2023-02-23"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"* `find alex david` returns Alex Yeoh, David Li","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"### Retrieve a patient record by NRIC: `p find`","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"Finds patient whose NRIC matches given keyword","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"Format: `p find -ic PATIENT_NRIC`","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"* p find -ic T3871918C ","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"* Returns John Doe | T3871918C | 98765432 | johnd@example.com | John Street, Block 123, #01-01","lastModifiedDate":"2023-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"### Delete a patient record by NRIC: `p delete`","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"Deletes the specified patient from the patient list.","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"Format: `p delete -ic PATIENT_NRIC`","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"cydtseng"},"content":"Examples: ","lastModifiedDate":"2023-02-23"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"* `p delete -ic T1234567B`","lastModifiedDate":"2023-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"### Deleting a patient by index: `p delete`","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"cydtseng"},"content":"Deletes the person at the specified INDEX.","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"cydtseng"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"cydtseng"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"cydtseng"},"content":"Format: `p delete -in PATIENT_INDEX`","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"cydtseng"},"content":"Example:","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"* list followed by p delete -in 2 will delete the 2nd person in the patient list.","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"### Adding a drug: `d add`","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"Adds a drug to the list of drugs.","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"cydtseng"},"content":"Format: `d add -dn DRUG_NAME -tn TRADE_NAME -s STOCK`","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"cydtseng"},"content":"* `d add -dn paracetamol -tn Panadol -s 500`","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"cydtseng"},"content":"### Retrieve a Drug by TRADE_NAME: `d find`","lastModifiedDate":"2023-02-23"},{"lineNumber":134,"author":{"gitId":"cydtseng"},"content":"Finds drugs whose trade_name contains any of the given keywords.","lastModifiedDate":"2023-02-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"cydtseng"},"content":"Format: `d find -tn TRADE_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":137,"author":{"gitId":"cydtseng"},"content":"* The search is case-insensitive. e.g panadol will match Panadol.","lastModifiedDate":"2023-02-23"},{"lineNumber":138,"author":{"gitId":"cydtseng"},"content":"* Only the trade name is searched.","lastModifiedDate":"2023-02-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"cydtseng"},"content":"### Retrieve a Drug by DRUG_NAME : `d find`","lastModifiedDate":"2023-02-23"},{"lineNumber":141,"author":{"gitId":"cydtseng"},"content":"Finds drugs whose drug_name contains any of the given keywords.","lastModifiedDate":"2023-02-23"},{"lineNumber":142,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":143,"author":{"gitId":"cydtseng"},"content":"Format: `d find -dn DRUG_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":144,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":145,"author":{"gitId":"cydtseng"},"content":"* The search is case-insensitive. e.g Famotidine will match famotidine.","lastModifiedDate":"2023-02-23"},{"lineNumber":146,"author":{"gitId":"cydtseng"},"content":"* Only the drug name is searched.","lastModifiedDate":"2023-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"cydtseng"},"content":"* `d find -dn paracetamol` ","lastModifiedDate":"2023-02-23"},{"lineNumber":150,"author":{"gitId":"cydtseng"},"content":"* This returns Panadol 500 and Tylenol 300","lastModifiedDate":"2023-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"cydtseng"},"content":"### Delete a Drug by TRADE_NAME: `d delete`","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"Deletes the specified drug that matches the tradename keyword from the drug list.","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"cydtseng"},"content":"Format: `d delete -tn TRADE_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":159,"author":{"gitId":"cydtseng"},"content":"* `d delete -tn Panadol Flu Max`","lastModifiedDate":"2023-02-23"},{"lineNumber":160,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":161,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":162,"author":{"gitId":"cydtseng"},"content":"### Delete a Drug by INDEX : `d delete`","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"cydtseng"},"content":"Deletes the specified drug from the drug list based on the index of the drug.","lastModifiedDate":"2023-02-23"},{"lineNumber":165,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"Format: `d delete -i DRUG_INDEX`","lastModifiedDate":"2023-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"cydtseng"},"content":"* `d delete -i 7`","lastModifiedDate":"2023-02-23"},{"lineNumber":170,"author":{"gitId":"cydtseng"},"content":"* This deletes the 7th drug in the most recently shown list","lastModifiedDate":"2023-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"cydtseng"},"content":"### Clearing all drug entries : `d clear`","lastModifiedDate":"2023-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"cydtseng"},"content":"Clears all entries for drugs.","lastModifiedDate":"2023-02-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"cydtseng"},"content":"Format: `d clear`","lastModifiedDate":"2023-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"cydtseng"},"content":"CareFlow data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":190,"author":{"gitId":"cydtseng"},"content":"All CareFlow data is saved as a JSON file `[JAR file location]/data/careflow.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":193,"author":{"gitId":"cydtseng"},"content":"If your changes to the data file makes its format invalid, CareFlow will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"cydtseng"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CareFlow home folder.","lastModifiedDate":"2023-02-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"cydtseng"},"content":"## Command Summary","lastModifiedDate":"2023-02-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"cydtseng"},"content":"**Help**| `help`","lastModifiedDate":"2023-02-23"},{"lineNumber":214,"author":{"gitId":"cydtseng"},"content":"**Add patient** | `add -n NAME -p PHONE_NUMBER -e EMAIL -a ADDRESS` \u003cbr\u003e e.g., `add -n John Doe -p 98765432 -e johnd@example.com -a John street, block 123, #01-01`","lastModifiedDate":"2023-02-23"},{"lineNumber":215,"author":{"gitId":"cydtseng"},"content":"**List patient** | `p list`","lastModifiedDate":"2023-02-23"},{"lineNumber":216,"author":{"gitId":"cydtseng"},"content":"**Find patient by name** | `p find -n PATIENT_NAME` \u003cbr\u003e e.g., `p find -n John` returns `john` and `John Doe`","lastModifiedDate":"2023-02-23"},{"lineNumber":217,"author":{"gitId":"cydtseng"},"content":"**Find patient by NRIC** | `p find -ic PATIENT_NRIC` \u003cbr\u003e e.g., `find -ic T0021248C` ","lastModifiedDate":"2023-02-23"},{"lineNumber":218,"author":{"gitId":"cydtseng"},"content":"**Delete patient by index** | `p delete -in PATIENT_INDEX` \u003cbr\u003e e.g., `delete -in 3`","lastModifiedDate":"2023-02-23"},{"lineNumber":219,"author":{"gitId":"cydtseng"},"content":"**Delete patient by NRIC** | `p delete -ic PATIENT_NRIC` \u003cbr\u003e e.g., `delete -ic T0021248C`","lastModifiedDate":"2023-02-23"},{"lineNumber":220,"author":{"gitId":"cydtseng"},"content":"**Add a drug** | `d add -dn DRUG_NAME -tn TRADE_NAME -s STOCK` \u003cbr\u003e e.g., `add -dn paracetamol  -tn Panadol -s 500`","lastModifiedDate":"2023-02-23"},{"lineNumber":221,"author":{"gitId":"cydtseng"},"content":"**Find drug by trade name** |`d find -tn TRADE_NAME` \u003cbr\u003e e.g., `d find -tn panadol`","lastModifiedDate":"2023-02-23"},{"lineNumber":222,"author":{"gitId":"cydtseng"},"content":"**Find drug by drug name** | `d find -dn DRUG_NAME` \u003cbr\u003e e.g., `d find -dn paracetamol`","lastModifiedDate":"2023-02-23"},{"lineNumber":223,"author":{"gitId":"cydtseng"},"content":"**Delete drug by trade name** | `d delete -tn TRADE_NAME`\u003cbr\u003e e.g., `d delete -tn Panadol Flu Max`","lastModifiedDate":"2023-02-23"},{"lineNumber":224,"author":{"gitId":"cydtseng"},"content":"**Delete drug by index** | `d delete -i INDEX`\u003cbr\u003e e.g.,`d delete -i 7`","lastModifiedDate":"2023-02-23"},{"lineNumber":225,"author":{"gitId":"cydtseng"},"content":"**Clear all drugs** | `d clear`","lastModifiedDate":"2023-02-23"},{"lineNumber":226,"author":{"gitId":"cydtseng"},"content":"**Exit** | `exit`","lastModifiedDate":"2023-02-23"},{"lineNumber":227,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":119,"-":108}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"nevinlim"},"content":"    content: \"CareFlow\";","lastModifiedDate":"2023-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"nevinlim":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"title: CareFlow","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S2/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"**CareFlow is a desktop application for patient and drug inventory management of medical clinics.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"* If you are interested in using CareFlow, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"* If you are interested about developing CareFlow, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nevinlim":6,"-":12}},{"path":"docs/team/cshuwen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"title: Chen Shuwen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"### Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"Careflow is a desktop application for patient and drug inventory management, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"CShuwen":20}},{"path":"docs/team/cydtseng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"title: Tseng Chen-Yu\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"### Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"Careflow is a desktop application for patient and drug inventory management of medical clinics, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"- Review/mentoring contributions: ","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":21}},{"path":"docs/team/emrysil.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"# Xintong\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"### Project: CareFlow","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"Careflow is a desktop application for patient and drug inventory management, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"- **New Feature**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"- **New Feature**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"- **Code contributed**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"- **Enhancements to existing features**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"- **Documentation**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"  - Contributions to User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"  - Contributions to Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"- **Community**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"- **Tools**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":25}},{"path":"docs/team/jiayan-lim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"title: Jiayan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"# Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"Careflow is a desktop application for patient and drug inventory management of medical clinics, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). ","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"### Summary of Contributions (to be added soon)","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Jiayan-Lim":18}},{"path":"docs/team/nevinlim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"# Nevin\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"##Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"***CareFlow*** is a desktop application for _patient and drug inventory management of medical clinics_, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"***CareFlow*** can get your patient and drugs management tasks done **faster** than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"## \u003cins\u003eCode contributed: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"* Give a link to your code on tP Code Dashboard. The link is available in the Project List Page -- linked to the  icon under your profile picture.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eEnhancements implemented: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"* A summary of the enhancements you implemented.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to the UG: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"* Which sections did you contribute to the UG?","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to the DG: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"* Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to team-based tasks\u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eReview/mentoring contributions: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"* Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions beyond the project team: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"* Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"* Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":41}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogic;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogicManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModelManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.DrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.PatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowLogic logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowModel model;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        logic \u003d new CareFlowLogicManager(model, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    private CareFlowModel initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        ReadOnlyAddressBook initialData;","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyPatientRecord\u003e patientRecordOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyDrugInventory\u003e drugInventoryOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyPatientRecord initialDataPatient;","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyDrugInventory initialDataDrug;","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"            // to be changed","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//            }","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//            initialDataPatient \u003d ?","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//            initialDataDrug \u003d ?","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        } catch (DataConversionException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//            initialData \u003d new AddressBook();","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//            initialData \u003d new AddressBook();","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"        return new CareFlowModelManager(initialDataPatient, initialDataDrug, userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Emrysil":39,"-":157}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_UNKNOWN_OPERATION_TYPE \u003d \"Unknown operation type\";","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_IC \u003d \"The patient NRIC provided is not found\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_INVALID_DRUG_DISPLAYED_INDEX \u003d \"The drug index provided is invalid\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nevinlim":1,"Emrysil":1,"-":15}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"     * Convert given string to lowercase.","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"    public static String makeStringCaseInsensitive(String s) {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"        return s.toLowerCase();","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"Jiayan-Lim":9}},{"path":"src/main/java/seedu/address/logic/CareFlowLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowLogic {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * Returns the PatientRecord","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyPatientRecord getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * Returns the DrugInventory","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyDrugInventory getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered list of drugs */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Emrysil":23,"-":38}},{"path":"src/main/java/seedu/address/logic/CareFlowLogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.CareFlowParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class CareFlowLogicManager implements CareFlowLogic{","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CareFlowLogicManager.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowModel model;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowParser careFlowParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code CareFlowLogicManager} with the given {@code CareFlowModel} and {@code Storage}.","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public CareFlowLogicManager(CareFlowModel model, Storage storage) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        this.careFlowParser \u003d new CareFlowParser();","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        Command command \u003d careFlowParser.parseCommand(commandText);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        try {","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            // specific storage methods to be created ltr","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//            storage.savePatientRecord(model.getPatientRecord());","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//            storage.saveDrugInventory(model.getDrugInventory());","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//            throw new CommandException(FILE_OPS_ERROR_MESSAGE + e, e);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        return commandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        return model.getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        return model.getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getFilteredDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        return model.getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        return model.getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        return model.getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Emrysil":94}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    // @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        model.addPerson(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":17,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public abstract CommandResult execute(CareFlowModel model) throws CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":2,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        model.deletePerson(personToDelete);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":19,"-":32}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Emrysil":26,"-":202}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Emrysil":8,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        return new CommandResult(","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Emrysil":14,"-":31}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":9,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":11,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVE_INGREDIENT;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIRECTION;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EXPIRY_DATE;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PURPOSE;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SIDE_EFFECT;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STORAGE_COUNT;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * Adds a drug to the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":Adds a drug to the drug inventory. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_TRADE_NAME + \"TRADE NAME \"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_ACTIVE_INGREDIENT + \"ACTIVE INGREDIENT \"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_PURPOSE + \"PURPOSE... \"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_SIDE_EFFECT + \"SIDE EFFECT... \"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_DIRECTION + \"DIRECTION\"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_EXPIRY_DATE + \"EXPIRY DATE \"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_STORAGE_COUNT + \"STORAGE COUNT\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_TRADE_NAME + \"Panadol \"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_ACTIVE_INGREDIENT + \"Paracetamol \"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_PURPOSE + \"relieve pain \"","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_PURPOSE + \"relieve fever \"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_PURPOSE + \"relieve headache \"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_SIDE_EFFECT + \"skin rash \"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_SIDE_EFFECT + \"swelling of the lips, tongue, throat or face \"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_SIDE_EFFECT + \"nausea \"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_SIDE_EFFECT + \"unexplained bruising or bleeding \"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_DIRECTION + \"Adults and children over 12 years: 1-2 caplets taken every 4 to 6 hours. Not \" +","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            \"recommended for children under 12 years. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_EXPIRY_DATE + \"31-08-2025 \"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_STORAGE_COUNT + \"50 \";","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New drug added: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_DUPLICATE_DRUG \u003d \"This drug already exists in the drug inventory\";","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public final Drug toAdd;","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public AddCommand(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        toAdd \u003d drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"        if (model.hasDrug(toAdd)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DRUG);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"        model.addDrug(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":5,"Emrysil":62}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.DrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Drug inventory has been cleared!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        model.setDrugInventory(new DrugInventory());","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Emrysil":24}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * Deletes a drug from the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Drug: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Drug not found: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"            + \":  Deletes the drug identified by the index number used in the displayed drug list.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_INDEX + \"INDEX\"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            + COMMAND_WORD + \":  Deletes the drug identified by its trade name.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_TRADE_NAME + \"TRADE NAME\"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD + \" Panadol \";","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    private TradeName targetTradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    public DeleteCommand(TradeName targetTradeName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"        this.targetTradeName \u003d targetTradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"        List\u003cDrug\u003e drugList \u003d model.getFilteredDrugList();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        if (targetTradeName \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d drugList.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_DRUG_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"            Drug drugToDelete \u003d drugList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"            model.deleteDrug(drugToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, drugToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"            Drug drugToDelete \u003d null;","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"            for (Drug drug : drugList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                if (drug.getTradeName().equals(targetTradeName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                    drugToDelete \u003d drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"            if (drugToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"                throw new CommandException(String.format(MESSAGE_FAILURE, targetTradeName));","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"            model.deleteDrug(drugToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, drugToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":55,"Emrysil":17}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Finds a drug from the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":18}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Lists all drugs in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":18}},{"path":"src/main/java/seedu/address/logic/commands/generalcommand/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.generalcommand;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Terminates the program.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":18}},{"path":"src/main/java/seedu/address/logic/commands/generalcommand/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.generalcommand;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":18}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * Adds a patient to the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to patient records. \"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DOB + \"DOB \"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_IC + \"IC\"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DRUG_ALLERGY + \"DRUG ALLERGY \"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_NAME + \"EMERGENCY CONTACT \"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_PHONE + \"EMERGENCY CONTACT PHONE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_RELATIONSHIP + \"EMERGENCY CONTACT RELATIONSHIP\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_NAME + \"Tom Smith \"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_PHONE + \"84356788 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMAIL + \"tsmith@gmail.com \"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_ADDRESS + \"969 Lock Street #04-32 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DOB + \"2001-05-28 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_GENDER + \"MALE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_IC + \"T0278234M \"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DRUG_ALLERGY + \"Aspirin \"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_NAME + \"Jade Smith \"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_PHONE + \"93746552\"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_RELATIONSHIP + \"Wife\";","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists.\";","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    private final Patient patientToAdd;","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        patientToAdd \u003d patient;","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"                || (other instanceof AddCommand","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"                \u0026\u0026 patientToAdd.equals(((AddCommand) other).patientToAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"    public CommandResult execute(CareFlowModel careFlowModel) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(careFlowModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"        if(careFlowModel.hasPatient(patientToAdd)){","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        careFlowModel.addPatient(patientToAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patientToAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":56,"Emrysil":16}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.PatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient record has been cleared!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        model.setPatientRecord(new PatientRecord());","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.patient.Ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * Deletes a patient from the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + COMMAND_WORD + \":  Deletes the the patient identified by the IC number.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_IC + \"TRADE NAME\"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" T1234567A \";","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted patient: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Ic targetIc;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public DeleteCommand(Ic ic) {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.targetIc \u003d ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof seedu.address.logic.commands.patientcommands.DeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((seedu.address.logic.commands.patientcommands.DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cPatient\u003e patientList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (targetIc \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d patientList.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Patient patientToDelete \u003d patientList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            Patient patientToDelete \u003d null; // delete using patient ic","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            for (Patient patient : patientList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                if (patient.getIc().equals(targetIc)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    patientToDelete \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (patientToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_IC);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":16,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Finds a patient from the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patient whose names contain any of \"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(CareFlowModel model) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof seedu.address.logic.commands.FindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((seedu.address.logic.commands.patientcommands.FindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":15,"-":27}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Lists all patients in the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":18}},{"path":"src/main/java/seedu/address/logic/parser/CareFlowParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_OPERATION_TYPE;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.drugparser.DrugParser;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.generalparser.GeneralParser;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.patientparser.PatientParser;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * Represents a Parser that is able to parse user input.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * CareFlow Parser will distribute commands to DrugParser, PatientParser and GeneralParser based on the","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * operation type. ie. operation type can be \"p\", \"d\" or \"g\"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class CareFlowParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003copType\u003e[pdg])(?\u003ccommandWord\u003e\\\\S+)\"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * Parses user input and distribute different operations to specific parsers.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on user input","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        // \"d\" for drug related operations, \"p\" for patient related operations and \"g\" for general operations","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        final String opType \u003d matcher.group(\"opType\");","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        switch (opType) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        case DrugParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            return new DrugParser().parse(commandWord, arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        case PatientParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            return new PatientParser().parse(commandWord, arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        case GeneralParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            return new GeneralParser().parse(commandWord);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_OPERATION_TYPE);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":50}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /* Prefix definitions for patient */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-ph\");","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-em\");","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-ad\");","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"-dob\");","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DRUG_ALLERGY \u003d new Prefix(\"-da\");","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"//    public static final Prefix PREFIX_EMERGENCY_CONTACT \u003d new Prefix(\"-ec\");","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"-g\");","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_IC \u003d new Prefix(\"-ic\");","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    public static final Prefix PREFIX_EMERGENCY_CONTACT_NAME \u003d new Prefix(\"-ecn\");","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    public static final Prefix PREFIX_EMERGENCY_CONTACT_PHONE \u003d new Prefix(\"-ecp\");","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    public static final Prefix PREFIX_EMERGENCY_CONTACT_RELATIONSHIP \u003d new Prefix(\"-ecr\");","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    /* Prefix definitions for drug*/","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_ACTIVE_INGREDIENT \u003d new Prefix(\"-ai\");","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DIRECTION \u003d new Prefix(\"-dir\");","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_EXPIRY_DATE \u003d new Prefix(\"-ed\");","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_PURPOSE \u003d new Prefix(\"-pur\");","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_SIDE_EFFECT \u003d new Prefix(\"-se\");","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_STORAGE_COUNT \u003d new Prefix(\"-sc\");","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_TRADE_NAME \u003d new Prefix(\"-tn\");","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"-i\");","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nevinlim":1,"cydtseng":4,"Emrysil":18,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"cydtseng"},"content":"    public static DateOfBirth parseDateOfBirth(String birthDate) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"        String trimmedBirthDate \u003d birthDate.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"cydtseng"},"content":"        if (!DateOfBirth.isValidBirthDate(trimmedBirthDate)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"cydtseng"},"content":"        return new DateOfBirth(trimmedBirthDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"cydtseng"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"cydtseng"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"cydtseng"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"cydtseng"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"cydtseng"},"content":"    public static Ic parseIc(String icNumber) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"cydtseng"},"content":"        String trimmedIcNumber \u003d icNumber.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"cydtseng"},"content":"        if (!Ic.isValidIc(trimmedIcNumber)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"cydtseng"},"content":"        return new Ic(trimmedIcNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"cydtseng"},"content":"    public static DrugAllergy parseDrugAllergy(String drugAllergy) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(drugAllergy);","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"cydtseng"},"content":"        String trimmedDrugAllergy \u003d drugAllergy.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"        if (!DrugAllergy.isValidDrugAllergy(trimmedDrugAllergy)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"cydtseng"},"content":"        return new DrugAllergy(trimmedDrugAllergy);","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"cydtseng"},"content":"    public static EmergencyContact parseEmergencyContact(Person emergencyContactPerson,","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"cydtseng"},"content":"                                                         String emergencyContactRelationship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(emergencyContactPerson, emergencyContactRelationship);","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":164,"author":{"gitId":"cydtseng"},"content":"        //TODO: checker for relationship?","lastModifiedDate":"2023-03-01"},{"lineNumber":165,"author":{"gitId":"cydtseng"},"content":"        String trimmedEmergencyContactRelationship \u003d emergencyContactRelationship.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"        return new EmergencyContact(emergencyContactPerson, trimmedEmergencyContactRelationship);","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String tradeName} into a {@code TradeName}.","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code tradeName} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"nevinlim"},"content":"    public static TradeName parseTradeName(String tradeName) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"nevinlim"},"content":"        String trimmedTradeName \u003d tradeName.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"nevinlim"},"content":"        if (!TradeName.isValidTradeName(trimmedTradeName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(TradeName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":180,"author":{"gitId":"nevinlim"},"content":"        return new TradeName(trimmedTradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":181,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":182,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":183,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":184,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String ingredient} into a {@code ActiveIngredient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code ingredient} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"nevinlim"},"content":"    public static ActiveIngredient parseActiveIngredient(String ingredient) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":190,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":191,"author":{"gitId":"nevinlim"},"content":"        String trimmedIngredient \u003d ingredient.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":192,"author":{"gitId":"nevinlim"},"content":"        if (!ActiveIngredient.isValidIngredient(trimmedIngredient)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(ActiveIngredient.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":194,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"nevinlim"},"content":"        return new ActiveIngredient(trimmedIngredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":198,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":199,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String direction} into a {@code Direction}.","lastModifiedDate":"2023-03-03"},{"lineNumber":200,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":201,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code direction} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":203,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":204,"author":{"gitId":"nevinlim"},"content":"    public static Direction parseDirection(String direction) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":205,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(direction);","lastModifiedDate":"2023-03-03"},{"lineNumber":206,"author":{"gitId":"nevinlim"},"content":"        String trimmedDirection \u003d direction.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":207,"author":{"gitId":"nevinlim"},"content":"        if (!Direction.isValidDirection(trimmedDirection)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(Direction.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"nevinlim"},"content":"        return new Direction(trimmedDirection);","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String expiryDate} into a {@code ExpiryDate}.","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code expiryDate} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"nevinlim"},"content":"    public static ExpiryDate parseExpiryDate(String expiryDate) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(expiryDate);","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"nevinlim"},"content":"        String trimmedExpiryDate \u003d expiryDate.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"nevinlim"},"content":"        if (!ExpiryDate.isValidExpiryDate(trimmedExpiryDate)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(ExpiryDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"nevinlim"},"content":"        return new ExpiryDate(trimmedExpiryDate);","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String purpose} into a {@code Purpose}.","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code purpose} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"nevinlim"},"content":"    public static Purpose parsePurpose(String purpose) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(purpose);","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"nevinlim"},"content":"        String trimmedPurpose \u003d purpose.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"nevinlim"},"content":"        if (!Purpose.isValidPurpose(trimmedPurpose)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(Purpose.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"nevinlim"},"content":"        return new Purpose(trimmedPurpose);","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String sideEffect} into a {@code SideEffect}.","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code sideEffect} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":"    public static SideEffect parseSideEffect(String sideEffect) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(sideEffect);","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"nevinlim"},"content":"        String trimmedSideEffect \u003d sideEffect.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"        if (!SideEffect.isValidSideEffect(trimmedSideEffect)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(SideEffect.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"nevinlim"},"content":"        return new SideEffect(trimmedSideEffect);","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String count} into a {@code StorageCount}.","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code count} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"nevinlim"},"content":"    public static StorageCount parseStorageCount(String count) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"nevinlim"},"content":"        String trimmedCount \u003d count.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"nevinlim"},"content":"        if (!StorageCount.isValidStorageCount(trimmedCount)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(StorageCount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"nevinlim"},"content":"        return new StorageCount(trimmedCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nevinlim":106,"cydtseng":47,"-":120}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.AddCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"                ArgumentTokenizer.tokenize(userInput,","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_TRADE_NAME, PREFIX_ACTIVE_INGREDIENT,","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_DIRECTION, PREFIX_EXPIRY_DATE, PREFIX_PURPOSE,","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_SIDE_EFFECT, PREFIX_STORAGE_COUNT);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TRADE_NAME, PREFIX_ACTIVE_INGREDIENT, PREFIX_DIRECTION,","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"                PREFIX_EXPIRY_DATE, PREFIX_PURPOSE, PREFIX_SIDE_EFFECT, PREFIX_STORAGE_COUNT)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"                    seedu.address.logic.commands.drugcommands.AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"        TradeName tradeName \u003d ParserUtil.parseTradeName(argMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        ActiveIngredient activeIngredient \u003d ParserUtil.parseActiveIngredient(argMultimap.getValue(PREFIX_ACTIVE_INGREDIENT).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"        Direction direction \u003d ParserUtil.parseDirection(argMultimap.getValue(PREFIX_DIRECTION).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        ExpiryDate expiryDate \u003d ParserUtil.parseExpiryDate(argMultimap.getValue(PREFIX_EXPIRY_DATE).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        Purpose purpose \u003d ParserUtil.parsePurpose(argMultimap.getValue(PREFIX_PURPOSE).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"        SideEffect sideEffect \u003d ParserUtil.parseSideEffect(argMultimap.getValue(PREFIX_SIDE_EFFECT).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"        StorageCount storageCount \u003d ParserUtil.parseStorageCount(argMultimap.getValue(PREFIX_STORAGE_COUNT).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"        //Drug drug \u003d new Drug(tradeName, activeIngredient, direction,expiryDate, purpose, sideEffect, storageCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":36,"Emrysil":14}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        if (arePrefixesPresent(argumentMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"            Index index \u003d ParserUtil.parseIndex(argumentMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TRADE_NAME);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_TRADE_NAME)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"                TradeName tradeName \u003d ParserUtil.parseTradeName(argMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"                return new DeleteCommand(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                        seedu.address.logic.commands.drugcommands.DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":30,"Emrysil":13}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/DrugParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.AddCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.ClearCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.ListCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public class DrugParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"d\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param arguments arguments specific to the command","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":44}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public FindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Emrysil":15}},{"path":"src/main/java/seedu/address/logic/parser/generalparser/GeneralParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.generalparser;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.generalcommand.ExitCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.generalcommand.HelpCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class GeneralParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"g\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Emrysil":33}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.*;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.DateOfBirth;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.DrugAllergy;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.EmergencyContact;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.Gender;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.patient.Ic;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_PHONE;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_RELATIONSHIP;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"     * and returns an AddCommand object for execution of adding a patient.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"                ArgumentTokenizer.tokenize(userInput,","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_DOB,","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_IC,","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMERGENCY_CONTACT_NAME,","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMERGENCY_CONTACT_PHONE,","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMERGENCY_CONTACT_RELATIONSHIP","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"                        );","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"                PREFIX_ADDRESS, PREFIX_DOB, PREFIX_GENDER, PREFIX_IC, PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"                PREFIX_EMERGENCY_CONTACT_NAME, PREFIX_EMERGENCY_CONTACT_PHONE, PREFIX_EMERGENCY_CONTACT_RELATIONSHIP)","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, seedu.address.logic.commands.AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"        DateOfBirth birthDate \u003d ParserUtil.parseDateOfBirth(argMultimap.","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"                getValue(PREFIX_DOB).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"        DrugAllergy drugAllergy \u003d ParserUtil.parseDrugAllergy(argMultimap.","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"                getValue(PREFIX_DRUG_ALLERGY).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"        // Emergency Contact","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"        Name emergencyContactName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_NAME).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"        Phone emergencyContactPhone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_PHONE).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"        Person emergencyContactPerson \u003d new Person(emergencyContactName, emergencyContactPhone);","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"        EmergencyContact emergencyContact \u003d ParserUtil.parseEmergencyContact(emergencyContactPerson,","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"                argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_RELATIONSHIP).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"        Patient patient \u003d new Patient(name, phone, email, address, birthDate, gender, ic, drugAllergy, emergencyContact);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":84,"Emrysil":14}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.patient.Ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.*;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns an DeleteCommand object for execution of deleting a patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_IC);","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_IC)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                if (argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    return new DeleteCommand(ic);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                    throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, seedu.address.logic.commands.DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, seedu.address.logic.commands.DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values  in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Emrysil":13,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.patient.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public FindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, seedu.address.logic.commands.patientcommands.FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return new seedu.address.logic.commands.patientcommands.FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Emrysil":14,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/PatientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.ClearCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.ListCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public class PatientParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"p\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param arguments arguments specific to the command","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":43}},{"path":"src/main/java/seedu/address/model/CareFlow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Wraps all data at the CareFlow level","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Duplicates are not allowed","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class CareFlow {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private final PatientRecord patientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private final DrugInventory drugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        patientRecord \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        drugInventory \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    //// constructors","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public CareFlow() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public CareFlow(ReadOnlyPatientRecord toBeCopiedP, ReadOnlyDrugInventory toBeCopiedD) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        resetPatientData(toBeCopiedP);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        resetDrugData(toBeCopiedD);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    public CareFlow(ReadOnlyPatientRecord toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        resetPatientData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public CareFlow(ReadOnlyDrugInventory toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        resetDrugData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        return patientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return drugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        patientRecord.setPatients(patients);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        drugInventory.setDrugs(drugs);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow patient record with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    public void resetPatientData(ReadOnlyPatientRecord newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    public void resetDrugData(ReadOnlyDrugInventory newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        setDrugs(newData.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.hasPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        return drugInventory.hasDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        patientRecord.addPatient(p);","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug d) {","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        drugInventory.addDrug(d);","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        patientRecord.setPatient(target, editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"     * inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        drugInventory.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"        patientRecord.removePatient(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"    public void removeDrug(Drug key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"        drugInventory.removeDrug(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"    //// util methods","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.toString() + \"\\n\" + drugInventory.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.getPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"        return drugInventory.getDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof CareFlow","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patientRecord.equals(((CareFlow) other).patientRecord)","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugInventory.equals(((CareFlow) other).drugInventory));","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"        return ((Integer)(patientRecord.hashCode() + drugInventory.hashCode())).hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":1,"Emrysil":168}},{"path":"src/main/java/seedu/address/model/CareFlowModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * The API of the Model component.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowModel {","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * {@code Predicate} that always evaluates to true.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    Predicate\u003cDrug\u003e PREDICATE_SHOW_ALL_DRUGS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * Replaces user prefs data with data in {@code userPrefs}.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    void setPatientRecordFilePath(Path patientRecordFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    void setDrugInventoryFilePath(Path drugInventoryFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * Replaces patient record data with the data in {@code patientRecord}.","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    void setPatientRecord(ReadOnlyPatientRecord patientRecord);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"     * Replaces drug inventory data with the data in {@code drugInventory}.","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    void setDrugInventory(ReadOnlyDrugInventory drugInventory);","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     * Returns the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyPatientRecord getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     * Returns the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyDrugInventory getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    boolean hasDrug(Drug drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"     * The patient must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"     * Deletes the given drug.","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * The drug must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    void deleteDrug(Drug target);","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     * Decrease the drug storage count by the given amount.","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    void decrDrugStorageBy(Drug target, int amount);","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"     * Increase the drug storage count by the given amount.","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    void incrDrugStorageBy(Drug target, int amount);","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"     * {@code patient} must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"     * Adds the given drug.","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"     * {@code drug} must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"    void addDrug(Drug drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    void setPatient(Patient target, Patient editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"    void setDrug(Drug target, Drug editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered drug list */","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"     * Updates the filter of the filtered drug list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"    void updateFilteredDrugList(Predicate\u003cDrug\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":159}},{"path":"src/main/java/seedu/address/model/CareFlowModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"public class CareFlowModelManager implements CareFlowModel{","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CareFlowModelManager.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    private final CareFlow careFlow;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private final FilteredList\u003cDrug\u003e filteredDrugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private static final String LOGGER_MESSAGE \u003d \"Initialising with patient record: %s, drug inventory: %s and user \" +","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            \"prefs %s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public CareFlowModelManager(ReadOnlyPatientRecord patientRecord, ReadOnlyDrugInventory drugInventory,","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"                                ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(drugInventory, patientRecord, userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        logger.fine(String.format(LOGGER_MESSAGE, patientRecord, drugInventory, userPrefs));","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        this.careFlow \u003d new CareFlow();","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        this.filteredPatients \u003d new FilteredList\u003c\u003e(this.careFlow.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        this.filteredDrugs \u003d new FilteredList\u003c\u003e(this.careFlow.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public CareFlowModelManager() {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        this(new PatientRecord(), new DrugInventory() , new UserPrefs());","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        return userPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        return userPrefs.getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecordFilePath(Path patientRecordFilePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patientRecordFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        // implement ltr","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        // userPrefs.setPatientRecordFilePath(patientRecordFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        return userPrefs.getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventoryFilePath(Path drugInventoryFilePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drugInventoryFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        // implementation here","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        // implement ltr","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setDrugInventoryFilePath(drugInventoryFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Patient Record \u0026 Drug Inventory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecord(ReadOnlyPatientRecord patientRecord) {","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"        this.careFlow.resetPatientData(patientRecord);","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventory(ReadOnlyDrugInventory drugInventory) {","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        this.careFlow.resetDrugData(drugInventory);","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        return careFlow.getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        return careFlow.getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"        return careFlow.hasPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"        return careFlow.hasDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"    public void deletePatient(Patient target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"        careFlow.removePatient(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"    public void deleteDrug(Drug target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"        careFlow.removeDrug(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"    public void decrDrugStorageBy(Drug target, int amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"        // to be implemented ltr","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"    public void incrDrugStorageBy(Drug target, int amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"        // to be implemented ltr","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"        careFlow.addPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"    public  void addDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"        careFlow.addDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"        careFlow.setPatient(target, editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"        careFlow.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"        return filteredPatients;","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getFilteredDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"        return filteredDrugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"    public void updateFilteredDrugList(Predicate\u003cDrug\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"        filteredDrugs.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Emrysil":190}},{"path":"src/main/java/seedu/address/model/DrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.UniqueDrugList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"public class DrugInventory implements ReadOnlyDrugInventory {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final UniqueDrugList drugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        drugs \u003d new UniqueDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory(){}","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory(ReadOnlyDrugInventory toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        this.drugs.setDrugs(drugs);","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of this drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public void resetData(ReadOnlyDrugInventory newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        setDrugs(newData.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        return drugs.contains(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug d) {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        drugs.add(d);","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"     * inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        drugs.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public void removeDrug(Drug key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        drugs.remove(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        return drugs.asUnmodifiableObservableList().size() + \" drugs\";","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        return drugs.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof DrugInventory","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugs.equals(((DrugInventory) other).drugs));","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        return drugs.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"Emrysil":94}},{"path":"src/main/java/seedu/address/model/PatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.UniquePatientList;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class PatientRecord implements ReadOnlyPatientRecord {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"   private final UniquePatientList patients;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord(ReadOnlyPatientRecord toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public void resetData(ReadOnlyPatientRecord newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"        patients.add(p);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"        patients.remove(key);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        return patients.asUnmodifiableObservableList().size() + \" patients\";","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof PatientRecord","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patients.equals(((PatientRecord) other).patients));","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        return patients.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"cydtseng":8,"Emrysil":86}},{"path":"src/main/java/seedu/address/model/drug/ActiveIngredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s active ingredient in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class ActiveIngredient {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            \"Active ingredient should only contain alphanumeric characters, spaces and dashes, and it should not be\"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                    + \" blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9][a-zA-Z0-9 -]*\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code ActiveIngredient}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param ingredient A valid active ingredient.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public ActiveIngredient(String ingredient) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        checkArgument(isValidIngredient(ingredient), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        value \u003d ingredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a given string is a valid active ingredient.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public static boolean isValidIngredient(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof ActiveIngredient","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 value.equals(((ActiveIngredient) other).value));","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":50}},{"path":"src/main/java/seedu/address/model/drug/Direction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s direction in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class Direction {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            \"Direction should be in sentence form and it should not be blank\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z][a-zA-Z0-9: ,.-]*\";","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code Direction}.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * @param direction A valid drug direction.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public Direction(String direction) {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(direction);","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        checkArgument(isValidDirection(direction), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        this.value \u003d direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a given string is a valid drug direction.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public static boolean isValidDirection(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof Direction // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 value.equals(((Direction) other).value)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":49}},{"path":"src/main/java/seedu/address/model/drug/Drug.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" * Represents a Drug in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"public class Drug {","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    // Identity fields","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    private final TradeName tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    // Data fields","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private final ActiveIngredient activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private final Direction direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private final ExpiryDate expiryDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private final Set\u003cPurpose\u003e purposes;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    private final Set\u003cSideEffect\u003e sideEffects;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    private final StorageCount storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public Drug(TradeName tradeName, ActiveIngredient activeIngredient, Direction direction,","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"                ExpiryDate expiryDate, Set\u003cPurpose\u003e purposes, Set\u003cSideEffect\u003e sideEffects,","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"                StorageCount storageCount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(tradeName, activeIngredient, direction, expiryDate, purposes, sideEffects,","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"                storageCount);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.activeIngredient \u003d activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.direction \u003d direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        this.purposes \u003d purposes;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        this.storageCount \u003d storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public TradeName getTradeName() {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        return tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    public ActiveIngredient getActiveIngredient() {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        return activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    public Direction getDirection() {","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        return direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public ExpiryDate getExpiryDate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        return expiryDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public Set\u003cPurpose\u003e getPurposes() {","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        return Collections.unmodifiableSet(purposes);","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    public StorageCount getStorageCount() {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        return storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * Returns an immutable side effect set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public Set\u003cSideEffect\u003e getSideEffects() {","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        return Collections.unmodifiableSet(sideEffects);","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     * Returns true if both drugs have the same name.","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"     * This defines a weaker notion of equality between two drugs.","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDrug(Drug otherDrug) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        if (otherDrug \u003d\u003d this) {","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        return otherDrug !\u003d null","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 otherDrug.getTradeName().equals(getTradeName())","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 otherDrug.getExpiryDate().equals(getExpiryDate());","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        if (!(other instanceof Drug)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        Drug otherDrug \u003d (Drug) other;","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        return getTradeName().equals(otherDrug.getTradeName())","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getActiveIngredient().equals(otherDrug.getActiveIngredient())","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getDirection().equals(otherDrug.getDirection())","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getExpiryDate().equals(otherDrug.getExpiryDate())","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getPurposes().equals(otherDrug.getPurposes())","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getSideEffects().equals(otherDrug.getSideEffects())","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getStorageCount().equals(otherDrug.getStorageCount());","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"        return Objects.hash(tradeName, activeIngredient, direction, expiryDate,","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"                purposes, sideEffects, storageCount);","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"        builder.append(getTradeName())","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Active Ingredient: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"                .append(getActiveIngredient())","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Direction: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"                .append(getDirection())","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Expiry Date: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"                .append(getExpiryDate())","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Storage Count: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"                .append(getStorageCount());","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"        Set\u003cPurpose\u003e purposes \u003d getPurposes();","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        if (!purposes.isEmpty()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"            builder.append(\"; Purposes: \");","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"            purposes.forEach(builder::append);","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        Set\u003cSideEffect\u003e sideEffects \u003d getSideEffects();","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"        if (!sideEffects.isEmpty()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"            builder.append(\"; Side Effects: \");","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"            sideEffects.forEach(builder::append);","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":135}},{"path":"src/main/java/seedu/address/model/drug/ExpiryDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s expiry date in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class ExpiryDate {","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Expiry dates should follow the DD-MM-YYYY format and only have\"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"            + \"numerical digits separated by - as inputs\";","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    public final LocalDate expiryDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"     * Constructs an {@code ExpiryDate}.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     * @param expiryDate A valid expiryDate.","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public ExpiryDate(String expiryDate) {","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(expiryDate);","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidExpiryDate(expiryDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        this.expiryDate \u003d LocalDate.parse(expiryDate, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid expiry date.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidExpiryDate(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"        return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        return expiryDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof ExpiryDate // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 expiryDate.equals(((ExpiryDate) other).expiryDate)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"        return expiryDate.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":51,"Emrysil":8}},{"path":"src/main/java/seedu/address/model/drug/Purpose.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s purpose in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class Purpose {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Purposes should be in phrase form \"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"            + \"and only contain alphabets or whitespace\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first 3 consecutive characters are upper or lowercase alphabetical characters,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"     * followed by 0 or more alphabetical or whitespace characters.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z][A-Za-z\\\\s]*\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs an {@code Purpose}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param purpose A valid purpose.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public Purpose(String purpose) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(purpose);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidPurpose(purpose), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.purpose \u003d purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid purpose.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidPurpose(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof Purpose // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 purpose.equals(((Purpose) other).purpose)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        return purpose.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":46,"Emrysil":9}},{"path":"src/main/java/seedu/address/model/drug/SideEffect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s possible side effects in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class SideEffect {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Side effects should be in phrase form \"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"            + \"and only contain alphabets or whitespace\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first 3 consecutive characters are upper or lowercase alphabetical characters,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * followed by 0 or more alphabetical, whitespace characters or commas.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z][A-Za-z\\\\s,]*\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs an {@code SideEffect}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param sideEffect A valid side effect.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public SideEffect(String sideEffect) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(sideEffect);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidSideEffect(sideEffect), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.sideEffect \u003d sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid side effect.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidSideEffect(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof SideEffect // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 sideEffect.equals(((SideEffect) other).sideEffect)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        return sideEffect.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":45,"Emrysil":10}},{"path":"src/main/java/seedu/address/model/drug/StorageCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s storage count in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class StorageCount {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            \"Storage Count should only contain positive integers, and it should be at least 1 digit long\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\d][\\\\d]*\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public Integer count;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"     * Constructs a {@code StorageCount}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"     * @param count A valid storage count.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public StorageCount(String count) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidStorageCount(count), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        this.count \u003d Integer.parseInt(count);","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid storage count.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidStorageCount(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public void decrStorage(Integer amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        if(amount \u003e count) {","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            count \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            count -\u003d amount;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public void incStorage(Integer amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        count +\u003d amount;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        return count.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof StorageCount // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 count \u003d\u003d (((StorageCount) other).count)); // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"        return count.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":38,"Emrysil":24}},{"path":"src/main/java/seedu/address/model/drug/TradeName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s trade name in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class TradeName {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"            \"Trade names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs a {@code TradeName}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param tradeName A valid trade name.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public TradeName(String tradeName) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(tradeName);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidTradeName(tradeName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid trade name.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidTradeName(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    public boolean isBlank() {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"        return this.tradeName.isBlank();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return this.tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof TradeName // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 tradeName.equals(((TradeName) other).tradeName)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"        return tradeName.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":53,"Emrysil":7}},{"path":"src/main/java/seedu/address/model/drug/UniqueDrugList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.exceptions.DrugNotFoundException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.exceptions.DuplicateDrugException;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * A list of drugs that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * A drug is considered unique by comparing using {@code Drug#isSameDrug(Drug)}. As such, adding and updating of","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * drug uses Drug#isSameDrug(Drug) for equality so as to ensure that the drug being added or updated is","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * unique in terms of identity in the UniqueDrugList. However, the removal of a drug uses Drug#equals(Object) so","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" * as to ensure that the drug with exactly the same fields will be removed.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":" * @see Drug#isSameDrug(Drug)","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"public class UniqueDrugList implements Iterable\u003cDrug\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cDrug\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cDrug\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * Returns true if the list contains an equivalent drug as the given argument.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public boolean contains(Drug toCheck) {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public void add(Drug toAdd) {","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     * Replaces the drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(target, editedDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"            throw new DrugNotFoundException();","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        if (!target.isSameDrug(editedDrug) \u0026\u0026 contains(editedDrug)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        internalList.set(index, editedDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes the equivalent drug from the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * The drug must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void remove(Drug toRemove) {","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"            throw new DrugNotFoundException();","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(UniqueDrugList replacement) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"     * Replaces the contents of this list with {@code drugs}.","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * {@code drugs} must not contain duplicate persons.","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(drugs);","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        if (!drugsAreUnique(drugs)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(drugs);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    public Iterator\u003cDrug\u003e iterator() {","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof UniqueDrugList // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 internalList.equals(((UniqueDrugList) other).internalList));","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"     * Returns true if {@code drugs} contains only unique drugs.","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    private boolean drugsAreUnique(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        for (int i \u003d 0; i \u003c drugs.size() - 1; i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            for (int j \u003d i + 1; j \u003c drugs.size(); j++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"                if (drugs.get(i).isSameDrug(drugs.get(j))) {","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"                    return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":137}},{"path":"src/main/java/seedu/address/model/drug/exceptions/DrugNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class DrugNotFoundException extends RuntimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":7}},{"path":"src/main/java/seedu/address/model/drug/exceptions/DuplicateDrugException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Signals that the operation will result in duplicate Drugs (Drugs are considered duplicates if they have the same","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * information).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class DuplicateDrugException extends RuntimeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":8}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructor for backward compatibility","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     * Might be removed in the future.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    public Person(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructor for creating a emergency contact person,","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"     * so only include important information like name and phone number.","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"    public Person(Name name, Phone phone) {","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":122,"Jiayan-Lim":25}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":" * identity).","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"public class DuplicatePatientException extends RuntimeException{","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cydtseng":13}},{"path":"src/main/java/seedu/address/model/person/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"public class PatientNotFoundException extends RuntimeException{","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cydtseng":4}},{"path":"src/main/java/seedu/address/model/person/patient/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s date of birth in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class DateOfBirth {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Date of birth should only contain numeric characters and spaces, \"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"                    + \"and the date should fall between 01/01/1900 and current date\";","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final DateTimeFormatter[] FORMATS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"            Stream.of(\"dd.MM.yyyy\", \"dd/MM/yyyy\", \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"                            \"dd.MM.yy\", \"dd/MM/yy\", \"dd-MM-yy\")","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"                    .map(DateTimeFormatter::ofPattern)","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"                    .toArray(DateTimeFormatter[]::new);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final LocalDate minRangeOfBirth \u003d LocalDate.of(1900, 1, 1);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final LocalDate maxRangeOfBirth \u003d LocalDate.now();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    private final String birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param birthDate A valid birth date.","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    public DateOfBirth(String birthDate) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidBirthDate(birthDate), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is in valid date format,","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"     * i.e.: dd.mm.yyyy -\u003e 01.01.2023","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd/mm/yyyy -\u003e 01/01/2023","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd-mm-yyyy -\u003e 01-01-2023","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd.mm.yy -\u003e 01.01.2023","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd/mm/yy -\u003e 01/01/23","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd-mm-yy -\u003e 01-01-23","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    private static LocalDate formatDateIfValid(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        for (DateTimeFormatter format: FORMATS) {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"            try {","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"                return LocalDate.parse(test, format);","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"                // do nothing, continue check whether given string input match any other date time format","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid date of birth, or more","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"     * specifically the date of birth fall between year of 1900 and current date.","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidBirthDate(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        // check whether one\u0027s date of birth is fall between 1900 and current year.","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"        LocalDate formattedDate \u003d formatDateIfValid(test);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"        if (formattedDate \u003d\u003d null) {","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"        return formattedDate.isBefore(maxRangeOfBirth) \u0026\u0026 formattedDate.isAfter(minRangeOfBirth);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        return birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof DateOfBirth // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 birthDate.equals(((DateOfBirth) other).birthDate)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"        return birthDate.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":1,"Emrysil":7,"Jiayan-Lim":80}},{"path":"src/main/java/seedu/address/model/person/patient/DrugAllergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s drug allergy in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class DrugAllergy {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Drug allergy should be alphanumeric\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Tag drugAllergy;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DrugAllergy}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param drugAllergy A valid drug allergy description.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidDrugAllergy(drugAllergy), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drugAllergy \u003d new Tag(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid drug allergy.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidDrugAllergy(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        return drugAllergy.tagName;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof DrugAllergy // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 drugAllergy.equals(((DrugAllergy) other).drugAllergy)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        return drugAllergy.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":7,"Jiayan-Lim":43}},{"path":"src/main/java/seedu/address/model/person/patient/EmergencyContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s emergency contact in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class EmergencyContact {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_CONSTRAINTS_FOR_EMERGENCY_CONTACT_PEOPLE \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Emergency contact should contain the person\u0027s name and phone number, it should not be blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_CONSTRAINTS_FOR_RELATIONSHIP \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Relationship should only contain characters, and it should not be blank\\\"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final String VALIDATION_REGEX_FOR_RELATIONSHIP \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Person emergencyContact;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    private final String relationship;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code EmergencyContact}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param emergencyContact the person that is the first person medical personnel will get","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"     *     in touch with in an emergency.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param relationship the relationship between the patient and his/her emergency contact","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    public EmergencyContact(Person emergencyContact, String relationship) {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(emergencyContact, relationship);","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidEmergencyContact(emergencyContact), MESSAGE_CONSTRAINTS_FOR_EMERGENCY_CONTACT_PEOPLE);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidRelationship(relationship), MESSAGE_CONSTRAINTS_FOR_RELATIONSHIP);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        this.emergencyContact \u003d emergencyContact;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        this.relationship \u003d relationship;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is either female or male.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidEmergencyContact(Person test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.getName() !\u003d null \u0026\u0026 test.getPhone() !\u003d null;","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid relationship.","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidRelationship(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.matches(VALIDATION_REGEX_FOR_RELATIONSHIP);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        return String.format(\"Information of emergency contact person: /n%s \"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"                        + \"/nThe relationship between the patient and the emergency contact is %s\",","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"                emergencyContact.toString(), relationship);","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof EmergencyContact // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 emergencyContact.equals(((EmergencyContact) other).emergencyContact) // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 relationship.equals(((EmergencyContact) other).relationship));","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":7,"Jiayan-Lim":58}},{"path":"src/main/java/seedu/address/model/person/patient/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.StringUtil.makeStringCaseInsensitive;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s gender in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Gender {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Gender should only be either female or male, it should not be blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final String VALIDATION_REGEX \u003d \"f|female|m|male\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private final String gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param gender A valid gender.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is either female or male.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        return makeStringCaseInsensitive(test).matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        return gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 gender.equals(((Gender) other).gender)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        return gender.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":7,"Jiayan-Lim":43}},{"path":"src/main/java/seedu/address/model/person/patient/Ic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":" * Represents a patient\u0027s IC in the patient record","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class Ic {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"            \"IC number should only contain alphanumeric characters,\"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"                    + \" and it should be exactly 8 digits and characters long\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final String VALIDATION_REGEX \u003d \"[a-zA-Z]\\\\d{7}[a-zA-Z]\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    private final String ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code Ic}.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param icNumber A valid ic number.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public Ic(String icNumber) {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidIc(icNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        ic \u003d icNumber;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    public String getIc() {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid ic number.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidIc(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        return ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof Ic // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 ic.equals(((Ic) other).ic)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        return ic.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":1,"Jiayan-Lim":55}},{"path":"src/main/java/seedu/address/model/person/patient/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * Represents a Patient in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    private final DateOfBirth birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Gender gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Ic ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"    private Optional\u003cDrugAllergy\u003e drugAllergy;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    private Optional\u003cEmergencyContact\u003e emergencyContact;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, DateOfBirth birthDate, Gender gender, Ic ic) {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        super(name, phone, email, address);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(birthDate, gender, ic);","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"     * Uses this constructor when want to include drug allergy or emergency contact of the patient.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, DateOfBirth birthDate, Gender gender, Ic ic,","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        DrugAllergy drugAllergy, EmergencyContact emergencyContact) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        this(name, phone, email, address, birthDate, gender, ic);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drugAllergy \u003d Optional.ofNullable(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"        this.emergencyContact \u003d Optional.ofNullable(emergencyContact);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    public DateOfBirth getBirthDate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"    public Ic getIc() {","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugAllergy getDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.drugAllergy.orElse(null);","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"    public EmergencyContact getEmergencyContact() {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.emergencyContact.orElse(null);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":6,"Jiayan-Lim":59}},{"path":"src/main/java/seedu/address/model/person/patient/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.exceptions.PatientNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"     * Returns true if the list contains an equivalent person as the given argument","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"     * The patient identity of {@code editedPatient} must not be the same as","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"     * another existing patient in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"        if(!target.isSamePerson(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"    public void setPersons(UniquePatientList replacement) {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"     * Replaces the contents of this list with {@code patients}","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"     * {@code patients} must not contain duplicate persons.","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(patients);","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"        if(!patientsAreUnique(patients)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"                || (other instanceof UniquePatientList","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"                    \u0026\u0026 internalList.equals(((UniquePatientList) other).internalList));","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"cydtseng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"cydtseng"},"content":"     * Returns true if {@code patients} contains only unique patients.","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"cydtseng"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"cydtseng"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"cydtseng"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"                if (patients.get(i).isSamePerson(patients.get(j))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"cydtseng"},"content":"                    return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"cydtseng"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"cydtseng"},"content":"        return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"cydtseng":126,"Emrysil":3}},{"path":"src/main/java/seedu/address/model/readonly/ReadOnlyDrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.readonly;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Unmodifiable view of a drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public interface ReadOnlyDrugInventory {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/seedu/address/model/readonly/ReadOnlyPatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.readonly;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Unmodifiable view of a patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public interface ReadOnlyPatientRecord {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":12}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        return sampleAb;","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Emrysil":8,"-":50}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" * Represents a storage for {placeholder}.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Emrysil":5,"-":39}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        return readAddressBook(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//            return Optional.empty();","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(addressBook);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        requireNonNull(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Emrysil":32,"-":46}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//            }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//            addressBook.addPerson(person);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        return addressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Emrysil":14,"-":44}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Emrysil":4,"-":27}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Emrysil":31,"-":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogic;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private CareFlowLogic logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    private PatientDrugListPanel patientDrugListPanel;","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    private StackPane patientDrugListPanelPlaceholder;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public MainWindow(Stage primaryStage, CareFlowLogic logic) {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"        patientDrugListPanel \u003d new PatientDrugListPanel(logic.getFilteredPatientList(), logic.getFilteredDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        patientDrugListPanelPlaceholder.getChildren().add(patientDrugListPanel.getRoot());","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"        StatusBarFooter statusBarFooter \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"                new StatusBarFooter(logic.getPatientRecordFilePath(), logic.getDrugInventoryFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"    public PatientDrugListPanel getPatientDrugListPanel() {","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"        return patientDrugListPanel;","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Emrysil":11,"-":186}},{"path":"src/main/java/seedu/address/ui/PatientDrugListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.patient.Patient;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"public class PatientDrugListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private static final String FXML \u003d \"PatientDrugListPanel.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientDrugListPanel.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private ListView\u003cDrug\u003e drugListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public PatientDrugListPanel(ObservableList\u003cPatient\u003e patientList, ObservableList\u003cDrug\u003e drugList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"        // PERSON LIST","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        drugListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"        // DRUG LIST","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        drugListView.setItems(drugList);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        drugListView.setCellFactory(listView -\u003e new DrugListViewCell());","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Emrysil":12,"CShuwen":5,"-":41}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public StatusBarFooter(Path patientSaveLocation, Path drugSaveLocation) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(patientSaveLocation).toString()","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"                        + Paths.get(\".\").resolve(drugSaveLocation).toString()","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"                );","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Emrysil":4,"-":26}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogic;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private CareFlowLogic logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public UiManager(CareFlowLogic logic) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Emrysil":3,"-":84}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"          \u003cStackPane fx:id\u003d\"patientDrugListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Emrysil":1,"-":59}},{"path":"src/main/resources/view/PatientDrugListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"  \u003cListView fx:id\u003d\"patientListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"  \u003cListView fx:id\u003d\"drugListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":1,"CShuwen":4,"-":4}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"Jiayan-Lim"},"content":"    public void makeStringCaseInsensitive() {","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid input","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.makeStringCaseInsensitive(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid input","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"Jiayan-Lim"},"content":"        assertEquals(\"testing\", StringUtil.makeStringCaseInsensitive(\"TESTING\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":143,"Jiayan-Lim":10}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, null));","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, null, null, null));","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Person(null, null, null, null, null));","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"-":91,"Jiayan-Lim":7}},{"path":"src/test/java/seedu/address/model/person/patient/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDate));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidBirthDate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null address","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfBirth.isValidBirthDate(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // empty string date","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // future date can\u0027t be birth date","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/2023\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.2023\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-2023\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        // year before 1900 shouldn\u0027t be birth date","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid date format","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"32-01-2022\")); // invalid day","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-13-2022\")); // invalid month","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid date of birth","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13/11/2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13.11.2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13-11-2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13/11/22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13.11.22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13-11-22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":55}},{"path":"src/test/java/seedu/address/model/person/patient/DrugAllergyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class DrugAllergyTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DrugAllergy(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidDrugAllergy_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidDrugAllergy \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DrugAllergy(invalidDrugAllergy));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e DrugAllergy.isValidDrugAllergy(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"With empty blank\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"WithSpecialCharacter[\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"Penicillin\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"peanuts\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":38}},{"path":"src/test/java/seedu/address/model/person/patient/EmergencyContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class EmergencyContactTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EmergencyContact(null, null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidRelationship() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DrugAllergy(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank description","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(EmergencyContact.isValidRelationship(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(EmergencyContact.isValidRelationship(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid relationship","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(EmergencyContact.isValidRelationship(\"With empty blank\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(EmergencyContact.isValidRelationship(\"WithSpecialCharacter[\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid relationship","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(EmergencyContact.isValidRelationship(\"mother\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(EmergencyContact.isValidRelationship(\"aunt\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":32}},{"path":"src/test/java/seedu/address/model/person/patient/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class GenderTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank description","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid gender","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"fm\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"no idea\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid gender","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"f\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"feMale\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"Male\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":40}},{"path":"src/test/java/seedu/address/model/person/patient/IcTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class IcTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Ic(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidIc \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Ic(invalidIc));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Ic.isValidIc(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank description","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid ic","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a\")); // length of ic is not 9","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123x\")); // length of ic is not 9","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a12345678\")); // ic is not end with character","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123456bb\")); // ic format is invalid","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123t567b\")); // ic format is invalid","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123456*b\")); // special character show up","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid ic","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"a1234567b\")); // case insensitive","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"A1234567B\")); // case insensitive","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"a1234567z\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"A7654321Z\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":44}},{"path":"src/test/java/seedu/address/model/person/patient/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person.patient;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"public class PatientTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Patient(null, null, null, null, null, null, null));","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":14}}]
