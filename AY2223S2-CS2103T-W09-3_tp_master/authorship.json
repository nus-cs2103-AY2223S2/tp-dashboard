[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"* This is **our team Project  for Software Engineering (SE) students of CS2103T-W09-3**.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"* It is named `CareFlow`","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"* `CareFlow` aims to be an efficient patient and drug inventory management application for medical clinic receptionists.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"* The user (receptionist) can interact with the system via commands _[user input]_ and view the response _[system response]_","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"as well as drug _[drug inventory display]_ and patient list _[patient management display]_ as shown above in the UI mockup.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"* For the detailed documentation of this project, see the **[CareFlow Website](https://ay2223s2-cs2103t-w09-3.github.io/tp/)**.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":11,"-":2}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"### Li Xintong","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"\u003cimg src\u003d\"images/emrysil.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"[[homepage](https://ay2223s2-cs2103t-w09-3.github.io/tp/)]","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"[[github](https://github.com/Emrysil)]","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"* Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"* Responsibilities: develop drug inventory sub-system","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"* Contact: e0772646@u.nus.edu","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"### Tseng Chen-Yu","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"\u003cimg src\u003d\"images/cydtseng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"[[github](http://github.com/cydtseng)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"* Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"* Responsibilities: Working on Patient subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"### Chen Shuwen","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"\u003cimg src\u003d\"images/cshuwen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"[[github](https://github.com/CShuwen)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"* Responsibilities: Working on Patient Subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"### Jiayan Lim","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"\u003cimg src\u003d\"images/jiayan-lim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"[[github](http://github.com/Jiayan-Lim)]","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"[[portfolio](team/jiayan-lim.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"* Responsibilities: Working on Patient Subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"### Nevin Lim","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"\u003cimg src\u003d\"images/nevinlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"[[github](http://github.com/nevinlim)]","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"[[portfolio](team/nevinlim.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"* Responsibilities: Drug Inventory Subsystem","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":5,"cydtseng":5,"Emrysil":7,"CShuwen":4,"-":33,"Jiayan-Lim":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Jiayan-Lim"},"content":"* Receptionists, specifically targeting General Practitioner clinics, usually with fewer and regular patients.","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"Jiayan-Lim"},"content":"* Mostly desk-bound. Computers are accessible tools.","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"Jiayan-Lim"},"content":"* Able to pick up typing skills quickly and able to type fast.","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"Jiayan-Lim"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"Jiayan-Lim"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"Jiayan-Lim"},"content":"* Better communication between healthcare providers and patients","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"Jiayan-Lim"},"content":"* Increased efficiency in tracking patient’s health records and personal information","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"Jiayan-Lim"},"content":"* Addresses the needs and pain points of GPs who do not have a centralized system for tracking patients and drugs/inventory","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                           | I want to …​                                                                                                                           | So that I can…​                                                                                                                                                             |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"CShuwen"},"content":"|----------|-----------------------------------|----------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-23"},{"lineNumber":279,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | Add new patients profiles                                                                                                              | use the system to track their personal information and health records                                                                                                       |","lastModifiedDate":"2023-02-23"},{"lineNumber":280,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | delete a patient                                                                                                                       | remove patient data that I no longer need                                                                                                                                   |","lastModifiedDate":"2023-02-23"},{"lineNumber":281,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | find a person by name                                                                                                                  | locate details of persons without having to go through the entire list                                                                                                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":282,"author":{"gitId":"CShuwen"},"content":"| `* * * ` | A receptionist at the GP clinic   |Retrieve patients’ contact number| remind patients of their upcoming appointments                                                                                                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":283,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic   | update patient profiles                                                                                                                | have access to the most updated version of their personal information in terms of their contact number, address etc to facilitate our internal patient management procedure |","lastModifiedDate":"2023-02-23"},{"lineNumber":284,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | sort persons by name                                                                                                                   | locate a person easily                                                                                                                                                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":285,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | archive a patient profile if the patient has not visited for a long time                                                               | searching in a smaller dataset and when I distribute health information, I can omit patients in the archive to reduce spamming                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":286,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Refer the patient to hospitals                                                                                                         | easily forward their personal information, health record and health condition to hospitals if the patient needs more professional treatment                                 |","lastModifiedDate":"2023-02-23"},{"lineNumber":287,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check if a patient has any drug allergy                                                                                                | Inform the doctor of the patient’s drug allergy and ensure the safety of the patients by avoiding prescribing them with drugs that they are allergic to                     |","lastModifiedDate":"2023-02-23"},{"lineNumber":288,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Update patients on crowd conditions                                                                                                    | They can avoid visiting during peak clinic capacities                                                                                                                       |","lastModifiedDate":"2023-02-23"},{"lineNumber":289,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Access all hotlines to major SG hospitals                                                                                              | easily contact them for emergency cases                                                                                                                                     |","lastModifiedDate":"2023-02-23"},{"lineNumber":290,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Add appointment dates for a patient                                                                                                    | easily tell who has upcoming appointments and sms/email them to remind them                                                                                                 |","lastModifiedDate":"2023-02-23"},{"lineNumber":291,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Use the system to send notifications to patients who have upcoming appointments                                                        | send out mass notifications with one simple click without having to text each patient individually                                                                          |","lastModifiedDate":"2023-02-23"},{"lineNumber":292,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check a patient’s past appointment records at the clinic                                                                               | get information about their past visits (doctor, visit frequency, drugs prescribed etc.)                                                                                    |","lastModifiedDate":"2023-02-23"},{"lineNumber":293,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Detect patients who have missed their appointment                                                                                      | send them reminders to make another appointment                                                                                                                             |","lastModifiedDate":"2023-02-23"},{"lineNumber":294,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Update patients on the crowding condition upon request                                                                                 | provide a more flexible experience at the clinic since they can decide whether or when to visit the clinic based on the crowding condition that can be easily retrieved     |","lastModifiedDate":"2023-02-23"},{"lineNumber":295,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Append patient to the queue                                                                                                            | Ensure that the patients are served on a first-come-first-served basis and new patients will be lined at the end of the queue.                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":296,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check number of patients in the queue for doctor consultation                                                                          | Know the number of patients already in the queue and inform new patients about the rough waiting hours before their consultation.                                           |","lastModifiedDate":"2023-02-23"},{"lineNumber":297,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Dequeue patients once they enter consultation room                                                                                     | ensure that the patient who is consulting is no longer in the queue and other patients in the queue can get to see the doctor                                               |","lastModifiedDate":"2023-02-23"},{"lineNumber":298,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Take down special request from patient: male doctor/ female doctor/ specific doctor                                                    | Ensure that the patient is assigned to a doctor that they wish to visit and are comfortable with                                                                            |","lastModifiedDate":"2023-02-23"},{"lineNumber":299,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Edit a calendar of patient appointments                                                                                                | make amendment to the patient appoitment if there is a need to delete or change the date of patient appointment                                                             |","lastModifiedDate":"2023-02-23"},{"lineNumber":300,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | View calendar of patient appointments                                                                                                  | be informed about the upcoming appointments in the day                                                                                                                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":301,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Distribute health information / news to patients (SMS / whatsapp)                                                                      | let patients know their personal health info                                                                                                                                |","lastModifiedDate":"2023-02-23"},{"lineNumber":302,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Record down the visitor who has entered the clinic                                                                                     | Eliminate paper sign-in system                                                                                                                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":303,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Track patient’s observation time at the clinic after vaccination/treatment                                                             | easily track and tell when they can leave                                                                                                                                   |","lastModifiedDate":"2023-02-23"},{"lineNumber":304,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Update drug inventory count                                                                                                            | increase the drug inventory count when new drugs arrive and also decrease the count when the drugs are prescribed to patients                                               |","lastModifiedDate":"2023-02-23"},{"lineNumber":305,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check if a drug is still available and if it needs more supply                                                                         | ensuer that the dispensary does not run out of supply of drugs                                                                                                              |","lastModifiedDate":"2023-02-23"},{"lineNumber":306,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Generate pdf receipts for consultation, procedures and medication prescribed                                                           | have the choice to print out upon patient requests or email it to them (go green and paperless)                                                                             |","lastModifiedDate":"2023-02-23"},{"lineNumber":307,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | Check if a doctor has an appointment during a period of time.                                                                          | Ensure that appointments will not clash                                                                                                                                     |","lastModifiedDate":"2023-02-23"},{"lineNumber":308,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | notify patients to enter the consultation room by using the system to send push notifications / SMS, or any external broadcast devices | choose not to call out their names                                                                                                                                          |","lastModifiedDate":"2023-02-23"},{"lineNumber":309,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   | retrieve the patient\u0027s past vaccination records                                                                                        | Inform the doctor and allow him or her to decide on whether to provide additional vaccines                                                                                  |","lastModifiedDate":"2023-02-23"},{"lineNumber":310,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic   |Retrieve patients’ emergency contact| Inform the patients’ loved ones or guardian during unexpected situations                                                                                                    |","lastModifiedDate":"2023-02-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"Jiayan-Lim"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `GP receptionist`, unless specified otherwise)","lastModifiedDate":"2023-02-23"},{"lineNumber":315,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":316,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case: UC01 - Add a patient**","lastModifiedDate":"2023-02-23"},{"lineNumber":317,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":318,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":319,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":320,"author":{"gitId":"Jiayan-Lim"},"content":"**Guarantee: A new user account is created on the system with at least a name, NRIC, phone, email, and address**","lastModifiedDate":"2023-02-23"},{"lineNumber":321,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":322,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":323,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":324,"author":{"gitId":"Jiayan-Lim"},"content":"1. User request to add a new patient to the system.","lastModifiedDate":"2023-02-23"},{"lineNumber":325,"author":{"gitId":"Jiayan-Lim"},"content":"2. The user enters patient details","lastModifiedDate":"2023-02-23"},{"lineNumber":326,"author":{"gitId":"Jiayan-Lim"},"content":"   1. The following are required information:","lastModifiedDate":"2023-02-23"},{"lineNumber":327,"author":{"gitId":"Jiayan-Lim"},"content":"         - Patient name","lastModifiedDate":"2023-02-23"},{"lineNumber":328,"author":{"gitId":"Jiayan-Lim"},"content":"         - NRIC","lastModifiedDate":"2023-02-23"},{"lineNumber":329,"author":{"gitId":"Jiayan-Lim"},"content":"         - Phone Number","lastModifiedDate":"2023-02-23"},{"lineNumber":330,"author":{"gitId":"Jiayan-Lim"},"content":"         - Email","lastModifiedDate":"2023-02-23"},{"lineNumber":331,"author":{"gitId":"Jiayan-Lim"},"content":"         - Address","lastModifiedDate":"2023-02-23"},{"lineNumber":332,"author":{"gitId":"Jiayan-Lim"},"content":"   2. The following are non-required information:","lastModifiedDate":"2023-02-23"},{"lineNumber":333,"author":{"gitId":"Jiayan-Lim"},"content":"         - Drug Allergy","lastModifiedDate":"2023-02-23"},{"lineNumber":334,"author":{"gitId":"Jiayan-Lim"},"content":"         - Emergency contact","lastModifiedDate":"2023-02-23"},{"lineNumber":335,"author":{"gitId":"Jiayan-Lim"},"content":"3. The system creates the new user account","lastModifiedDate":"2023-02-23"},{"lineNumber":336,"author":{"gitId":"Jiayan-Lim"},"content":"4. The system show the new created user in the patient list","lastModifiedDate":"2023-02-23"},{"lineNumber":337,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":338,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":339,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":340,"author":{"gitId":"Jiayan-Lim"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":341,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. If any of the required fields are not completed","lastModifiedDate":"2023-02-23"},{"lineNumber":342,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":343,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. the user is informed which required fields are missing","lastModifiedDate":"2023-02-23"},{"lineNumber":344,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":345,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":346,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":347,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. If the username is already in use","lastModifiedDate":"2023-02-23"},{"lineNumber":348,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":349,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. the user is informed that he or she must choose a different name","lastModifiedDate":"2023-02-23"},{"lineNumber":350,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":351,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":352,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":353,"author":{"gitId":"Jiayan-Lim"},"content":"* 2c. If the input field is invalid, the user is informed of this, and the corresponding valid naming criteria is displayed","lastModifiedDate":"2023-02-23"},{"lineNumber":354,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":355,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c1. If the NRIC is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":356,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":357,"author":{"gitId":"Jiayan-Lim"},"content":"\t * 2c2. If the phone number is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":358,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":359,"author":{"gitId":"Jiayan-Lim"},"content":"\t * 2c3. If the email is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":360,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":361,"author":{"gitId":"Jiayan-Lim"},"content":"\t * 2c4. If the address is invalid, the user is informed of this, and valid naming criteria is displayed.","lastModifiedDate":"2023-02-23"},{"lineNumber":362,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":363,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":364,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":365,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case: UC02 - Delete a person**","lastModifiedDate":"2023-02-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User \u003cins\u003elist all patients(UC03)\u003c/ins\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":372,"author":{"gitId":"Jiayan-Lim"},"content":"3.  User enters NRIC or index to delete a specific person in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":373,"author":{"gitId":"Jiayan-Lim"},"content":"4.  CareFlow deletes the person from the system","lastModifiedDate":"2023-02-23"},{"lineNumber":374,"author":{"gitId":"Jiayan-Lim"},"content":"5.  Careflow show the upddated patient list","lastModifiedDate":"2023-02-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"Jiayan-Lim"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. The given NRIC is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":385,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":386,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"Jiayan-Lim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":389,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":390,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":391,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":392,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC03 - List all patients**","lastModifiedDate":"2023-02-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":398,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":402,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to list all patients","lastModifiedDate":"2023-02-23"},{"lineNumber":403,"author":{"gitId":"Jiayan-Lim"},"content":"2.  CareFlow shows a list of patients","lastModifiedDate":"2023-02-23"},{"lineNumber":404,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":405,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":406,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":407,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC04 - Add a drug**","lastModifiedDate":"2023-02-23"},{"lineNumber":408,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":409,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":410,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":411,"author":{"gitId":"Jiayan-Lim"},"content":"**Guarantee: A new user account is created on the system with**","lastModifiedDate":"2023-02-23"},{"lineNumber":412,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":413,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":414,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":415,"author":{"gitId":"Jiayan-Lim"},"content":"1. User request to add a new drug to the system","lastModifiedDate":"2023-02-23"},{"lineNumber":416,"author":{"gitId":"Jiayan-Lim"},"content":"2. The user enters drug details","lastModifiedDate":"2023-02-23"},{"lineNumber":417,"author":{"gitId":"Jiayan-Lim"},"content":"3. The system creates the new user account","lastModifiedDate":"2023-02-23"},{"lineNumber":418,"author":{"gitId":"Jiayan-Lim"},"content":"4. The system show the new created drug in the drug list","lastModifiedDate":"2023-02-23"},{"lineNumber":419,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":420,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":421,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":422,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC05 - Delete a drug**","lastModifiedDate":"2023-02-23"},{"lineNumber":423,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":424,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":425,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":426,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":427,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":428,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User \u003cins\u003elists all drugs(UC06)\u003c/ins\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":429,"author":{"gitId":"Jiayan-Lim"},"content":"3.  User enters drug\u0027s trade name or index to delete a specific drug in the list","lastModifiedDate":"2023-02-23"},{"lineNumber":430,"author":{"gitId":"Jiayan-Lim"},"content":"4.  CareFlow deletes the drug from the system","lastModifiedDate":"2023-02-23"},{"lineNumber":431,"author":{"gitId":"Jiayan-Lim"},"content":"5.  Careflow show the updated drug list","lastModifiedDate":"2023-02-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":437,"author":{"gitId":"Jiayan-Lim"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":441,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. The given trade name is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":442,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":443,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":444,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":445,"author":{"gitId":"Jiayan-Lim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":446,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":447,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":449,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":453,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC06 - List all drugs**","lastModifiedDate":"2023-02-23"},{"lineNumber":454,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":455,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":456,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":457,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":458,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":459,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to list all drugs","lastModifiedDate":"2023-02-23"},{"lineNumber":460,"author":{"gitId":"Jiayan-Lim"},"content":"2.  CareFlow shows a list of drugs","lastModifiedDate":"2023-02-23"},{"lineNumber":461,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":462,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":463,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"CShuwen"},"content":"4.  Should be easy to use and navigate for the clinic receptionist. It should have a simple and intuitive interface that is easy to learn and use","lastModifiedDate":"2023-02-23"},{"lineNumber":472,"author":{"gitId":"CShuwen"},"content":"5.  Should be secure and protect patient data from unauthorized access or disclosure.","lastModifiedDate":"2023-02-23"},{"lineNumber":473,"author":{"gitId":"CShuwen"},"content":"6.  Should be able to accommodate growth and expansion. It should be easy to add new features and functionalities as needed.","lastModifiedDate":"2023-02-23"},{"lineNumber":474,"author":{"gitId":"CShuwen"},"content":"7.  Should be easy to maintain and update through a clear and well-documented architecture, and it should be easy to troubleshoot and fix problems should they arise.","lastModifiedDate":"2023-02-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"Jiayan-Lim"},"content":"* **GP receptionist**: General practitioners receptionist","lastModifiedDate":"2023-02-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CShuwen":37,"-":369,"Jiayan-Lim":128}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"title: CareFlow User Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"Careflow is a **desktop application for patient and drug inventory management, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"If you are a receptionist for a GP clinic and you can type fast, Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"1. Ensure you have Java 11 installed in your Computer.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"   * [Installing Java 11 on Windows](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-microsoft-windows-platforms.html#GUID-371F38CC-248F-49EC-BB9C-C37FC89E52A0)","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"   * [Installing Java 11 on macOS](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-macos.html)","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"2. Download the latest `careflow.jar` from [here](https://github.com/AY2223S2-CS2103T-W09-3/tp).","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"3. Copy the file to the folder you want to use as the home folder for your careflowBook.","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar careflow.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"   * `p list` : Lists all patients.","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"   * `d list` : Lists all drugs.","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"   * `p add -n John Doe -g male -p 98765432 -e johnd@example.com -a John street, block 123, #01-01` : Adds a patient named `John Doe` to the patient records.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"   * `p delete -in 3` : Deletes the 3rd patient record shown in the current list.","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"   * `p clear` : Deletes all patient records.","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"   * `d clear` : Deletes all drug records","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"#### Notes about command format:","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"* Words in UPPER CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"e.g. in add -n NAME, NAME is a parameter which can be used as add -n John Doe.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"* Words in `UPPER CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"  e.g. in `add -n NAME`, NAME is a parameter which can be used as `add -n John Doe`.","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"### View help : `g help`","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"Shows all valid command formats and their functionalities.","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"Format: `g help`","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"### Add a Patient record:  `p add`","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"Adds a patient to the list of patients.","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"Format: `p add -n PATIENT_NAME -ic NRIC -p PHONE_NUMBER -e EMAIL -a ADDRESS`","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"* `add -n John Doe -ic T3871918C -p 98765432 -e johnd@example.com -a John Street, Block 123, #01-01`","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"* `add -n Betsy Crowe -ic T8837191D -p 92478963 -e betsycrowe@example.com -a Sambal Street, Block 72, #04-12`","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"### List all Patient records : `p list`","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"Shows a list of all patients in the CareFlow system in alphabetical order.","lastModifiedDate":"2023-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"Format: `p list`","lastModifiedDate":"2023-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"### Clear all Patient records : `p clear`","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"nevinlim"},"content":"Clears all records for patients.","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"nevinlim"},"content":"Format: `p clear`","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"### Retrieve a Patient record by name: `p find`","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-02-23"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"Format: `p find -n PATIENT_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2023-02-23"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"* Only the name is searched.","lastModifiedDate":"2023-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"* `find John` returns john and John Doe","lastModifiedDate":"2023-02-23"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"* `find alex david` returns Alex Yeoh, David Li","lastModifiedDate":"2023-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"nevinlim"},"content":"### Retrieve a Patient record by NRIC: `p find`","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"Finds patient whose NRIC matches given keyword","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"Format: `p find -ic PATIENT_NRIC`","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"* p find -ic T3871918C","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"* Returns John Doe | T3871918C | 98765432 | johnd@example.com | John Street, Block 123, #01-01","lastModifiedDate":"2023-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"### Delete a Patient record by NRIC: `p delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"Deletes the specified patient from the patient list.","lastModifiedDate":"2023-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"cydtseng"},"content":"Format: `p delete -ic PATIENT_NRIC`","lastModifiedDate":"2023-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":118,"author":{"gitId":"cydtseng"},"content":"* `p delete -ic T1234567B`","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"nevinlim"},"content":"### Delete a Patient record by index: `p delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"cydtseng"},"content":"Deletes the person at the specified INDEX.","lastModifiedDate":"2023-02-23"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-02-23"},{"lineNumber":123,"author":{"gitId":"cydtseng"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"Format: `p delete -in PATIENT_INDEX`","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"cydtseng"},"content":"Example:","lastModifiedDate":"2023-02-23"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"* list followed by p delete -in 2 will delete the 2nd person in the patient list.","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"Jiayan-Lim"},"content":"### Update a patient by name: `p update`","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Jiayan-Lim"},"content":"Edits an existing patient in the careflow.","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"Jiayan-Lim"},"content":"Format: `p update -n PATIENT_NAME -ph PATIENT_PHONE_NUMBER -em PATIENT_EMAIL -ad PATIENT_ADDRESS -dob DATE_OF_BIRTH -g GENDER -ic PATIENT_IC -da PATIENT_DRUG_ALLERGY -ec EMERGENCY_CONTACT_NUMBER`","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"Jiayan-Lim"},"content":"Example:","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Jiayan-Lim"},"content":"* p update John -ph 91234567 -em johndoe@example.com -ec 81234567 Edits the phone number, email address, emergency contact number of John to be 91234567, johndoe@example.com and 81234567 respectively.","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"Jiayan-Lim"},"content":"* p update Bety n/Betsy Crower -da Aspirin Edits the name and drug allergy of Bety to be Betsy Crowers and Aspirin respectively.","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"nevinlim"},"content":"### Add a Drug entry: `d add`","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"nevinlim"},"content":"Adds a drug entry to the list of drugs.","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"nevinlim"},"content":"Format: `d add -tn TRADE_NAME -ai ACTIVE_INGREDIENT -dir DIRECTIONS -pur PURPOSE -se SIDE_EFFECTS -sc STORAGE_COUNT`","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"nevinlim"},"content":"* `d add -tn Panadol -ai Paracetamol, sodium - dir Adults and children above 12 years old, 1-2 capsules - pur treat fever, headache, toothache, rheumatic and muscle pains -se dizziness, fatigue -sc 500`","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"nevinlim"},"content":"### List all Drug entries: `d list`","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"nevinlim"},"content":"Shows a list of all drug entries in the CareFlow system in alphabetical order.","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"nevinlim"},"content":"Format: `d list`","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":155,"author":{"gitId":"nevinlim"},"content":"### Retrieve a Drug entry by TRADE_NAME: `d find`","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"nevinlim"},"content":"Finds drug(s) whose trade_name contains any of the given keywords.","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"nevinlim"},"content":"Format: `d find -tn TRADE_NAME`","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"nevinlim"},"content":"* The search is case-insensitive. e.g panadol will match Panadol.","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"nevinlim"},"content":"* Only the trade name is searched.","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"nevinlim"},"content":"### Delete a Drug entry by TRADE_NAME: `d delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"nevinlim"},"content":"Deletes the specified drug entry that matches the trade name keyword from the drug list.","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"Format: `d delete -tn TRADE_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":169,"author":{"gitId":"cydtseng"},"content":"* `d delete -tn Panadol Flu Max`","lastModifiedDate":"2023-02-23"},{"lineNumber":170,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":171,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":172,"author":{"gitId":"nevinlim"},"content":"### Delete a Drug entry by INDEX : `d delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"nevinlim"},"content":"Deletes the specified drug entry from the drug list based on the index of the drug list.","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":175,"author":{"gitId":"cydtseng"},"content":"Format: `d delete -i DRUG_INDEX`","lastModifiedDate":"2023-02-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"cydtseng"},"content":"* `d delete -i 7`","lastModifiedDate":"2023-02-23"},{"lineNumber":179,"author":{"gitId":"nevinlim"},"content":"* This deletes the 7th drug entry in the most recently shown list","lastModifiedDate":"2023-03-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"nevinlim"},"content":"### Clear all Drug entries : `d clear`","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"cydtseng"},"content":"Clears all entries for drugs.","lastModifiedDate":"2023-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"cydtseng"},"content":"Format: `d clear`","lastModifiedDate":"2023-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"nevinlim"},"content":"### Update storage count of a Drug entry: `d update`","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"nevinlim"},"content":"Updates the storage count of specified drug entry based on trade name keyword from drug list.","lastModifiedDate":"2023-03-07"},{"lineNumber":190,"author":{"gitId":"nevinlim"},"content":"* NOTE: concatenate + or - in front of value for addition/subtraction respectively","lastModifiedDate":"2023-03-07"},{"lineNumber":191,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":192,"author":{"gitId":"nevinlim"},"content":"Format:","lastModifiedDate":"2023-03-07"},{"lineNumber":193,"author":{"gitId":"nevinlim"},"content":"\u003cbr\u003e`d update -tn TRADE_NAME -up +VALUE` \u003cbr\u003e OR \u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":194,"author":{"gitId":"nevinlim"},"content":"`d update -tn TRADE_NAME -up -VALUE`","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":196,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":197,"author":{"gitId":"nevinlim"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"nevinlim"},"content":"* `d update -tn Panadol Flu Max -up -10`","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"nevinlim"},"content":"  * This **decreases** storage count of the drug entry with trade name matching \"Panadol Flu Max\" by **10**","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"nevinlim"},"content":"* `d update -tn Tylenol PM -up +50`","lastModifiedDate":"2023-03-07"},{"lineNumber":201,"author":{"gitId":"nevinlim"},"content":"  * This **increases** storage count of the drug entry with trade name matching \"Tylenol PM\" by **50**","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":203,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":204,"author":{"gitId":"nevinlim"},"content":"### Exit the program : `g exit`","lastModifiedDate":"2023-03-07"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"nevinlim"},"content":"Format: `g exit`","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"cydtseng"},"content":"CareFlow data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":216,"author":{"gitId":"cydtseng"},"content":"All CareFlow data is saved as a JSON file `[JAR file location]/data/careflow.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"cydtseng"},"content":"If your changes to the data file makes its format invalid, CareFlow will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"cydtseng"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CareFlow home folder.","lastModifiedDate":"2023-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"cydtseng"},"content":"## Command Summary","lastModifiedDate":"2023-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"nevinlim"},"content":"| Action                        | Format, Examples                                                                                                                                                                                                                               |","lastModifiedDate":"2023-03-07"},{"lineNumber":238,"author":{"gitId":"nevinlim"},"content":"|-------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-07"},{"lineNumber":239,"author":{"gitId":"nevinlim"},"content":"| **Help**                      | `g help`                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-07"},{"lineNumber":240,"author":{"gitId":"nevinlim"},"content":"| **Add patient**               | `p add -n NAME -p PHONE_NUMBER -e EMAIL -a ADDRESS` \u003cbr\u003e e.g., `add -n John Doe -p 98765432 -e johnd@example.com -a John street, block 123, #01-01`                                                                                            |","lastModifiedDate":"2023-03-07"},{"lineNumber":241,"author":{"gitId":"nevinlim"},"content":"| **List patient**              | `p list`                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-07"},{"lineNumber":242,"author":{"gitId":"nevinlim"},"content":"| **Clear all patient**         | `p clear`                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-03-07"},{"lineNumber":243,"author":{"gitId":"nevinlim"},"content":"| **Find patient by name**      | `p find -n PATIENT_NAME` \u003cbr\u003e e.g., `p find -n John` returns `john` and `John Doe`                                                                                                                                                             |","lastModifiedDate":"2023-03-07"},{"lineNumber":244,"author":{"gitId":"nevinlim"},"content":"| **Find patient by NRIC**      | `p find -ic PATIENT_NRIC` \u003cbr\u003e e.g., `find -ic T0021248C`                                                                                                                                                                                      |","lastModifiedDate":"2023-03-07"},{"lineNumber":245,"author":{"gitId":"nevinlim"},"content":"| **Delete patient by index**   | `p delete -in PATIENT_INDEX` \u003cbr\u003e e.g., `delete -in 3`                                                                                                                                                                                         |","lastModifiedDate":"2023-03-07"},{"lineNumber":246,"author":{"gitId":"nevinlim"},"content":"| **Delete patient by NRIC**    | `p delete -ic PATIENT_NRIC` \u003cbr\u003e e.g., `delete -ic T0021248C`                                                                                                                                                                                  |","lastModifiedDate":"2023-03-07"},{"lineNumber":247,"author":{"gitId":"nevinlim"},"content":"| **Add a drug**                | `d add -tn TRADE_NAME -ai ACTIVE_INGREDIENT -dir DIRECTIONS -pur PURPOSE -se SIDE_EFFECTS -sc STORAGE_COUNT` \u003cbr\u003e e.g., `d add -tn Panadol -ai paracetamol, sodium -dir Adults, 1-2 capsules -pur treat fever, headache -se dizziness -sc 500` |","lastModifiedDate":"2023-03-07"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"| **List drug**                 | `d list`                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-07"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":"| **Clear all drugs**           | `d clear`                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-03-07"},{"lineNumber":250,"author":{"gitId":"nevinlim"},"content":"| **Find drug by trade name**   | `d find -tn TRADE_NAME` \u003cbr\u003e e.g., `d find -tn panadol`                                                                                                                                                                                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":251,"author":{"gitId":"nevinlim"},"content":"| **Delete drug by trade name** | `d delete -tn TRADE_NAME`\u003cbr\u003e e.g., `d delete -tn Panadol Flu Max`                                                                                                                                                                             |","lastModifiedDate":"2023-03-07"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"| **Delete drug by index**      | `d delete -i INDEX`\u003cbr\u003e e.g.,`d delete -i 7`                                                                                                                                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"| **Update drug storage count** | `d update -tn TRADE_NAME -sc +-VALUE`\u003cbr\u003e e.g.,`d update -tn Panadol Flu Max -sc +90`                                                                                                                                                          |","lastModifiedDate":"2023-03-07"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"| **Exit**                      | `g exit`                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-07"},{"lineNumber":255,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":67,"cydtseng":69,"-":109,"Jiayan-Lim":10}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"nevinlim"},"content":"    content: \"CareFlow\";","lastModifiedDate":"2023-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"nevinlim":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"title: CareFlow","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S2/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"**CareFlow is a desktop application for patient and drug inventory management of medical clinics.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"* If you are interested in using CareFlow, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"* If you are interested about developing CareFlow, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nevinlim":6,"-":12}},{"path":"docs/team/cshuwen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"title: Chen Shuwen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"### Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"Careflow is a desktop application for patient and drug inventory management, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"CShuwen":20}},{"path":"docs/team/cydtseng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"title: Tseng Chen-Yu\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"### Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"Careflow is a desktop application for patient and drug inventory management of medical clinics, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":21}},{"path":"docs/team/emrysil.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"# Xintong\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"### Project: CareFlow","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"Careflow is a desktop application for patient and drug inventory management, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"- **New Feature**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"- **New Feature**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"- **Code contributed**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"- **Enhancements to existing features**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"- **Documentation**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"  - Contributions to User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"  - Contributions to Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"- **Community**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"- **Tools**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":25}},{"path":"docs/team/jiayan-lim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"title: Jiayan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"# Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"Careflow is a desktop application for patient and drug inventory management of medical clinics, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"### Summary of Contributions (to be added soon)","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Jiayan-Lim":18}},{"path":"docs/team/nevinlim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"# Nevin\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"##Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"***CareFlow*** is a desktop application for _patient and drug inventory management of medical clinics_, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"***CareFlow*** can get your patient and drugs management tasks done **faster** than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"## \u003cins\u003eCode contributed: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"* Give a link to your code on tP Code Dashboard. The link is available in the Project List Page -- linked to the  icon under your profile picture.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eEnhancements implemented: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"* A summary of the enhancements you implemented.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to the UG: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"* Which sections did you contribute to the UG?","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to the DG: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"* Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to team-based tasks\u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eReview/mentoring contributions: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"* Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions beyond the project team: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"* Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"* Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":41}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"Emrysil"},"content":"Simply add the following to [`seedu.address.ui.PatientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Emrysil":1,"-":400}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogic;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogicManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModelManager;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.DrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.PatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.CareFlowStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.CareFlowStorageManager;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.DrugInventoryStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.JsonDrugInventoryStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.JsonPatientRecordStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.PatientRecordStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowLogic logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowStorage storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowModel model;","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CareFlow ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        PatientRecordStorage patientRecordStorage \u003d new JsonPatientRecordStorage(userPrefs.getPatientRecordFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        DrugInventoryStorage drugInventoryStorage \u003d new JsonDrugInventoryStorage(userPrefs.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        storage \u003d new CareFlowStorageManager(patientRecordStorage, drugInventoryStorage, userPrefsStorage);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        logic \u003d new CareFlowLogicManager(model, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    private CareFlowModel initModelManager(CareFlowStorage careFlowStorage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyPatientRecord\u003e patientRecordOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyDrugInventory\u003e drugInventoryOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyPatientRecord initialDataPatient;","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyDrugInventory initialDataDrug;","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"            patientRecordOptional \u003d storage.readPatientRecord();","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"            drugInventoryOptional \u003d storage.readDrugInventory();","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"            if (patientRecordOptional.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"                logger.info(\"Patient data file not found. Will be starting with a sample Patient Record\");","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"            if (drugInventoryOptional.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"                logger.info(\"Drug data file not found. Will be starting with a sample Drug Inventory\");","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d patientRecordOptional.orElseGet(SampleDataUtil::getSamplePatientRecord);","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d drugInventoryOptional.orElseGet(SampleDataUtil::getSampleDrugInventory);","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with empty Patient Record and Drug \"","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"nevinlim"},"content":"                    + \"Inventory\");","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"nevinlim"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with a empty Patient Record and \"","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"nevinlim"},"content":"                    + \"Drug Inventory\");","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"        return new CareFlowModelManager(initialDataPatient, initialDataDrug, userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"nevinlim"},"content":"        logger.info(\"Starting CareFlow \" + MainApp.VERSION);","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"nevinlim"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping CareFlow ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nevinlim":7,"Emrysil":43,"-":151}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_UNKNOWN_OPERATION_TYPE \u003d \"Unknown operation type\";","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_IC \u003d \"The patient NRIC provided is not found\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_INVALID_DRUG_DISPLAYED_INDEX \u003d \"The drug index provided is invalid\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_DRUGS_LISTED_OVERVIEW \u003d \"%1$d drugs listed!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nevinlim":2,"Emrysil":1,"CShuwen":3,"-":12}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"     * Convert given string to lowercase.","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"    public static String makeStringCaseInsensitive(String s) {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"        return s.toLowerCase();","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":68,"Jiayan-Lim":9}},{"path":"src/main/java/seedu/address/logic/CareFlowLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":" * API of the CareFlow Logic component","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowLogic {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * Returns the PatientRecord","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyPatientRecord getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Returns the DrugInventory","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyDrugInventory getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered list of drugs */","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nevinlim":1,"Emrysil":22,"-":40,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/logic/CareFlowLogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.CareFlowParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"import seedu.address.storage.CareFlowStorage;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":" * The main LogicManager of the CareFlow application.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"public class CareFlowLogicManager implements CareFlowLogic {","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CareFlowLogicManager.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowModel model;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowStorage storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowParser careFlowParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code CareFlowLogicManager} with the given {@code CareFlowModel} and {@code Storage}.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    public CareFlowLogicManager(CareFlowModel model, CareFlowStorage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        this.careFlowParser \u003d new CareFlowParser();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        Command command \u003d careFlowParser.parseCommand(commandText);","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"            storage.savePatientRecord(model.getPatientRecord());","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"            storage.saveDrugInventory(model.getDrugInventory());","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + e, e);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        return commandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        return model.getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        return model.getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getFilteredDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        return model.getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        return model.getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        return model.getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":7,"Emrysil":89,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    // @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    //    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    //        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    //        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    //            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    //        }","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    //        model.addPerson(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    //        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    //    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":17,"-":54}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public abstract CommandResult execute(CareFlowModel model) throws CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":2,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    //    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    //    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    //        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    //        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    //        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    //            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    //        }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    //        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    //        model.deletePerson(personToDelete);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    //        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    //    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":19,"-":32}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    //    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    //    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    //        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    //        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    //        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    //            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    //        }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    //        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    //        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    //        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    //            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    //        }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    //","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    //        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    //        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    //        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    //    }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Emrysil":26,"-":202}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    //    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    //    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    //        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    //    }","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Emrysil":8,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    //    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    //    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    //        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    //        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    //        return new CommandResult(","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    //                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    //    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Emrysil":14,"-":31}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"            + \"Example: g \" + COMMAND_WORD;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    //    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    //    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    //        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    //    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nevinlim":1,"Emrysil":9,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    //    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    //    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    //        requireNonNull(model);","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    //        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    //        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    //    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        return null;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":11,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVE_INGREDIENT;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIRECTION;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PURPOSE;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SIDE_EFFECT;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STORAGE_COUNT;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * Adds a drug to the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \":Adds a drug to the drug inventory. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_TRADE_NAME + \" TRADE NAME \"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_ACTIVE_INGREDIENT + \" ACTIVE INGREDIENT \"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_PURPOSE + \" PURPOSE(S)... \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_SIDE_EFFECT + \" SIDE EFFECT(S)... \"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_DIRECTION + \" DIRECTION\"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_STORAGE_COUNT + \" STORAGE COUNT\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_TRADE_NAME + \" Panadol \"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_ACTIVE_INGREDIENT + \" Paracetamol \"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_PURPOSE + \" relieve pain / relieve fever / relieve headache\"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_SIDE_EFFECT + \" skin rash / swelling of the lips, tongue, throat or face / nausea / \"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"            + \"unexplained bruising or bleeding\"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_DIRECTION + \" Adults and children over 12 years: 1-2 caplets taken every 4 to 6 hours. Not \"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"            + \"recommended for children under 12 years. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_STORAGE_COUNT + \" 50 \";","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New drug added: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_DUPLICATE_DRUG \u003d \"This drug already exists in the drug inventory\";","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    public final Drug toAdd;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"     * Creates an AddCommand to add the specified {@code Drug}","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"     * @param drug the Drug to be added","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public AddCommand(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        toAdd \u003d drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"        if (model.hasDrug(toAdd)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DRUG);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"        model.addDrug(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":23,"Emrysil":42}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.DrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":" * Empties the existing Drug inventory","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Drug inventory has been cleared!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        model.setDrugInventory(new DrugInventory());","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":5,"Emrysil":22}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * Deletes a drug from the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Drug: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Drug not found: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            + \":  Deletes the drug identified by the index number used in the displayed drug list.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_INDEX + \"INDEX\"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            + COMMAND_WORD + \":  Deletes the drug identified by its trade name.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_TRADE_NAME + \"TRADE NAME\"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD + \" Panadol \";","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"    private TradeName targetTradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    public DeleteCommand(TradeName targetTradeName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        this.targetTradeName \u003d targetTradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"        List\u003cDrug\u003e drugList \u003d model.getFilteredDrugList();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        if (targetTradeName \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d drugList.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_DRUG_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"            Drug drugToDelete \u003d drugList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"            model.deleteDrug(drugToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, drugToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"            Drug drugToDelete \u003d null;","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"            for (Drug drug : drugList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                if (drug.getTradeName().equals(targetTradeName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                    drugToDelete \u003d drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"            if (drugToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"                throw new CommandException(String.format(MESSAGE_FAILURE, targetTradeName));","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"            model.deleteDrug(drugToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, drugToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":57,"Emrysil":17}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Finds a drug from the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    //public static final String MESSAGE_SUCCESS \u003d \"Found matching Drug(s): %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"            + \": Finds all drug(s) whose trade name contain any of \"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD + \" Panadol\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    private final TradeNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    public FindCommand(TradeNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"        model.updateFilteredDrugList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                String.format(Messages.MESSAGE_DRUGS_LISTED_OVERVIEW, model.getFilteredDrugList().size()));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":22,"Emrysil":16}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Lists all drugs in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all drugs\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        model.updateFilteredDrugList(model.PREDICATE_SHOW_ALL_DRUGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":6,"Emrysil":17}},{"path":"src/main/java/seedu/address/logic/commands/drugcommands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package seedu.address.logic.commands.drugcommands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPDATE;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":" * Updates the storage count of an existing Drug in the drug inventory.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Drug: %1$s \\nUpdated storage count: %2$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Drug not found: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"            + \": Updates storage count of drug whose trade name matches given trade name.\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_TRADE_NAME + \" TRADENAME\"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_UPDATE + \" UPDATE VALUE (add + or - in front for addition/deduction) \\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_TRADE_NAME + \" Panadol\"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_UPDATE + \"+30\";","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"    private final TradeName tradeName;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    private final Integer value;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    private final boolean add;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"     * @param tradeName the tradeName keyword to identify the existing Drug to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"     * @param value the update value in integer for storage count","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"     * @param add a boolean to denote addition or subtraction for the update value","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"    public UpdateCommand(TradeName tradeName, Integer value, boolean add) {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        this.add \u003d add;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"        List\u003cDrug\u003e drugList \u003d model.getFilteredDrugList();","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"        Drug toUpdate \u003d null;","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"        for (Drug drug : drugList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"            if (drug.getTradeName().equals(tradeName)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"                if (add) {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                    drug.getStorageCount().incStorage(value);","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                    drug.getStorageCount().decrStorage(value);","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                toUpdate \u003d drug;","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"                model.setDrug(drug, drug);","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                break;","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"        if (toUpdate \u003d\u003d null) {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, tradeName));","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"                String.format(MESSAGE_SUCCESS, toUpdate.getTradeName(), toUpdate.getStorageCount()));","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nevinlim":74}},{"path":"src/main/java/seedu/address/logic/commands/generalcommand/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.generalcommand;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Terminates the program.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public CommandResult execute(CareFlowModel model) {","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":4,"Emrysil":15}},{"path":"src/main/java/seedu/address/logic/commands/generalcommand/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.generalcommand;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"            + \"Example: g \" + COMMAND_WORD;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":5,"Emrysil":17}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" * Adds a patient to the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to patient records. \"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DOB + \"DOB \"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_IC + \"IC\"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DRUG_ALLERGY + \"DRUG ALLERGY \"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_NUMBER + \"EMERGENCY CONTACT NUMBER\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_NAME + \"Tom Smith \"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_PHONE + \"84356788 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMAIL + \"tsmith@gmail.com \"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_ADDRESS + \"969 Lock Street #04-32 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DOB + \"2001-05-28 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_GENDER + \"MALE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_IC + \"T0278234M \"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DRUG_ALLERGY + \"Aspirin \"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMERGENCY_CONTACT_NUMBER + \"93746552\\n\";","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"    private final Patient patientToAdd;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"     * @param patient Patient to be added","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"        patientToAdd \u003d patient;","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"                || (other instanceof AddCommand","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"                \u0026\u0026 patientToAdd.equals(((AddCommand) other).patientToAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"    public CommandResult execute(CareFlowModel careFlowModel) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(careFlowModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"        if (careFlowModel.hasPatient(patientToAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        careFlowModel.addPatient(patientToAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patientToAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":15,"cydtseng":48,"Emrysil":15,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.PatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":" * Empties the existing Patient records","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient record has been cleared!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        model.setPatientRecord(new PatientRecord());","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":5,"Emrysil":19}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * Deletes a patient from the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"            + COMMAND_WORD + \":  Deletes the the patient identified by the IC number.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"            + PREFIX_IC + \"TRADE NAME\"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"            + \"Example: \" + COMMAND_WORD + \" T1234567A \";","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted patient: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    private Ic targetIc;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"    public DeleteCommand(Ic ic) {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"        this.targetIc \u003d ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof seedu.address.logic.commands.patientcommands.DeleteCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 targetIndex.equals((","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"                        (seedu.address.logic.commands.patientcommands.DeleteCommand)","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"                                other).targetIndex)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"     *  Executes the Patient deletion","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"     * @return The command result if deletion is successful","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"     * @throws CommandException If an error occurred during deletion","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"        List\u003cPatient\u003e patientList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"        if (targetIc \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d patientList.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"CShuwen"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"CShuwen"},"content":"            Patient patientToDelete \u003d patientList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"CShuwen"},"content":"            model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"CShuwen"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"CShuwen"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"CShuwen"},"content":"            Patient patientToDelete \u003d null; // delete using patient ic","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"CShuwen"},"content":"            for (Patient patient : patientList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"CShuwen"},"content":"                if (patient.getIc().equals(targetIc)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"CShuwen"},"content":"                    patientToDelete \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"CShuwen"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"CShuwen"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"CShuwen"},"content":"            if (patientToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"CShuwen"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_IC);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"CShuwen"},"content":"            model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"CShuwen"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":16,"Emrysil":15,"CShuwen":57,"Jiayan-Lim":2}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Finds a patient from the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patient whose names contain any of \"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"    public CommandResult execute(CareFlowModel model) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"                || (other instanceof seedu.address.logic.commands.FindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 predicate.equals((","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"                        (seedu.address.logic.commands.patientcommands.FindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":4,"Emrysil":15,"CShuwen":24}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Lists all patients in the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        model.updateFilteredPatientList(model.PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":6,"Emrysil":17}},{"path":"src/main/java/seedu/address/logic/commands/patientcommands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.logic.commands.patientcommands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.model.CareFlowModel.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.CareFlowModel;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":" * Update the details of an existing person in the careflow.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"            + \": Update the details of the person identified given the patient name.\"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Parameters: Patient name\"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_ADDRESS + \" ADDRESS] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_DOB + \" DATE OF BIRTH] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_GENDER + \" GENDER] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_IC + \" IC] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_NAME + \" DRUG ALLERGY NUMBER] \\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"[ \" + PREFIX_EMERGENCY_CONTACT_NUMBER + \" EMEMRGENCY CONTACT] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Example: \" + COMMAND_WORD + \" John \"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_DRUG_ALLERGY + \"Aspirin \"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_EMERGENCY_CONTACT_NUMBER + \"93746552\\n\";","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Updated Person: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param name of the person in the filtered person list to edit","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"    public UpdateCommand(Name name, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Jiayan-Lim"},"content":"    public CommandResult execute(CareFlowModel careFlowModel) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(careFlowModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"        List\u003cPatient\u003e lastShownList \u003d careFlowModel.getFilteredPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Jiayan-Lim"},"content":"        Patient patientToEdit \u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"        for (Patient patient: lastShownList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"            if (patient.getName().equals(name)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"                patientToEdit \u003d patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Jiayan-Lim"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"        Patient editedPatient \u003d createEditedPerson(requireNonNull(patientToEdit), editPersonDescriptor);","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!patientToEdit.isSamePerson(editedPatient) \u0026\u0026 careFlowModel.hasPatient(editedPatient)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Jiayan-Lim"},"content":"        careFlowModel.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Jiayan-Lim"},"content":"        careFlowModel.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Jiayan-Lim"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"Jiayan-Lim"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"Jiayan-Lim"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"Jiayan-Lim"},"content":"    private static Patient createEditedPerson(Patient patientToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"Jiayan-Lim"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"Jiayan-Lim"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"Jiayan-Lim"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"Jiayan-Lim"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"Jiayan-Lim"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"Jiayan-Lim"},"content":"        DateOfBirth updatedBirthDate \u003d editPersonDescriptor.getDateOfBirth().orElse(patientToEdit.getBirthDate());","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"Jiayan-Lim"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(patientToEdit.getGender());","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"Jiayan-Lim"},"content":"        Ic updatedIc \u003d editPersonDescriptor.getIc().orElse(patientToEdit.getIc());","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"Jiayan-Lim"},"content":"        DrugAllergy updatedDrugAllergy \u003d editPersonDescriptor","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"Jiayan-Lim"},"content":"                .getDrugAllergy()","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"Jiayan-Lim"},"content":"                .orElse(patientToEdit.getDrugAllergy());","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"Jiayan-Lim"},"content":"        Phone updatedEmergencyContact \u003d editPersonDescriptor","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"Jiayan-Lim"},"content":"                .getEmergencyContact()","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Jiayan-Lim"},"content":"                .orElse(patientToEdit.getEmergencyContact());","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Jiayan-Lim"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate, updatedGender,","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"Jiayan-Lim"},"content":"                updatedIc, updatedDrugAllergy, updatedEmergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Jiayan-Lim"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"Jiayan-Lim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"Jiayan-Lim"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Jiayan-Lim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!(other instanceof UpdateCommand)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Jiayan-Lim"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"Jiayan-Lim"},"content":"        UpdateCommand e \u003d (UpdateCommand) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"Jiayan-Lim"},"content":"        return name.equals(e.name)","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"Jiayan-Lim"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"Jiayan-Lim"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"Jiayan-Lim"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"Jiayan-Lim"},"content":"        private Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"Jiayan-Lim"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"Jiayan-Lim"},"content":"        private Email email;","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"Jiayan-Lim"},"content":"        private Address address;","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"Jiayan-Lim"},"content":"        private DateOfBirth dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"Jiayan-Lim"},"content":"        private Gender gender;","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"Jiayan-Lim"},"content":"        private Ic ic;","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"Jiayan-Lim"},"content":"        private DrugAllergy drugAllergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"Jiayan-Lim"},"content":"        private Phone emergencyContact;","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"Jiayan-Lim"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"Jiayan-Lim"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"Jiayan-Lim"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"Jiayan-Lim"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"Jiayan-Lim"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"Jiayan-Lim"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"Jiayan-Lim"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"Jiayan-Lim"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"Jiayan-Lim"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"Jiayan-Lim"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"Jiayan-Lim"},"content":"            setDateOfBirth(toCopy.dateOfBirth);","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"Jiayan-Lim"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"Jiayan-Lim"},"content":"            setIc(toCopy.ic);","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"Jiayan-Lim"},"content":"            setDrugAllergy(toCopy.drugAllergy);","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"Jiayan-Lim"},"content":"            setEmergencyContact(toCopy.emergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"Jiayan-Lim"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"Jiayan-Lim"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"Jiayan-Lim"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"Jiayan-Lim"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"Jiayan-Lim"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address,","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"Jiayan-Lim"},"content":"                    dateOfBirth, gender, ic, drugAllergy, emergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"Jiayan-Lim"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Jiayan-Lim"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"Jiayan-Lim"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"Jiayan-Lim"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setDateOfBirth(DateOfBirth dateOfBirth) {","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"Jiayan-Lim"},"content":"            this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cDateOfBirth\u003e getDateOfBirth() {","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(dateOfBirth);","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"Jiayan-Lim"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setIc(Ic ic) {","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"Jiayan-Lim"},"content":"            this.ic \u003d ic;","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cIc\u003e getIc() {","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(ic);","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setDrugAllergy(DrugAllergy drugAllergy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"Jiayan-Lim"},"content":"            this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cDrugAllergy\u003e getDrugAllergy() {","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(drugAllergy);","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setEmergencyContact(Phone emergencyContact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"Jiayan-Lim"},"content":"            this.emergencyContact \u003d emergencyContact;","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cPhone\u003e getEmergencyContact() {","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(emergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"Jiayan-Lim"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"Jiayan-Lim"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"Jiayan-Lim"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"Jiayan-Lim"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"Jiayan-Lim"},"content":"                return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"Jiayan-Lim"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"Jiayan-Lim"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":265,"author":{"gitId":"Jiayan-Lim"},"content":"                return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":267,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":268,"author":{"gitId":"Jiayan-Lim"},"content":"            // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":269,"author":{"gitId":"Jiayan-Lim"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":270,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":271,"author":{"gitId":"Jiayan-Lim"},"content":"            return getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":272,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-08"},{"lineNumber":273,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-08"},{"lineNumber":274,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getDateOfBirth().equals(e.getDateOfBirth())","lastModifiedDate":"2023-03-08"},{"lineNumber":275,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getIc().equals(e.getIc())","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getDrugAllergy().equals(e.getDrugAllergy())","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getEmergencyContact().equals(e.getEmergencyContact());","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"nevinlim":1,"Jiayan-Lim":280}},{"path":"src/main/java/seedu/address/logic/parser/CareFlowParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_OPERATION_TYPE;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.drugparser.DrugParser;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.generalparser.GeneralParser;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.patientparser.PatientParser;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * Represents a Parser that is able to parse user input.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * CareFlow Parser will distribute commands to DrugParser, PatientParser and GeneralParser based on the","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * operation type. ie. operation type can be \"p\", \"d\" or \"g\"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class CareFlowParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003copType\u003e[pdg])\\\\s(?\u003ccommandWord\u003e\\\\S+)\"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * Parses user input and distribute different operations to specific parsers.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on user input","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        // \"d\" for drug related operations, \"p\" for patient related operations and \"g\" for general operations","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        final String opType \u003d matcher.group(\"opType\");","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        switch (opType) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        case DrugParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            return new DrugParser().parse(commandWord, arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        case PatientParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            return new PatientParser().parse(commandWord, arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        case GeneralParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            return new GeneralParser().parse(commandWord);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_OPERATION_TYPE);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":1,"Emrysil":49}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /* Prefix definitions for patient */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-ph\");","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-em\");","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-ad\");","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"-dob\");","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DRUG_ALLERGY \u003d new Prefix(\"-da\");","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"-g\");","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_IC \u003d new Prefix(\"-ic\");","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"    public static final Prefix PREFIX_EMERGENCY_CONTACT_NUMBER \u003d new Prefix(\"-ec\");","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /* Prefix definitions for drug*/","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_ACTIVE_INGREDIENT \u003d new Prefix(\"-ai\");","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DIRECTION \u003d new Prefix(\"-dir\");","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_PURPOSE \u003d new Prefix(\"-pur\");","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_SIDE_EFFECT \u003d new Prefix(\"-se\");","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_STORAGE_COUNT \u003d new Prefix(\"-sc\");","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_TRADE_NAME \u003d new Prefix(\"-tn\");","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"-i\");","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    public static final Prefix PREFIX_UPDATE \u003d new Prefix(\"-up\");","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nevinlim":2,"cydtseng":1,"Emrysil":17,"-":10}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Direction;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Purpose;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.SideEffect;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.StorageCount;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String birthDate} into a {@code DateOfBirth}","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code birthDate} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"cydtseng"},"content":"    public static DateOfBirth parseDateOfBirth(String birthDate) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"cydtseng"},"content":"        String trimmedBirthDate \u003d birthDate.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"cydtseng"},"content":"        if (!DateOfBirth.isValidBirthDate(trimmedBirthDate)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"cydtseng"},"content":"        return new DateOfBirth(trimmedBirthDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String gender} into a {@code Gender}","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"cydtseng"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"cydtseng"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"cydtseng"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"cydtseng"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String icNumber} into a {@code Ic}","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code icNumber} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"    public static Ic parseIc(String icNumber) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"cydtseng"},"content":"        String trimmedIcNumber \u003d icNumber.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"cydtseng"},"content":"        if (!Ic.isValidIc(trimmedIcNumber)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"cydtseng"},"content":"        return new Ic(trimmedIcNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String drugAllergy} into a {@code DrugAllergy}","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code drugAllergy} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"cydtseng"},"content":"    public static DrugAllergy parseDrugAllergy(String drugAllergy) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"Jiayan-Lim"},"content":"        if (drugAllergy \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"Jiayan-Lim"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"cydtseng"},"content":"        String trimmedDrugAllergy \u003d drugAllergy.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"cydtseng"},"content":"        if (!DrugAllergy.isValidDrugAllergy(trimmedDrugAllergy)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"cydtseng"},"content":"        return new DrugAllergy(trimmedDrugAllergy);","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"Jiayan-Lim"},"content":"     * Parses a {@code String emergencyContact} into a {@code EmergencyContact}.","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"Jiayan-Lim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"Jiayan-Lim"},"content":"     * @throws ParseException if the given {@code EmergencyContact} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"Jiayan-Lim"},"content":"    public static Phone parseEmergencyContact(String emergencyContact) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"Jiayan-Lim"},"content":"        if (emergencyContact \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"Jiayan-Lim"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"Jiayan-Lim"},"content":"        String trimmedEmergencyContact \u003d emergencyContact.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!Phone.isValidPhone(trimmedEmergencyContact)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"Jiayan-Lim"},"content":"        return new Phone(trimmedEmergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String tradeName} into a {@code TradeName}.","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code tradeName} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"nevinlim"},"content":"    public static TradeName parseTradeName(String tradeName) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"nevinlim"},"content":"        String trimmedTradeName \u003d tradeName.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"nevinlim"},"content":"        if (!TradeName.isValidTradeName(trimmedTradeName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(TradeName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"nevinlim"},"content":"        return new TradeName(trimmedTradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String ingredient} into a {@code ActiveIngredient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code ingredient} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"nevinlim"},"content":"    public static ActiveIngredient parseActiveIngredient(String ingredient) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"nevinlim"},"content":"        String trimmedIngredient \u003d ingredient.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"nevinlim"},"content":"        if (!ActiveIngredient.isValidIngredient(trimmedIngredient)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(ActiveIngredient.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"nevinlim"},"content":"        return new ActiveIngredient(trimmedIngredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String direction} into a {@code Direction}.","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code direction} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"nevinlim"},"content":"    public static Direction parseDirection(String direction) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(direction);","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"nevinlim"},"content":"        String trimmedDirection \u003d direction.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"nevinlim"},"content":"        if (!Direction.isValidDirection(trimmedDirection)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(Direction.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":"        return new Direction(trimmedDirection);","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String purpose} into a {@code Purpose}.","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code purpose} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"nevinlim"},"content":"    public static Purpose parsePurpose(String purpose) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(purpose);","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"nevinlim"},"content":"        String trimmedPurpose \u003d purpose.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"nevinlim"},"content":"        if (!Purpose.isValidPurpose(trimmedPurpose)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(Purpose.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"nevinlim"},"content":"        return new Purpose(trimmedPurpose);","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String sideEffect} into a {@code SideEffect}.","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code sideEffect} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"nevinlim"},"content":"    public static SideEffect parseSideEffect(String sideEffect) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(sideEffect);","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"nevinlim"},"content":"        String trimmedSideEffect \u003d sideEffect.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"nevinlim"},"content":"        if (!SideEffect.isValidSideEffect(trimmedSideEffect)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(SideEffect.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"nevinlim"},"content":"        return new SideEffect(trimmedSideEffect);","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String count} into a {@code StorageCount}.","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code count} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"nevinlim"},"content":"    public static StorageCount parseStorageCount(String count) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"nevinlim"},"content":"        String trimmedCount \u003d count.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"nevinlim"},"content":"        if (!StorageCount.isValidStorageCount(trimmedCount)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(StorageCount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"nevinlim"},"content":"        return new StorageCount(trimmedCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nevinlim":120,"cydtseng":33,"-":124,"Jiayan-Lim":20}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ACTIVE_INGREDIENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DIRECTION;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PURPOSE;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SIDE_EFFECT;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STORAGE_COUNT;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.drugcommands.AddCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Direction;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Purpose;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.SideEffect;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.StorageCount;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                ArgumentTokenizer.tokenize(userInput,","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_TRADE_NAME, PREFIX_ACTIVE_INGREDIENT,","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_DIRECTION, PREFIX_PURPOSE,","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_SIDE_EFFECT, PREFIX_STORAGE_COUNT);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TRADE_NAME, PREFIX_ACTIVE_INGREDIENT, PREFIX_DIRECTION,","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                PREFIX_PURPOSE, PREFIX_SIDE_EFFECT, PREFIX_STORAGE_COUNT)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                    seedu.address.logic.commands.drugcommands.AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"        TradeName tradeName \u003d ParserUtil.parseTradeName(argMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"        ActiveIngredient activeIngredient \u003d ParserUtil.parseActiveIngredient(","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_ACTIVE_INGREDIENT).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        Direction direction \u003d ParserUtil.parseDirection(argMultimap.getValue(PREFIX_DIRECTION).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"        Purpose purpose \u003d ParserUtil.parsePurpose(argMultimap.getValue(PREFIX_PURPOSE).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        SideEffect sideEffect \u003d ParserUtil.parseSideEffect(argMultimap.getValue(PREFIX_SIDE_EFFECT).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        StorageCount storageCount \u003d ParserUtil.parseStorageCount(argMultimap.getValue(PREFIX_STORAGE_COUNT).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"        Drug drug \u003d new Drug(tradeName, activeIngredient, direction, purpose, sideEffect, storageCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"        return new AddCommand(drug);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":54,"Emrysil":11}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        if (arePrefixesPresent(argumentMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            Index index \u003d ParserUtil.parseIndex(argumentMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TRADE_NAME);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_TRADE_NAME)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                TradeName tradeName \u003d ParserUtil.parseTradeName(argMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"                return new DeleteCommand(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                        seedu.address.logic.commands.drugcommands.DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":35,"Emrysil":12}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/DrugParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.AddCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.ClearCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.ListCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.drugcommands.UpdateCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class DrugParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"d\";","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param arguments arguments specific to the command","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"            return new UpdateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":3,"Emrysil":44}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.drugcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public FindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"                    String.format(","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"                            MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"                            seedu.address.logic.commands.drugcommands.FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        String[] tradeNameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        return new seedu.address.logic.commands.drugcommands.FindCommand(","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"                new TradeNameContainsKeywordsPredicate(Arrays.asList(tradeNameKeywords)));","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"nevinlim":23,"Emrysil":13}},{"path":"src/main/java/seedu/address/logic/parser/drugparser/UpdateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package seedu.address.logic.parser.drugparser;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_UPDATE;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.drugcommands.UpdateCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":" * Parses input arguments and creates a new UpdateCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    private final char positive \u003d \u0027+\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    private final char negative \u003d \u0027-\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public UpdateCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TRADE_NAME, PREFIX_UPDATE);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        if (arePrefixesPresent(argumentMultimap, PREFIX_TRADE_NAME, PREFIX_UPDATE)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            TradeName tradeName \u003d ParserUtil.parseTradeName(argumentMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            String update \u003d argumentMultimap.getValue(PREFIX_UPDATE).get();","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            boolean add;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            if (update.charAt(0) \u003d\u003d negative) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                add \u003d false;","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"            } else if (update.charAt(0) \u003d\u003d positive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"                add \u003d true;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                throw new ParseException(\"Unknown/missing symbol\"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                        + \" (\u0027+\u0027 for addition and \u0027-\u0027 for subtraction concatenated in front) \"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                        + \"for update value\");","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"                Integer value \u003d Integer.parseInt(update.substring(1));","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                return new UpdateCommand(tradeName, value, add);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                throw new ParseException(\"Update value is invalid, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"                        + \"Please enter only integer values with \u0027+\u0027 or \u0027-\u0027 prefixed.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"                    seedu.address.logic.commands.drugcommands.UpdateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nevinlim":59}},{"path":"src/main/java/seedu/address/logic/parser/generalparser/GeneralParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.generalparser;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.generalcommand.ExitCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.generalcommand.HelpCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class GeneralParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"g\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Emrysil":33}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"     * and returns an AddCommand object for execution of adding a patient.","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"                ArgumentTokenizer.tokenize(userInput,","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_DOB,","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_IC,","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMERGENCY_CONTACT_NUMBER","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"                        );","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DOB, PREFIX_GENDER, PREFIX_IC,","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                PREFIX_DRUG_ALLERGY, PREFIX_EMERGENCY_CONTACT_NUMBER)","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"                    seedu.address.logic.commands.patientcommands.AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        DateOfBirth birthDate \u003d ParserUtil.parseDateOfBirth(","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"        Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"        DrugAllergy drugAllergy \u003d ParserUtil.parseDrugAllergy(","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_DRUG_ALLERGY).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"        Phone emergencyContactNumber \u003d ParserUtil.parsePhone(","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_NUMBER).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"        Patient patient \u003d new Patient(name, phone, email, address, birthDate, gender, ic,","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"                drugAllergy, emergencyContactNumber);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":27,"cydtseng":45,"Emrysil":13,"Jiayan-Lim":5}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"     * and returns an DeleteCommand object for execution of deleting a patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_IC);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_IC)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"                if (argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"                    Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"                    return new DeleteCommand(ic);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"                } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                    throw new ParseException(String.format(","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                            MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                            seedu.address.logic.commands.DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"                Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"                            seedu.address.logic.commands.patientcommands.DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values  in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":14,"Emrysil":12,"CShuwen":31,"Jiayan-Lim":2}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public FindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"                            seedu.address.logic.commands.patientcommands.FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        return new seedu.address.logic.commands.patientcommands.FindCommand(","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"nevinlim":8,"Emrysil":13,"CShuwen":8,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/PatientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.patientcommands.ClearCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.FindCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.commands.patientcommands.ListCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.commands.patientcommands.UpdateCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class PatientParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"p\";","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param arguments arguments specific to the command","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"            return new UpdateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":1,"Emrysil":42,"Jiayan-Lim":3}},{"path":"src/main/java/seedu/address/logic/parser/patientparser/UpdateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.logic.parser.patientparser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.commands.patientcommands.UpdateCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"import seedu.address.logic.commands.patientcommands.UpdateCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":" * Parses input arguments and creates a new UpdateCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"     * and returns an UpdateCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    public UpdateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_DOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_IC,","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_EMERGENCY_CONTACT_NUMBER","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"                        );","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getPreamble());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setDateOfBirth(ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_IC).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setIc(ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_DRUG_ALLERGY).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setDrugAllergy(ParserUtil.parseDrugAllergy(","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"                    argMultimap.getValue(PREFIX_DRUG_ALLERGY).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_NUMBER).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"            editPersonDescriptor.setEmergencyContact(ParserUtil.parseEmergencyContact(","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"                    argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_NUMBER).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new ParseException(UpdateCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"Jiayan-Lim"},"content":"        return new UpdateCommand(name, editPersonDescriptor);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"nevinlim":1,"Jiayan-Lim":92}},{"path":"src/main/java/seedu/address/model/CareFlow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Wraps all data at the CareFlow level","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Duplicates are not allowed","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class CareFlow {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private final PatientRecord patientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private final DrugInventory drugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        patientRecord \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        drugInventory \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"     * creates a CareFlow","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public CareFlow() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"     * Creates a CareFlow using Patients and Drugs in {@code toBeCopiedP @code toBeCopiedD}","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * @param toBeCopiedP the patient records","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     * @param toBeCopiedD the drug inventory","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    public CareFlow(ReadOnlyPatientRecord toBeCopiedP, ReadOnlyDrugInventory toBeCopiedD) {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        resetPatientData(toBeCopiedP);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        resetDrugData(toBeCopiedD);","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        return patientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        return drugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        patientRecord.setPatients(patients);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        drugInventory.setDrugs(drugs);","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow patient record with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    public void resetPatientData(ReadOnlyPatientRecord newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public void resetDrugData(ReadOnlyDrugInventory newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        setDrugs(newData.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.hasPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        return drugInventory.hasDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        patientRecord.addPatient(p);","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug d) {","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        drugInventory.addDrug(d);","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        patientRecord.setPatient(target, editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"     * inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"        drugInventory.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        patientRecord.removePatient(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"    public void removeDrug(Drug key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"        drugInventory.removeDrug(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"    //// util methods","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.toString() + \"\\n\" + drugInventory.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.getPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"        return drugInventory.getDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof CareFlow","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patientRecord.equals(((CareFlow) other).patientRecord)","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugInventory.equals(((CareFlow) other).drugInventory));","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"        return ((Integer) (patientRecord.hashCode() + drugInventory.hashCode())).hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":10,"cydtseng":1,"Emrysil":154,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/model/CareFlowModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * The API of the Model component.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowModel {","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * {@code Predicate} that always evaluates to true.","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    Predicate\u003cDrug\u003e PREDICATE_SHOW_ALL_DRUGS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * Replaces user prefs data with data in {@code userPrefs}.","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    void setPatientRecordFilePath(Path patientRecordFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    void setDrugInventoryFilePath(Path drugInventoryFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * Replaces patient record data with the data in {@code patientRecord}.","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    void setPatientRecord(ReadOnlyPatientRecord patientRecord);","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"     * Replaces drug inventory data with the data in {@code drugInventory}.","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    void setDrugInventory(ReadOnlyDrugInventory drugInventory);","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     * Returns the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyPatientRecord getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     * Returns the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyDrugInventory getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    boolean hasDrug(Drug drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"     * The patient must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"     * Deletes the given drug.","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * The drug must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    void deleteDrug(Drug target);","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"     * {@code patient} must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"     * Adds the given drug.","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"     * {@code drug} must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    void addDrug(Drug drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    void setPatient(Patient target, Patient editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"    void setDrug(Drug target, Drug editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered drug list */","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"     * Updates the filter of the filtered drug list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    void updateFilteredDrugList(Predicate\u003cDrug\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":3,"Emrysil":145,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/model/CareFlowModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":" * Represents the in-memory model of the CareFlow data.","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"public class CareFlowModelManager implements CareFlowModel {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CareFlowModelManager.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    private static final String LOGGER_MESSAGE \u003d \"Initialising with patient record: %s, drug inventory: %s and user \"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"            + \"prefs %s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final CareFlow careFlow;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private final FilteredList\u003cDrug\u003e filteredDrugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Initializes a CareFlowModelManager with the given patientRecord, drugInventory and userPrefs.","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     * @param patientRecord patient records","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"     * @param drugInventory drug inventory","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"     * @param userPrefs user preferences","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    public CareFlowModelManager(ReadOnlyPatientRecord patientRecord, ReadOnlyDrugInventory drugInventory,","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                                ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(drugInventory, patientRecord, userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        logger.fine(String.format(LOGGER_MESSAGE, patientRecord, drugInventory, userPrefs));","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        this.careFlow \u003d new CareFlow(patientRecord, drugInventory);","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        this.filteredPatients \u003d new FilteredList\u003c\u003e(this.careFlow.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        this.filteredDrugs \u003d new FilteredList\u003c\u003e(this.careFlow.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    public CareFlowModelManager() {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        this(new PatientRecord(), new DrugInventory() , new UserPrefs());","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        return userPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        return userPrefs.getPatientRecordFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecordFilePath(Path patientRecordFilePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patientRecordFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setPatientRecordFilePath(patientRecordFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        return userPrefs.getDrugInventoryFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventoryFilePath(Path drugInventoryFilePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drugInventoryFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setDrugInventoryFilePath(drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Patient Record \u0026 Drug Inventory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecord(ReadOnlyPatientRecord patientRecord) {","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        this.careFlow.resetPatientData(patientRecord);","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventory(ReadOnlyDrugInventory drugInventory) {","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        this.careFlow.resetDrugData(drugInventory);","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        return careFlow.getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"        return careFlow.getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"        return careFlow.hasPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"        return careFlow.hasDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    public void deletePatient(Patient target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        careFlow.removePatient(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"    public void deleteDrug(Drug target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"        careFlow.removeDrug(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"        careFlow.addPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        careFlow.addDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"        careFlow.setPatient(target, editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"        careFlow.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"        return filteredPatients;","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getFilteredDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"        return filteredDrugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"    public void updateFilteredDrugList(Predicate\u003cDrug\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"        filteredDrugs.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":18,"Emrysil":164,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/model/DrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.UniqueDrugList;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" * Wraps all data at the Drug Inventory level","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class DrugInventory implements ReadOnlyDrugInventory {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final UniqueDrugList drugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        drugs \u003d new UniqueDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     * creates a DrugInventory using the Drugs in the {@code toBeCopied}","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory(ReadOnlyDrugInventory toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.drugs.setDrugs(drugs);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of this drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public void resetData(ReadOnlyDrugInventory newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        setDrugs(newData.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return drugs.contains(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug d) {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        drugs.add(d);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        drugs.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void removeDrug(Drug key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        drugs.remove(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        return drugs.asUnmodifiableObservableList().size() + \" drugs\";","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        return drugs.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof DrugInventory","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugs.equals(((DrugInventory) other).drugs));","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        return drugs.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":10,"Emrysil":90}},{"path":"src/main/java/seedu/address/model/PatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.UniquePatientList;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" * Wraps all data at the Patient Record level","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class PatientRecord implements ReadOnlyPatientRecord {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     * creates a PatientRecord using the Patients in the {@code toBeCopied}","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord(ReadOnlyPatientRecord toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public void resetData(ReadOnlyPatientRecord newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"        patients.add(p);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        patients.remove(key);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"        return patients.asUnmodifiableObservableList().size() + \" patients\";","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof PatientRecord","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patients.equals(((PatientRecord) other).patients));","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        return patients.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":10,"cydtseng":8,"Emrysil":79,"Jiayan-Lim":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"Emrysil":3,"-":15}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private Path patientRecordFilePath \u003d Paths.get(\"data\", \"patientRecord.json\");","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private Path drugInventoryFilePath \u003d Paths.get(\"data\", \"drugInventory.json\");","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        setPatientRecordFilePath(newUserPrefs.getPatientRecordFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        setDrugInventoryFilePath(newUserPrefs.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        return patientRecordFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecordFilePath(Path patientRecordFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patientRecordFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        this.patientRecordFilePath \u003d patientRecordFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        return drugInventoryFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventoryFilePath(Path drugInventoryFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        this.drugInventoryFilePath \u003d drugInventoryFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patientRecordFilePath.equals(o.patientRecordFilePath)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugInventoryFilePath.equals(o.drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        return Objects.hash(guiSettings, patientRecordFilePath, drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        sb.append(\"Gui Settings : \").append(guiSettings);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        sb.append(\"\\nLocal patient data file location : \").append(patientRecordFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        sb.append(\"\\nLocal drug data file location : \").append(drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Emrysil":26,"-":76}},{"path":"src/main/java/seedu/address/model/drug/ActiveIngredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s active ingredient in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class ActiveIngredient {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            \"Active ingredient should only contain alphanumeric characters, spaces and dashes, and it should not be\"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                    + \" blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9][a-zA-Z0-9 -]*\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code ActiveIngredient}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param ingredient A valid active ingredient.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public ActiveIngredient(String ingredient) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        checkArgument(isValidIngredient(ingredient), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        value \u003d ingredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a given string is a valid active ingredient.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public static boolean isValidIngredient(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof ActiveIngredient","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 value.equals(((ActiveIngredient) other).value));","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":50}},{"path":"src/main/java/seedu/address/model/drug/Direction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s direction in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class Direction {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            \"Direction should be in sentence form and it should not be blank\";","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[0-9a-zA-Z][a-zA-Z0-9: ,.-]*\";","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code Direction}.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * @param direction A valid drug direction.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public Direction(String direction) {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(direction);","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        checkArgument(isValidDirection(direction), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        this.value \u003d direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a given string is a valid drug direction.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public static boolean isValidDirection(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof Direction // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 value.equals(((Direction) other).value)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":49}},{"path":"src/main/java/seedu/address/model/drug/Drug.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Represents a Drug in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Drug {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    // Identity fields","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private final TradeName tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    // Data fields","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    private final ActiveIngredient activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final Direction direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    private final Purpose purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    private final SideEffect sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private final StorageCount storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public Drug(TradeName tradeName, ActiveIngredient activeIngredient, Direction direction,","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"                Purpose purposes, SideEffect sideEffects,","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"                StorageCount storageCount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireAllNonNull(tradeName, activeIngredient, direction, purposes, sideEffects,","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"                storageCount);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        this.activeIngredient \u003d activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        this.direction \u003d direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.purposes \u003d purposes;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.storageCount \u003d storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public TradeName getTradeName() {","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        return tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public ActiveIngredient getActiveIngredient() {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        return activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    public Direction getDirection() {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        return direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    public Purpose getPurposes() {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        return purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public StorageCount getStorageCount() {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        return storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"     * Returns an immutable side effect set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"    public SideEffect getSideEffects() {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"        return sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * Returns true if both drugs have the same name.","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * This defines a weaker notion of equality between two drugs.","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDrug(Drug otherDrug) {","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        if (otherDrug \u003d\u003d this) {","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        return otherDrug !\u003d null","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 otherDrug.getTradeName().equals(getTradeName());","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        if (!(other instanceof Drug)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        Drug otherDrug \u003d (Drug) other;","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        return getTradeName().equals(otherDrug.getTradeName())","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getActiveIngredient().equals(otherDrug.getActiveIngredient())","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getDirection().equals(otherDrug.getDirection())","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getPurposes().equals(otherDrug.getPurposes())","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getSideEffects().equals(otherDrug.getSideEffects())","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getStorageCount().equals(otherDrug.getStorageCount());","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"        return Objects.hash(tradeName, activeIngredient, direction,","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"                purposes, sideEffects, storageCount);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"        builder.append(getTradeName())","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Active Ingredient: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"                .append(getActiveIngredient())","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Direction: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"                .append(getDirection())","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Storage Count: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"nevinlim"},"content":"                .append(getStorageCount())","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"nevinlim"},"content":"                .append(\"; Purposes: \")","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"                .append(getPurposes())","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"                .append(\"; Side Effects: \")","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"nevinlim"},"content":"                .append(getSideEffects());","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":15,"Emrysil":102}},{"path":"src/main/java/seedu/address/model/drug/Purpose.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s purpose in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class Purpose {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Purposes should be in phrase form \"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"            + \"and only contain alphabets or whitespace\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first 3 consecutive characters are upper or lowercase alphabetical characters,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"     * followed by 0 or more alphabetical or whitespace characters.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z][A-Za-z\\\\s,.-]*\";","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs an {@code Purpose}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param purpose A valid purpose.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public Purpose(String purpose) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(purpose);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidPurpose(purpose), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.purpose \u003d purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid purpose.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidPurpose(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof Purpose // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 purpose.equals(((Purpose) other).purpose)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        return purpose.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":46,"Emrysil":9}},{"path":"src/main/java/seedu/address/model/drug/SideEffect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s possible side effects in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class SideEffect {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Side effects should be in sentence form \"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            + \"and only contain alphabets, whitespace, commas and full stops\";","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first 3 consecutive characters are upper or lowercase alphabetical characters,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * followed by 0 or more alphabetical, whitespace characters or commas.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z][A-Za-z\\\\s,./]*\";","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs an {@code SideEffect}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param sideEffect A valid side effect.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public SideEffect(String sideEffect) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(sideEffect);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidSideEffect(sideEffect), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.sideEffect \u003d sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid side effect.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidSideEffect(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof SideEffect // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 sideEffect.equals(((SideEffect) other).sideEffect)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        return sideEffect.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":44,"Emrysil":11}},{"path":"src/main/java/seedu/address/model/drug/StorageCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s storage count in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class StorageCount {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"            \"Storage Count should only contain positive integers, and it should be at least 1 digit long\";","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\d][\\\\d]*\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    private Integer count;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     * Constructs a {@code StorageCount}.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"     * @param count A valid storage count.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    public StorageCount(String count) {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidStorageCount(count), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        this.count \u003d Integer.parseInt(count);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid storage count.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidStorageCount(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     * Decreases storage count by {@code amount}","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"     * @param amount the decrease value","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public void decrStorage(Integer amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        if (amount \u003e count) {","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            count \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            count -\u003d amount;","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"     * Increases storage count by {@code amount}","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"     * @param amount the increase value","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public void incStorage(Integer amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        count +\u003d amount;","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        return count.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof StorageCount // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 count.equals(((StorageCount) other).count)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"        return count.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":48,"Emrysil":20}},{"path":"src/main/java/seedu/address/model/drug/TradeName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s trade name in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class TradeName {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"            \"Trade names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs a {@code TradeName}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param tradeName A valid trade name.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public TradeName(String tradeName) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(tradeName);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidTradeName(tradeName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid trade name.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidTradeName(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    public boolean isBlank() {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"        return this.tradeName.isBlank();","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return this.tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof TradeName // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 tradeName.equals(((TradeName) other).tradeName)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"        return tradeName.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":53,"Emrysil":7}},{"path":"src/main/java/seedu/address/model/drug/TradeNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":" * Tests that a {@code Drug}\u0027s {@code TradeName} matches any of the keywords given.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"public class TradeNameContainsKeywordsPredicate implements Predicate\u003cDrug\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public TradeNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public boolean test(Drug drug) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(drug.getTradeName().tradeName, keyword));","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"                || (other","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"                instanceof seedu.address.model.drug.TradeNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 keywords.equals((","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"                        (seedu.address.model.drug.TradeNameContainsKeywordsPredicate)","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"                                other).keywords)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":33}},{"path":"src/main/java/seedu/address/model/drug/UniqueDrugList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.exceptions.DrugNotFoundException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.exceptions.DuplicateDrugException;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * A list of drugs that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * A drug is considered unique by comparing using {@code Drug#isSameDrug(Drug)}. As such, adding and updating of","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * drug uses Drug#isSameDrug(Drug) for equality so as to ensure that the drug being added or updated is","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * unique in terms of identity in the UniqueDrugList. However, the removal of a drug uses Drug#equals(Object) so","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" * as to ensure that the drug with exactly the same fields will be removed.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":" * @see Drug#isSameDrug(Drug)","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"public class UniqueDrugList implements Iterable\u003cDrug\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cDrug\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cDrug\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * Returns true if the list contains an equivalent drug as the given argument.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public boolean contains(Drug toCheck) {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public void add(Drug toAdd) {","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     * Replaces the drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(target, editedDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"            throw new DrugNotFoundException();","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        if (!target.isSameDrug(editedDrug) \u0026\u0026 contains(editedDrug)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        internalList.set(index, editedDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes the equivalent drug from the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * The drug must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void remove(Drug toRemove) {","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"            throw new DrugNotFoundException();","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(UniqueDrugList replacement) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"     * Replaces the contents of this list with {@code drugs}.","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * {@code drugs} must not contain duplicate persons.","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(drugs);","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        if (!drugsAreUnique(drugs)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(drugs);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    public Iterator\u003cDrug\u003e iterator() {","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof UniqueDrugList // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 internalList.equals(((UniqueDrugList) other).internalList));","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"     * Returns true if {@code drugs} contains only unique drugs.","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    private boolean drugsAreUnique(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        for (int i \u003d 0; i \u003c drugs.size() - 1; i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            for (int j \u003d i + 1; j \u003c drugs.size(); j++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"                if (drugs.get(i).isSameDrug(drugs.get(j))) {","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"                    return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":137}},{"path":"src/main/java/seedu/address/model/drug/exceptions/DrugNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class DrugNotFoundException extends RuntimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":7}},{"path":"src/main/java/seedu/address/model/drug/exceptions/DuplicateDrugException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.drug.exceptions;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Signals that the operation will result in duplicate Drugs (Drugs are considered duplicates if they have the same","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * information).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class DuplicateDrugException extends RuntimeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":8}},{"path":"src/main/java/seedu/address/model/person/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s date of birth in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class DateOfBirth {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Date of birth should only contain numeric characters and spaces, \"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"                    + \"and the date should fall between 01/01/1900 and current date\";","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final DateTimeFormatter[] FORMATS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"            Stream.of(\"dd.MM.yyyy\", \"dd/MM/yyyy\", \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"                            \"dd.MM.yy\", \"dd/MM/yy\", \"dd-MM-yy\")","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"                    .map(DateTimeFormatter::ofPattern)","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"                    .toArray(DateTimeFormatter[]::new);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final LocalDate minRangeOfBirth \u003d LocalDate.of(1900, 1, 1);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final LocalDate maxRangeOfBirth \u003d LocalDate.now();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    public final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param value A valid birth date.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    public DateOfBirth(String value) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidBirthDate(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is in valid date format,","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"     * i.e.: dd.mm.yyyy -\u003e 01.01.2023","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd/mm/yyyy -\u003e 01/01/2023","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd-mm-yyyy -\u003e 01-01-2023","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd.mm.yy -\u003e 01.01.2023","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd/mm/yy -\u003e 01/01/23","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd-mm-yy -\u003e 01-01-23","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    private static LocalDate formatDateIfValid(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        for (DateTimeFormatter format: FORMATS) {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"            try {","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"                return LocalDate.parse(test, format);","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"                // do nothing, continue check whether given string input match any other date time format","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid date of birth, or more","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"     * specifically the date of birth fall between year of 1900 and current date.","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidBirthDate(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        // check whether one\u0027s date of birth is fall between 1900 and current year.","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"        LocalDate formattedDate \u003d formatDateIfValid(test);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"        if (formattedDate \u003d\u003d null) {","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"        return formattedDate.isBefore(maxRangeOfBirth) \u0026\u0026 formattedDate.isAfter(minRangeOfBirth);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof DateOfBirth // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 value.equals(((DateOfBirth) other).value)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":1,"Emrysil":6,"Jiayan-Lim":81}},{"path":"src/main/java/seedu/address/model/person/DrugAllergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s drug allergy in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class DrugAllergy {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Drug allergy should be alphanumeric\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Tag drugAllergy;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DrugAllergy}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param drugAllergy A valid drug allergy description.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidDrugAllergy(drugAllergy), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drugAllergy \u003d new Tag(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid drug allergy.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidDrugAllergy(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        return drugAllergy.tagName;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof DrugAllergy // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 drugAllergy.equals(((DrugAllergy) other).drugAllergy)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        return drugAllergy.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":6,"Jiayan-Lim":44}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.StringUtil.makeStringCaseInsensitive;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s gender in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Gender {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Gender should only be either female or male, it should not be blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final String VALIDATION_REGEX \u003d \"f|female|m|male\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    public final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param value A valid gender.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    public Gender(String value) {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidGender(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is either female or male.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        return makeStringCaseInsensitive(test).matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":6,"Jiayan-Lim":44}},{"path":"src/main/java/seedu/address/model/person/Ic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":" * Represents a patient\u0027s IC in the patient record","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class Ic {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"            \"IC number should only contain alphanumeric characters,\"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"                    + \" and it should be exactly 8 digits and characters long\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final String VALIDATION_REGEX \u003d \"[a-zA-Z]\\\\d{7}[a-zA-Z]\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    public final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code Ic}.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param icNumber A valid ic number.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public Ic(String icNumber) {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidIc(icNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        value \u003d icNumber;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid ic number.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidIc(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof Ic // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 value.equals(((Ic) other).value)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":1,"Jiayan-Lim":51}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Emrysil":3,"-":28}},{"path":"src/main/java/seedu/address/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Represents a Patient in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"public class Patient extends Person {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    private final DateOfBirth birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Gender gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Ic ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private Optional\u003cDrugAllergy\u003e drugAllergy;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    private Optional\u003cPhone\u003e emergencyContact;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, DateOfBirth birthDate, Gender gender, Ic ic) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        super(name, phone, email, address);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(birthDate, gender, ic);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        // initialise drugAllergy and emergencyContact","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        this.drugAllergy \u003d Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        this.emergencyContact \u003d Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"     * Uses this constructor when want to include drug allergy or emergency contact of the patient.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, DateOfBirth birthDate, Gender gender, Ic ic,","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        DrugAllergy drugAllergy, Phone emergencyContact) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        this(name, phone, email, address, birthDate, gender, ic);","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drugAllergy \u003d Optional.ofNullable(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        this.emergencyContact \u003d Optional.ofNullable(emergencyContact);","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    public DateOfBirth getBirthDate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"    public Ic getIc() {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugAllergy getDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.drugAllergy.orElse(null);","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"    public Phone getEmergencyContact() {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.emergencyContact.orElse(null);","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":9,"Jiayan-Lim":54}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructor for backward compatibility","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     * Might be removed in the future.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    public Person(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructor for creating a emergency contact person,","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"     * so only include important information like name and phone number.","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"    public Person(Name name, Phone phone) {","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"        this.email \u003d null;","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"        this.address \u003d null;","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":122,"Jiayan-Lim":25}},{"path":"src/main/java/seedu/address/model/person/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.exceptions.PatientNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":" * A list of patients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a patient uses Person#equals(Object) so","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        if (!target.isSamePerson(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof UniquePatientList // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"                        \u0026\u0026 internalList.equals(((UniquePatientList) other).internalList));","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"                if (patients.get(i).isSamePerson(patients.get(j))) {","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Emrysil":37,"-":97,"Jiayan-Lim":2}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":" * identity).","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cydtseng":13}},{"path":"src/main/java/seedu/address/model/person/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"public class PatientNotFoundException extends RuntimeException{","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nevinlim":3,"cydtseng":4}},{"path":"src/main/java/seedu/address/model/readonly/ReadOnlyDrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.readonly;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Unmodifiable view of a drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public interface ReadOnlyDrugInventory {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/seedu/address/model/readonly/ReadOnlyPatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.model.readonly;","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Unmodifiable view of a patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public interface ReadOnlyPatientRecord {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":10,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.DrugInventory;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.PatientRecord;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Direction;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Purpose;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.SideEffect;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.StorageCount;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        return new Patient[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new DateOfBirth(\"01-01-2000\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"                    new Gender(\"female\"), new Ic(\"T1234567J\"), new DrugAllergy(\"Penicillin\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                    new Phone(\"12345678\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new DateOfBirth(\"01-01-2001\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"                    new Gender(\"female\"), new Ic(\"T7654321K\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new DateOfBirth(\"31-12-1999\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"                    new Gender(\"female\"), new Ic(\"F1117777P\"), new DrugAllergy(\"sulfonamides\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"                    new Phone(\"00000000\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new DateOfBirth(\"05-05-1995\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"                    new Gender(\"male\"), new Ic(\"P9998888C\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new DateOfBirth(\"02-02-2002\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"                    new Gender(\"male\"), new Ic(\"J0001111F\"), new DrugAllergy(\"Aspirin\"), new Phone(\"78965432\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new DateOfBirth(\"03-03-2003\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"                    new Gender(\"male\"), new Ic(\"E3334444B\"))","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        };","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    public static Drug[] getSampleDrugs() {","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        return new Drug[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"nevinlim"},"content":"            new Drug(new TradeName(\"Panadol\"), new ActiveIngredient(\"Paracetamol\"), new Direction(\"Adults and \"","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"nevinlim"},"content":"                    + \"children over 12 years: 1-2 capsules taken every 4-6 hours as required\"), new Purpose(","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"nevinlim"},"content":"                            \"relief of headache, pain and fever\"), new SideEffect(\"Skin rash or itching. Breathing\"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"                    + \" problems or swelling of lips, throat or face. Mouth ulcers. Unexplained bruising or \"","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"                    + \"bleeding.\"), new StorageCount(\"30\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"nevinlim"},"content":"            new Drug(new TradeName(\"Lipitor\"), new ActiveIngredient(\"Atorvastatin\"), new Direction(\"10 mg once a \"","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"nevinlim"},"content":"                    + \"day in adults and children aged 10\"), new Purpose(\"Prevent cardiovascular disease in those at \"","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"                    + \"high risk and to treat abnormal lipid levels.\"), new SideEffect(\"Joint pain, diarrhea, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"nevinlim"},"content":"                    + \"heartburn, nausea, and muscle pains\"), new StorageCount(\"20\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"            new Drug(new TradeName(\"Xanax\"), new ActiveIngredient(\"Alprazolam\"), new Direction(\"varies\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"nevinlim"},"content":"                    new Purpose(\"Treat anxiety and panic disorders.\"), new SideEffect(\"Drowsiness, dizziness, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"                    + \"increased saliva production, or change in sex drive/ability may occur.\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"nevinlim"},"content":"                    new StorageCount(\"10\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"nevinlim"},"content":"            new Drug(new TradeName(\"Ultram\"), new ActiveIngredient(\"Tramadol\"), new Direction(\"Take every 4 to 6 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"                    + \"hours as needed for pain relief\"), new Purpose(\"Help relieve moderate to moderately \"","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"                    + \"severe pain.\"), new SideEffect(\"Nausea, vomiting, constipation, lightheadedness, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"                    + \"dizziness, drowsiness, or headache may occur.\"), new StorageCount(\"17\"))","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"        };","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"    public static ReadOnlyDrugInventory getSampleDrugInventory() {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"        DrugInventory sampleDI \u003d new DrugInventory();","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        for (Drug sampleDrug: getSampleDrugs()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"            sampleDI.addDrug(sampleDrug);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        return sampleDI;","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    public static ReadOnlyPatientRecord getSamplePatientRecord() {","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"        PatientRecord samplePR \u003d new PatientRecord();","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        for (Patient samplePatient: getSamplePatients()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"            samplePR.addPatient(samplePatient);","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"        return samplePR;","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"nevinlim":23,"Emrysil":50,"-":53}},{"path":"src/main/java/seedu/address/storage/CareFlowStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":" * Represents a storage for {@link seedu.address.model.CareFlow}.","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowStorage extends PatientRecordStorage, DrugInventoryStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":7,"Emrysil":34}},{"path":"src/main/java/seedu/address/storage/CareFlowStorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":" * Manages storage of CareFlow data in local storage.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"public class CareFlowStorageManager implements CareFlowStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CareFlowStorageManager.class);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    private final PatientRecordStorage patientRecordStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    private final DrugInventoryStorage drugInventoryStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     * Creates a CareFlowStorageManager with {@code patientRecordStorage,","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"     * @code drugInventoryStorage, @code userPrefsStorage}","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public CareFlowStorageManager(PatientRecordStorage patientRecordStorage, DrugInventoryStorage drugInventoryStorage,","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"                                  UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        super();","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        this.patientRecordStorage \u003d patientRecordStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.drugInventoryStorage \u003d drugInventoryStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        return patientRecordStorage.getPatientRecordFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        return drugInventoryStorage.getDrugInventoryFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        return readPatientRecord(patientRecordStorage.getPatientRecordFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord(Path filePath)","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        return patientRecordStorage.readPatientRecord(filePath);","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"        return readDrugInventory(drugInventoryStorage.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory(Path filePath)","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        return drugInventoryStorage.readDrugInventory(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"        savePatientRecord(patientRecord, patientRecordStorage.getPatientRecordFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        patientRecordStorage.savePatientRecord(patientRecord, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"        saveDrugInventory(drugInventory, drugInventoryStorage.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        drugInventoryStorage.saveDrugInventory(drugInventory, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":30,"Emrysil":76}},{"path":"src/main/java/seedu/address/storage/DrugInventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Represents a storage for drug inventory","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public interface DrugInventoryStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Returns drug inventory data as a {@link ReadOnlyDrugInventory}.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @see #getDrugInventoryFilePath()","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Saves the given {@link ReadOnlyDrugInventory} to the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * @param drugInventory cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @see #saveDrugInventory(ReadOnlyDrugInventory)","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    void saveDrugInventory(ReadOnlyDrugInventory drugInventory, Path filePath) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":4,"Emrysil":41}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDrug.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Direction;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.Purpose;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.SideEffect;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.StorageCount;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.drug.TradeName;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":" * Jackson-friendly version of {@link Drug}.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"public class JsonAdaptedDrug {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Drug\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    private final String tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"    private final String activeIngredient;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    private final String direction;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"    private final String purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    private final String sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    private final String storageCount;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"     * Constructs a {@code JsonAdaptedDrug} with the given drug details.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    public JsonAdaptedDrug(@JsonProperty(\"tradeName\") String tradeName,","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"                           @JsonProperty(\"activeIngredient\") String activeIngredient,","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"                             @JsonProperty(\"direction\") String direction,","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"                           @JsonProperty(\"purposes\") String purposes,","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"                             @JsonProperty(\"sideEffects\") String sideEffects,","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"                           @JsonProperty(\"storageCount\") String storageCount) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"        this.activeIngredient \u003d activeIngredient;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"        this.direction \u003d direction;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"        this.purposes \u003d purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        this.storageCount \u003d storageCount;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"     * Converts a given {@code Drug} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"    public JsonAdaptedDrug(Drug source) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        tradeName \u003d source.getTradeName().tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"        activeIngredient \u003d source.getActiveIngredient().value;","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"        direction \u003d source.getDirection().value;","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"        purposes \u003d source.getPurposes().purpose;","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"        sideEffects \u003d source.getSideEffects().sideEffect;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"        storageCount \u003d source.getStorageCount().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"     * Converts this Jackson-friendly adapted drug object into the model\u0027s {@code Drug} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"    public Drug toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"        if (tradeName \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"                    TradeName.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"        final TradeName modelTradeName \u003d new TradeName(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"        if (activeIngredient \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"                    ActiveIngredient.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"        final ActiveIngredient modelActiveIngredient \u003d new ActiveIngredient(activeIngredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"        if (direction \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"                    Direction.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"        final Direction modelDirection \u003d new Direction(direction);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"        if (purposes \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"                    Purpose.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"        final Purpose modelPurpose \u003d new Purpose(purposes);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"        if (sideEffects \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"                    SideEffect.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"        final SideEffect modelSideEffects \u003d new SideEffect(sideEffects);","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"        if (storageCount \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"                    StorageCount.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"        final StorageCount modelStorageCount \u003d new StorageCount(storageCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"        return new Drug(modelTradeName, modelActiveIngredient,","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"                modelDirection, modelPurpose, modelSideEffects, modelStorageCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":8,"cydtseng":103}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonAdaptedPatient {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final String name;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private final String phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private final String email;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    private final String address;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final String birthDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private final String gender;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private final String ic;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private final String drugAllergy;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private final String emergencyContact;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                             @JsonProperty(\"birthDate\") String birthDate, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                              @JsonProperty(\"ic\") String ic, @JsonProperty(\"drugAllergy\") String drugAllergy,","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                              @JsonProperty(\"emergencyContact\") String emergencyContact) {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        this.emergencyContact \u003d emergencyContact;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        birthDate \u003d source.getBirthDate().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        ic \u003d source.getIc().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        if (source.getDrugAllergy() !\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            drugAllergy \u003d source.getDrugAllergy().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"            drugAllergy \u003d null;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        if (source.getDrugAllergy() !\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"            emergencyContact \u003d source.getEmergencyContact().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"            emergencyContact \u003d null;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"        if (!DateOfBirth.isValidBirthDate(birthDate)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"        final DateOfBirth modelBirthDate \u003d new DateOfBirth(birthDate);","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"        if (!Ic.isValidIc(ic)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        final Ic modelIc \u003d new Ic(ic);","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"        if (drugAllergy !\u003d null \u0026\u0026 !DrugAllergy.isValidDrugAllergy(drugAllergy)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        if (emergencyContact !\u003d null \u0026\u0026 !Phone.isValidPhone(emergencyContact)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"        if (drugAllergy \u003d\u003d null \u0026\u0026 emergencyContact \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"            return new Patient(modelName, modelPhone, modelEmail, modelAddress, modelBirthDate, modelGender, modelIc);","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"        final DrugAllergy modelDrugAllergy \u003d new DrugAllergy(drugAllergy);","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"        final Phone modelEmergencyContact \u003d new Phone(emergencyContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelAddress, modelBirthDate, modelGender, modelIc,","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"                modelDrugAllergy, modelEmergencyContact);","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nevinlim":4,"Emrysil":144}},{"path":"src/main/java/seedu/address/storage/JsonDrugInventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * A class to access drug data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class JsonDrugInventoryStorage implements DrugInventoryStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDrugInventoryStorage.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"     * Creates a JsonDrugInventoryStorage with {@code filePath}","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public JsonDrugInventoryStorage(Path filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return readDrugInventory(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cJsonSerializableDrugInventory\u003e jsonDrugInventory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"                filePath, JsonSerializableDrugInventory.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        if (jsonDrugInventory.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            return Optional.of(jsonDrugInventory.get().toModelType());","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        saveDrugInventory(drugInventory, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     * Similar to {@link #saveDrugInventory(ReadOnlyDrugInventory)}.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drugInventory);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDrugInventory(drugInventory), filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":11,"Emrysil":71}},{"path":"src/main/java/seedu/address/storage/JsonPatientRecordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * A class to access patient data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonPatientRecordStorage implements PatientRecordStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPatientRecordStorage.class);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public JsonPatientRecordStorage(Path filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return readPatientRecord(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cJsonSerializablePatientRecord\u003e jsonPatientRecord \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                filePath, JsonSerializablePatientRecord.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        if (!jsonPatientRecord.isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"            return Optional.of(jsonPatientRecord.get().toModelType());","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        savePatientRecord(patientRecord, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patientRecord);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePatientRecord(patientRecord), filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":10,"Emrysil":64}},{"path":"src/main/java/seedu/address/storage/JsonSerializableDrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.DrugInventory;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * An Immutable DrugInventory that is serializable to JSON format.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"@JsonRootName(value \u003d \"druginventory\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonSerializableDrugInventory {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_DUPLICATE_DRUG \u003d \"Drug list contains duplicate drug(s).\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cJsonAdaptedDrug\u003e drugs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializableDrugInventory(@JsonProperty(\"drugs\") List\u003cJsonAdaptedDrug\u003e drugs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        this.drugs.addAll(drugs);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Converts a given {@code ReadOnlyDrugInventory} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDrugInventory}.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializableDrugInventory(ReadOnlyDrugInventory source) {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        drugs.addAll(source.getDrugList().stream().map(JsonAdaptedDrug::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * Converts this serializable drug inventory into the model\u0027s {@code DrugInventory} object.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        DrugInventory drugInventory \u003d new DrugInventory();","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        for (JsonAdaptedDrug jsonAdaptedDrug : drugs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"            Drug drug \u003d jsonAdaptedDrug.toModelType();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            if (drugInventory.hasDrug(drug)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DRUG);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            drugInventory.addDrug(drug);","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        return drugInventory;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nevinlim":5,"Emrysil":54}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.PatientRecord;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * An Immutable PatientRecord that is serializable to JSON format.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"@JsonRootName(value \u003d \"patientrecord\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonSerializablePatientRecord {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patient list contains duplicate patient(s).\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializablePatientRecord(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     * Converts a given {@code ReadOnlyPatientRecord} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePatientRecord}.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializablePatientRecord(ReadOnlyPatientRecord source) {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     * Converts this serializable patient record into the model\u0027s {@code PatientRecord} object.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        PatientRecord patientRecord \u003d new PatientRecord();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            if (patientRecord.hasPatient(patient)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"            patientRecord.addPatient(patient);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        return patientRecord;","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nevinlim":5,"Emrysil":57}},{"path":"src/main/java/seedu/address/storage/PatientRecordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import seedu.address.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Represents a storage for patient record","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public interface PatientRecordStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Returns patient record data as a {@link ReadOnlyPatientRecord}.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @see #getPatientRecordFilePath()","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     * Saves the given {@link ReadOnlyPatientRecord} to the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * @param patientRecord cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @see #savePatientRecord(ReadOnlyPatientRecord)","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    void savePatientRecord(ReadOnlyPatientRecord patientRecord, Path filePath) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":3,"Emrysil":42}},{"path":"src/main/java/seedu/address/ui/DrugCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":" * An UI component that displays information of a {@code Drug}.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"public class DrugCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    private static final String FXML \u003d \"DrugListCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    public final Drug drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label id;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label activeIngredient;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label direction;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label storageCount;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"     * Creates a {@code DrugCode} with the given {@code Drug} and index to display.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugCard(Drug drug, int displayedIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        super(FXML);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drug \u003d drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        tradeName.setText(this.drug.getTradeName().tradeName);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        activeIngredient.setText(\"Active Ingredient: \" + this.drug.getActiveIngredient().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        direction.setText(\"Direction: \" + this.drug.getDirection().value);","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        purposes.setText(\"Purposes: \" + this.drug.getPurposes().purpose);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        sideEffects.setText(\"Side Effects: \" + this.drug.getSideEffects().sideEffect);","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"        storageCount.setText(\"Storage: \" + this.drug.getStorageCount().toString());","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!(other instanceof DrugCard)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"        // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"        DrugCard card \u003d (DrugCard) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"        return tradeName.getText().equals(card.tradeName.getText())","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 drug.equals(card.drug);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":1,"Emrysil":6,"Jiayan-Lim":69}},{"path":"src/main/java/seedu/address/ui/DrugListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"public class DrugListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    private static final String FXML \u003d \"DrugListPanel.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    private ListView\u003cDrug\u003e drugListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"    public DrugListPanel(ObservableList\u003cDrug\u003e drugList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"        // DRUG LIST","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"        drugListView.setItems(drugList);","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"        drugListView.setCellFactory(listView -\u003e new DrugListViewCell());","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Drug} using a {@code DrugCard}.","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"    class DrugListViewCell extends ListCell\u003cDrug\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"        protected void updateItem(Drug drug, boolean empty) {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"            super.updateItem(drug, empty);","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"            if (empty || drug \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"                setText(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"                setGraphic(new DrugCard(drug, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"cydtseng":38}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    private Scene scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    public Scene getScene() {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        return scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nevinlim":9,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogic;","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    private final CareFlowLogic logic;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"//    private PatientDrugListPanel patientDrugListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"    private DrugListPanel drugListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"//    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"//    private StackPane patientDrugListPanelPlaceholder;","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"    private MenuItem light;","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"    private MenuItem dark;","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    private StackPane patientDrugListPanelPlaceholder;","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"    private StackPane drugListPanelPlaceholder;","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"    private Scene scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"    private TabPane tabPane;","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"    private Tab patientTab;","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"    private Tab drugTab;","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    public MainWindow(Stage primaryStage, CareFlowLogic logic) {","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"        primaryStage.setTitle(\"CareFlow\");","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"nevinlim"},"content":"        setAccelerator(light, KeyCombination.valueOf(\"CTRL+SHIFT+L\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"nevinlim"},"content":"        setAccelerator(dark, KeyCombination.valueOf(\"CTRL+SHIFT+D\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"//        patientDrugListPanel \u003d new PatientDrugListPanel(logic.getFilteredPatientList(), logic.getFilteredDrugList());","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"cydtseng"},"content":"//        patientDrugListPanelPlaceholder.getChildren().add(patientDrugListPanel.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"cydtseng"},"content":"        //make the tabPane fill its parent VBox","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"        VBox.setVgrow(tabPane, Priority.ALWAYS);","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"cydtseng"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList());","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"cydtseng"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"cydtseng"},"content":"        drugListPanel \u003d new DrugListPanel(logic.getFilteredDrugList());","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"cydtseng"},"content":"        drugListPanelPlaceholder.getChildren().add(drugListPanel.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"        StatusBarFooter statusBarFooter \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"                new StatusBarFooter(logic.getPatientRecordFilePath(), logic.getDrugInventoryFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":217,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"nevinlim"},"content":"     * Toggles the Light theme version of the app","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"nevinlim"},"content":"    public void toggleLightTheme() {","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"nevinlim"},"content":"        // enable style","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/LightTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":227,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/HelpWindowLight.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"nevinlim"},"content":"        // disable style","lastModifiedDate":"2023-03-10"},{"lineNumber":230,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":231,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/DarkTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/Extensions.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":235,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/HelpWindow.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":237,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":238,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":239,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":240,"author":{"gitId":"nevinlim"},"content":"     * Toggles the Dark theme version of the app","lastModifiedDate":"2023-03-10"},{"lineNumber":241,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":242,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":243,"author":{"gitId":"nevinlim"},"content":"    public void toggleDarkTheme() {","lastModifiedDate":"2023-03-10"},{"lineNumber":244,"author":{"gitId":"nevinlim"},"content":"        // enable style","lastModifiedDate":"2023-03-10"},{"lineNumber":245,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":246,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/DarkTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":247,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/Extensions.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":250,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/HelpWindow.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":251,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"        // disable style","lastModifiedDate":"2023-03-10"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":255,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/LightTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":256,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":257,"author":{"gitId":"nevinlim"},"content":"                getClass().getResource(\"/view/HelpWindowLight.css\")).toExternalForm());","lastModifiedDate":"2023-03-10"},{"lineNumber":258,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":259,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":260,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":261,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":262,"author":{"gitId":"Emrysil"},"content":"    public PatientDrugListPanel getPatientDrugListPanel() {","lastModifiedDate":"2023-02-28"},{"lineNumber":263,"author":{"gitId":"Emrysil"},"content":"        return patientDrugListPanel;","lastModifiedDate":"2023-02-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"cydtseng"},"content":"//    public PatientDrugListPanel getPatientDrugListPanel() {","lastModifiedDate":"2023-03-10"},{"lineNumber":267,"author":{"gitId":"cydtseng"},"content":"//        return patientDrugListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":268,"author":{"gitId":"cydtseng"},"content":"//    }","lastModifiedDate":"2023-03-10"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":270,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":272,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":273,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":274,"author":{"gitId":"Emrysil"},"content":"     * @see seedu.address.logic.CareFlowLogic#execute(String)","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":279,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nevinlim":61,"cydtseng":38,"Emrysil":8,"CShuwen":2,"-":188}},{"path":"src/main/java/seedu/address/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    public final Patient patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label birthDate;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label gender;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"        name.setText(this.patient.getName().fullName);","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        phone.setText(this.patient.getPhone().value);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        address.setText(this.patient.getAddress().value);","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"        email.setText(this.patient.getEmail().value);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        birthDate.setText(this.patient.getBirthDate().value);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"        gender.setText(this.patient.getGender().value);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"        ic.setText(this.patient.getIc().value);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        if (!(other instanceof PatientCard)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        PatientCard card \u003d (PatientCard) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 patient.equals(card.patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Emrysil":5,"-":54,"Jiayan-Lim":18}},{"path":"src/main/java/seedu/address/ui/PatientDrugListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class PatientDrugListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private static final String FXML \u003d \"PatientDrugListPanel.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PatientDrugListPanel.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private ListView\u003cDrug\u003e drugListView;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public PatientDrugListPanel(ObservableList\u003cPatient\u003e patientList, ObservableList\u003cDrug\u003e drugList) {","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"        // PERSON LIST","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"        // DRUG LIST","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        drugListView.setItems(drugList);","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        drugListView.setCellFactory(listView -\u003e new DrugListViewCell());","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Drug} using a {@code DrugCard}.","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"    class DrugListViewCell extends ListCell\u003cDrug\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"        @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        protected void updateItem(Drug drug, boolean empty) {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"            super.updateItem(drug, empty);","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"            if (empty || drug \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"                setText(null);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"                setGraphic(new DrugCard(drug, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Emrysil":13,"CShuwen":5,"-":34,"Jiayan-Lim":22}},{"path":"src/main/java/seedu/address/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.drug.Drug;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList) {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"        // PERSON LIST","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"                setText(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"cydtseng":39}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public StatusBarFooter(Path patientSaveLocation, Path drugSaveLocation) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(patientSaveLocation) + \"\\t\"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"                        + Paths.get(\".\").resolve(drugSaveLocation)","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nevinlim":2,"Emrysil":2,"-":26}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.address.logic.CareFlowLogic;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private CareFlowLogic logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public UiManager(CareFlowLogic logic) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Emrysil":3,"-":84}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"    /* -fx-padding: 0 0 1 0; */","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"    -fx-background-radius: 10.0;","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"cydtseng"},"content":"/* Drawing blue line border around selected cell","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"}*/","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":130,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":136,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"cydtseng"},"content":"/* TAB PANE RELATED*/","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"cydtseng"},"content":".tab-pane:top *.tab-header-area {","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"cydtseng"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"cydtseng"},"content":"    -fx-padding: 0.416667em 0.166667em 0.0em 0.0em;","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"cydtseng"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"cydtseng"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"cydtseng"},"content":".tab-pane","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"cydtseng"},"content":"{","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"cydtseng"},"content":"    -fx-tab-min-width: 90px;","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"cydtseng"},"content":"    -fx-background-color: #383838;","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":".tab{","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"cydtseng"},"content":"    -fx-background-insets: 0 1 0 1, 0, 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"cydtseng"},"content":".tab-pane .tab","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"cydtseng"},"content":"{","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"cydtseng"},"content":"    -fx-background-color: #e6e6e6;","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"cydtseng"},"content":".tab-pane .tab:selected","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"cydtseng"},"content":"{","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"cydtseng"},"content":"    -fx-background-color: #3c3c3c;","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"cydtseng"},"content":".tab .tab-label {","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"cydtseng"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"cydtseng"},"content":"    -fx-pref-width: 150.0;","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: #383838;","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"cydtseng"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"cydtseng"},"content":".tab:selected .tab-label {","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"cydtseng"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":353,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":382,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":392,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":396,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"cydtseng":51,"-":348}},{"path":"src/main/resources/view/DrugListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"                \u003cLabel fx:id\u003d\"tradeName\" text\u003d\"\\$tradeName\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"            \u003cLabel fx:id\u003d\"activeIngredient\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$activeIngredient\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            \u003cLabel fx:id\u003d\"direction\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$direction\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            \u003cLabel fx:id\u003d\"purposes\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$purposes\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            \u003cLabel fx:id\u003d\"sideEffects\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$sideEffects\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            \u003cLabel fx:id\u003d\"storageCount\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$storageCount\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Emrysil":32}},{"path":"src/main/resources/view/DrugListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    \u003cListView fx:id\u003d\"drugListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"cydtseng":8}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    \u003cScene fx:id\u003d\"scene\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"nevinlim":1,"-":43}},{"path":"src/main/resources/view/HelpWindowLight.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"#copyButton {","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: lightgray;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"#copyButton:hover {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: gray;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"#copyButton:armed {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: darkgray;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(#f0f0f0, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"nevinlim":19}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":".background {","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f2f2f2;","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"background-color: #f2f2f2; /* Used in the default.html file */","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":".label {","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 11pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #333333;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"-fx-opacity: 0.9;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":".label-bright {","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 11pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"-fx-opacity: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":".label-header {","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 32pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"-fx-opacity: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":".text-field {","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 12pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":".tab-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"-fx-min-height: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"-fx-max-height: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":".table-view {","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"-fx-base: #f2f2f2;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"-fx-control-inner-background: #f2f2f2;","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f2f2f2;","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"-fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"-fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 5;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"-fx-size: 35;","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"-fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"-fx-border-color:","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"transparent","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"transparent","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"derive(-fx-base, 80%)","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"-fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 20pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"-fx-alignment: center-left;","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"-fx-opacity: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(#f2f2f2, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"nevinlim"},"content":"-fx-border-color: transparent transparent transparent #c3c3c3;","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"nevinlim"},"content":".split-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"-fx-border-radius: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"-fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(#f2f2f2, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"nevinlim"},"content":".list-view {","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"nevinlim"},"content":"-fx-background-insets: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(#f2f2f2, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":".list-cell {","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"-fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"-fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"nevinlim"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f2f2f2;","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"nevinlim"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #e5e5e5;","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"nevinlim"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #d9d9d9;","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"nevinlim"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"nevinlim"},"content":"-fx-border-color: #8cb3d9;","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"nevinlim"},"content":"-fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"nevinlim"},"content":".list-cell .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"nevinlim"},"content":".cell_big_label {","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 16px;","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #010504;","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"nevinlim"},"content":".cell_small_label {","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 13px;","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #010504;","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"nevinlim"},"content":".stack-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(#f2f2f2, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"nevinlim"},"content":".pane-with-border {","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(#f2f2f2, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"nevinlim"},"content":"-fx-border-color: derive(#f2f2f2, 10%);","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"nevinlim"},"content":"-fx-border-top-width: 1px;","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"nevinlim"},"content":".status-bar {","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"nevinlim"},"content":".result-display {","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 13pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"nevinlim"},"content":".result-display .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black !important;","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"nevinlim"},"content":".status-bar .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 4px;","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"nevinlim"},"content":"-fx-pref-height: 30px;","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"nevinlim"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"nevinlim"},"content":"-fx-border-color: #d4d4d4;","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"nevinlim"},"content":"-fx-border-width: 1px;","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"nevinlim"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"nevinlim"},"content":".grid-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"nevinlim"},"content":"-fx-border-color: #d4d4d4;","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"nevinlim"},"content":"-fx-border-width: 1px;","lastModifiedDate":"2023-03-10"},{"lineNumber":181,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"nevinlim"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"nevinlim"},"content":".context-menu {","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f2f2f2;","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"nevinlim"},"content":".context-menu .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"nevinlim"},"content":".menu-bar {","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":199,"author":{"gitId":"nevinlim"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":200,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 14pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":201,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-10"},{"lineNumber":202,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":203,"author":{"gitId":"nevinlim"},"content":"-fx-opacity: 0.9;","lastModifiedDate":"2023-03-10"},{"lineNumber":204,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":205,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":206,"author":{"gitId":"nevinlim"},"content":".menu .left-container {","lastModifiedDate":"2023-03-10"},{"lineNumber":207,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":208,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"nevinlim"},"content":"/*","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"nevinlim"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"nevinlim"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"nevinlim"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"nevinlim"},"content":".button {","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"nevinlim"},"content":"-fx-border-color: #666666;","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"nevinlim"},"content":"-fx-border-width: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"nevinlim"},"content":"-fx-background-radius: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"nevinlim"},"content":"-fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 11pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #666666;","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"nevinlim"},"content":"-fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":227,"author":{"gitId":"nevinlim"},"content":".button:hover {","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #e0e0e0;","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":230,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":231,"author":{"gitId":"nevinlim"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":235,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"nevinlim"},"content":".button:focused {","lastModifiedDate":"2023-03-10"},{"lineNumber":237,"author":{"gitId":"nevinlim"},"content":"-fx-border-color: #1d1d1d, #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":238,"author":{"gitId":"nevinlim"},"content":"-fx-border-width: 1, 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":239,"author":{"gitId":"nevinlim"},"content":"-fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-10"},{"lineNumber":240,"author":{"gitId":"nevinlim"},"content":"-fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":241,"author":{"gitId":"nevinlim"},"content":"-fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":242,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":243,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":244,"author":{"gitId":"nevinlim"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-10"},{"lineNumber":245,"author":{"gitId":"nevinlim"},"content":"-fx-opacity: 0.4;","lastModifiedDate":"2023-03-10"},{"lineNumber":246,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":247,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #666666;","lastModifiedDate":"2023-03-10"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":250,"author":{"gitId":"nevinlim"},"content":".button:default {","lastModifiedDate":"2023-03-10"},{"lineNumber":251,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-10"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-10"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":255,"author":{"gitId":"nevinlim"},"content":".button:default:hover {","lastModifiedDate":"2023-03-10"},{"lineNumber":256,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-10"},{"lineNumber":257,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":258,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":259,"author":{"gitId":"nevinlim"},"content":".dialog-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":260,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":261,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":262,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":263,"author":{"gitId":"nevinlim"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-10"},{"lineNumber":264,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":265,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":266,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":267,"author":{"gitId":"nevinlim"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-10"},{"lineNumber":268,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 14px;","lastModifiedDate":"2023-03-10"},{"lineNumber":269,"author":{"gitId":"nevinlim"},"content":"-fx-font-weight: bold;","lastModifiedDate":"2023-03-10"},{"lineNumber":270,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":271,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":272,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":273,"author":{"gitId":"nevinlim"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-10"},{"lineNumber":274,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: derive(#f5f5f5, 25%);","lastModifiedDate":"2023-03-10"},{"lineNumber":275,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":276,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":277,"author":{"gitId":"nevinlim"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-10"},{"lineNumber":278,"author":{"gitId":"nevinlim"},"content":"-fx-font-size: 18px;","lastModifiedDate":"2023-03-10"},{"lineNumber":279,"author":{"gitId":"nevinlim"},"content":"-fx-font-style: italic;","lastModifiedDate":"2023-03-10"},{"lineNumber":280,"author":{"gitId":"nevinlim"},"content":"-fx-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":281,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":282,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":283,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":284,"author":{"gitId":"nevinlim"},"content":".scroll-bar {","lastModifiedDate":"2023-03-10"},{"lineNumber":285,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":286,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":287,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":288,"author":{"gitId":"nevinlim"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-10"},{"lineNumber":289,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: #c7c7c7;","lastModifiedDate":"2023-03-10"},{"lineNumber":290,"author":{"gitId":"nevinlim"},"content":"-fx-background-insets: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":291,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":292,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":293,"author":{"gitId":"nevinlim"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-10"},{"lineNumber":294,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":295,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":296,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":297,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":298,"author":{"gitId":"nevinlim"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-10"},{"lineNumber":299,"author":{"gitId":"nevinlim"},"content":"-fx-shape: \" \";","lastModifiedDate":"2023-03-10"},{"lineNumber":300,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":301,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":302,"author":{"gitId":"nevinlim"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-10"},{"lineNumber":303,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-10"},{"lineNumber":304,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":305,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":306,"author":{"gitId":"nevinlim"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-10"},{"lineNumber":307,"author":{"gitId":"nevinlim"},"content":"-fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":308,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":309,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":310,"author":{"gitId":"nevinlim"},"content":"#cardPane {","lastModifiedDate":"2023-03-10"},{"lineNumber":311,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":312,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":313,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":314,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":315,"author":{"gitId":"nevinlim"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-10"},{"lineNumber":316,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-10"},{"lineNumber":317,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #0066cc;","lastModifiedDate":"2023-03-10"},{"lineNumber":318,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":319,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":320,"author":{"gitId":"nevinlim"},"content":"#commandTextField {","lastModifiedDate":"2023-03-10"},{"lineNumber":321,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent white transparent white;","lastModifiedDate":"2023-03-10"},{"lineNumber":322,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":323,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: white white #383838 white;","lastModifiedDate":"2023-03-10"},{"lineNumber":324,"author":{"gitId":"nevinlim"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":325,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":326,"author":{"gitId":"nevinlim"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-10"},{"lineNumber":327,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":328,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":329,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":330,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":331,"author":{"gitId":"nevinlim"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-10"},{"lineNumber":332,"author":{"gitId":"nevinlim"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-03-10"},{"lineNumber":333,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":334,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":335,"author":{"gitId":"nevinlim"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-10"},{"lineNumber":336,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2023-03-10"},{"lineNumber":337,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":338,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":339,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":340,"author":{"gitId":"nevinlim"},"content":"#tags {","lastModifiedDate":"2023-03-10"},{"lineNumber":341,"author":{"gitId":"nevinlim"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-10"},{"lineNumber":342,"author":{"gitId":"nevinlim"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":343,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":344,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":345,"author":{"gitId":"nevinlim"},"content":"#tags .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":346,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":347,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #4caf50;","lastModifiedDate":"2023-03-10"},{"lineNumber":348,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":349,"author":{"gitId":"nevinlim"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":350,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":351,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-10"},{"lineNumber":352,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":353,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":354,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":355,"author":{"gitId":"nevinlim"},"content":".error {","lastModifiedDate":"2023-03-10"},{"lineNumber":356,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-03-10"},{"lineNumber":357,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":358,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":359,"author":{"gitId":"nevinlim"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-10"},{"lineNumber":360,"author":{"gitId":"nevinlim"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-03-10"},{"lineNumber":361,"author":{"gitId":"nevinlim"},"content":"    -fx-background: #f2f2f2;","lastModifiedDate":"2023-03-10"},{"lineNumber":362,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":363,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":364,"author":{"gitId":"nevinlim"},"content":".tag-selector {","lastModifiedDate":"2023-03-10"},{"lineNumber":365,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":366,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":367,"author":{"gitId":"nevinlim"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":368,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":369,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":370,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":371,"author":{"gitId":"nevinlim"},"content":".tooltip-text {","lastModifiedDate":"2023-03-10"},{"lineNumber":372,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":373,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"nevinlim":373}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CareFlow\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    \u003cScene fx:id\u003d\"scene\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            \u003cMenuItem fx:id\u003d\"light\" mnemonicParsing\u003d\"false\" onAction\u003d\"#toggleLightTheme\" text\u003d\"Light Theme\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            \u003cMenuItem fx:id\u003d\"dark\" mnemonicParsing\u003d\"false\" onAction\u003d\"#toggleDarkTheme\" text\u003d\"Dark Theme\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"        \u003cTabPane fx:id\u003d\"tabPane\" minWidth\u003d\"340\" prefWidth\u003d\"340\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"          \u003cTab fx:id\u003d\"patientTab\" closable\u003d\"false\" text\u003d\"Patient Records\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"          \u003cTab fx:id\u003d\"drugTab\" closable\u003d\"false\" text\u003d\"Drug Inventory\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"            \u003cStackPane fx:id\u003d\"drugListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"        \u003c/TabPane\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"\u003c!--        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e--\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"\u003c!--          \u003cpadding\u003e--\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"\u003c!--            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e--\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"\u003c!--          \u003c/padding\u003e--\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"\u003c!--          \u003cStackPane fx:id\u003d\"patientDrugListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e--\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"\u003c!--        \u003c/VBox\u003e--\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nevinlim":5,"cydtseng":26,"-":35}},{"path":"src/main/resources/view/PatientDrugListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"  \u003cListView fx:id\u003d\"patientListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"  \u003cListView fx:id\u003d\"drugListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":1,"CShuwen":4,"-":4}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"      \u003cLabel fx:id\u003d\"birthDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthDate\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"      \u003cLabel fx:id\u003d\"gender\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"      \u003cLabel fx:id\u003d\"ic\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$ic\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":2,"Emrysil":4,"-":33}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    \u003cListView fx:id\u003d\"patientListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"cydtseng":8}},{"path":"src/test/java/seedu/address/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.TestUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"// * Tests JSON Read and Write","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//public class JsonUtilTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//        serializableTestClass.setTestValues();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":45}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"Jiayan-Lim"},"content":"    public void makeStringCaseInsensitive() {","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid input","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.makeStringCaseInsensitive(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid input","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"Jiayan-Lim"},"content":"        assertEquals(\"testing\", StringUtil.makeStringCaseInsensitive(\"TESTING\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":143,"Jiayan-Lim":10}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//public class AddCommandIntegrationTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    private Model model;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    public void execute_newPerson_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":45}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    private class ModelStub implements Model {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"//        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-05"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"//        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"//        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"//    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"//        private final Person person;","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"//        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"//            this.person \u003d person;","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-05"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"//            return this.person.isSamePerson(person);","lastModifiedDate":"2023-03-05"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"//    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-03-05"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"//        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"//        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"//            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-03-05"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"//        public void addPerson(Person person) {","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"//            requireNonNull(person);","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"//            personsAdded.add(person);","lastModifiedDate":"2023-03-05"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"//        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"//            return new AddressBook();","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Emrysil":124,"-":66}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//public class ClearCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":32}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"// * Contains helper methods for testing commands.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    static {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"////    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"////            Model expectedModel) {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"////        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"////            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"////            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"////            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"////        } catch (CommandException ce) {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"////            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"////        }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"////    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"////            Model expectedModel) {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"////        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"////        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        // only do so by copying its components.","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Emrysil":124,"-":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"// * {@code DeleteCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        showNoPerson(expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Emrysil":107,"-":2}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//public class EditCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":173}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//public class EditPersonDescriptorTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":58}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//public class ExitCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void execute_exit_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":20}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//public class FindCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":83}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//public class HelpCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void execute_help_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":20}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//public class ListCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    private Model model;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":39}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // whitespace only preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        // multiple names - last name accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        // multiple phones - last phone accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        // multiple emails - last email accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        // multiple addresses - last address accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        // multiple tags - all accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        // zero tags","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//        // missing name prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        // missing phone prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        // missing email prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//        // missing address prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        // all prefixes missing","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//        // invalid name","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        // invalid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//        // invalid email","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        // invalid address","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//        // invalid tag","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"//        // non-empty preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":141}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//public class AddressBookParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":101}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//public class EditCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        // no index specified","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        // no field specified","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        // no index and no field specified","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        // negative index","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        // zero index","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        // invalid phone followed by valid email","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"//        // name","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"//        // phone","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"//        // email","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"//        // address","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"//        // tags","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"//                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"//        // no other valid values specified","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"//        // other valid values specified","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"Emrysil"},"content":"//                + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"//                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":211}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collection;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//public class AddressBookTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        // Two persons with the same identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//            this.persons.setAll(persons);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//            return persons;","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//public class ModelManagerTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        // different addressBook -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        // different filteredList -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":132}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//public class UserPrefsTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/test/java/seedu/address/model/person/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDate));","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidBirthDate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        // null address","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfBirth.isValidBirthDate(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        // empty string date","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        // future date can\u0027t be birth date","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/2023\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.2023\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-2023\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        // year before 1900 shouldn\u0027t be birth date","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid date format","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"32-01-2022\")); // invalid day","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-13-2022\")); // invalid month","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid date of birth","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13/11/2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13.11.2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13-11-2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13/11/22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13.11.22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13-11-22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":56}},{"path":"src/test/java/seedu/address/model/person/DrugAllergyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"public class DrugAllergyTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DrugAllergy(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidDrugAllergy_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidDrugAllergy \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DrugAllergy(invalidDrugAllergy));","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e DrugAllergy.isValidDrugAllergy(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"With empty blank\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"WithSpecialCharacter[\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"Penicillin\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"peanuts\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":39}},{"path":"src/test/java/seedu/address/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"public class GenderTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank description","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid gender","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"fm\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"no idea\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid gender","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"f\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"feMale\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"Male\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":41}},{"path":"src/test/java/seedu/address/model/person/IcTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"public class IcTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Ic(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidIc \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Ic(invalidIc));","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Ic.isValidIc(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank description","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid ic","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a\")); // length of ic is not 9","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123x\")); // length of ic is not 9","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a12345678\")); // ic is not end with character","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123456bb\")); // ic format is invalid","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123t567b\")); // ic format is invalid","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123456*b\")); // special character show up","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid ic","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"a1234567b\")); // case insensitive","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"A1234567B\")); // case insensitive","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"a1234567z\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"A7654321Z\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":45}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        // One keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        // Multiple keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        // Only one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        // Zero keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":75}},{"path":"src/test/java/seedu/address/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"public class PatientTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Patient(null, null, null, null, null, null, null));","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Jiayan-Lim":15}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//public class PersonTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Person(null, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Person(null, null, null, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Person(null, null, null, null, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":98}},{"path":"src/test/java/seedu/address/model/person/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//public class UniquePatientListTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    private final UniquePatientList uniquePersonList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"////    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"////        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"////    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"////        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"////        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"////    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"////        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"////                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"////        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"////    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"////    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"////        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"////                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"////    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"////    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"////    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.remove(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"////        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPersons(personList);","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"////        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"////    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"////            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":159}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"class JsonAdaptedPatientTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public void constructorTest() {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        Patient p \u003d SampleDataUtil.getSamplePatients()[1];","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        new JsonAdaptedPatient(p);","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":16}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":110}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//public class JsonAddressBookStorageTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    @TempDir","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//                : null;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        // Save in new file and read back","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        original.addPerson(HOON);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        original.removePerson(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        // Save and read without specifying file path","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        original.addPerson(IDA);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":110}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//public class JsonSerializableAddressBookTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//                dataFromFile::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":47}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import java.util.Optional;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//public class JsonUserPrefsStorageTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @TempDir","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//                : null;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(expected, actual);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        return userPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        } catch (IOException ioe) {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        //Try saving when the file exists","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(original, readBack);","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":123}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//public class StorageManagerTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    @TempDir","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    public Path testFolder;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    private StorageManager storageManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        return testFolder.resolve(fileName);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    public void prefsReadSave() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        /*","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//         */","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        storageManager.saveUserPrefs(original);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(original, retrieved);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        /*","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//         */","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        storageManager.saveAddressBook(original);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    public void getAddressBookFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":68}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"// * A utility class to help with building Addressbook objects.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"// * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"// *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//public class AddressBookBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    private AddressBook addressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    public AddressBookBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//        addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//        this.addressBook \u003d addressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        addressBook.addPerson(person);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public AddressBook build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        return addressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":34}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Files;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"// * A utility class for test cases.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//public class TestUtil {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        } catch (IOException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//            throw new RuntimeException(e);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    public static Index getMidIndex(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//    public static Index getLastIndex(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":55}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"// * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//public class TypicalPersons {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//            .withPhone(\"94351253\")","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//            .withTags(\"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    // Manually added","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"////    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"////        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"////        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"////            ab.addPerson(person);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"////        }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"////        return ab;","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Emrysil":75}}]
