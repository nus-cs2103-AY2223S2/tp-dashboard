[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"* This is **our team Project  for Software Engineering (SE) students of CS2103T-W09-3**.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"* It is named `CareFlow`","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"* `CareFlow` aims to be an efficient patient and drug inventory management application for medical clinic receptionists.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"* The user (receptionist) can interact with the system via commands _[user input]_ and view the response _[system response]_","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"as well as drug _[drug inventory display]_ and patient list _[patient management display]_ as shown above in the UI mockup.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"* For the detailed documentation of this project, see the **[CareFlow Website](https://ay2223s2-cs2103t-w09-3.github.io/tp/)**.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":11,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"mainClassName \u003d \u0027seedu.careflow.Main\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"    archiveFileName \u003d \u0027careflow.jar\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cydtseng":2,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"### Li Xintong","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"\u003cimg src\u003d\"images/emrysil.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"[[homepage](https://ay2223s2-cs2103t-w09-3.github.io/tp/)]","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"[[github](https://github.com/Emrysil)]","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"* Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"* Responsibilities: develop drug inventory sub-system","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"* Contact: e0772646@u.nus.edu","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"### Tseng Chen-Yu","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"\u003cimg src\u003d\"images/cydtseng.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"[[github](http://github.com/cydtseng)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"* Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"* Responsibilities: Working on Patient subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"### Chen Shuwen","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"\u003cimg src\u003d\"images/cshuwen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"[[github](https://github.com/CShuwen)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"* Responsibilities: Working on Patient Subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"### Jiayan Lim","lastModifiedDate":"2023-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"\u003cimg src\u003d\"images/jiayan-lim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"[[github](http://github.com/Jiayan-Lim)]","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"[[portfolio](team/jiayan-lim.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"* Responsibilities: Working on Patient Subsystem","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"### Nevin Lim","lastModifiedDate":"2023-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"\u003cimg src\u003d\"images/nevinlim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"[[github](http://github.com/nevinlim)]","lastModifiedDate":"2023-02-23"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"[[portfolio](team/nevinlim.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"* Responsibilities: Drug Inventory Subsystem","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":5,"cydtseng":5,"Emrysil":7,"CShuwen":4,"-":33,"Jiayan-Lim":5}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Jiayan-Lim"},"content":"* Receptionists, specifically targeting General Practitioner clinics, usually with fewer and regular patients.","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"Jiayan-Lim"},"content":"* Mostly desk-bound. Computers are accessible tools.","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"Jiayan-Lim"},"content":"* Able to pick up typing skills quickly and able to type fast.","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"Jiayan-Lim"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"Jiayan-Lim"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"Jiayan-Lim"},"content":"* Better communication between healthcare providers and patients","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"Jiayan-Lim"},"content":"* Increased efficiency in tracking patient’s health records and personal information","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"Jiayan-Lim"},"content":"* Addresses the needs and pain points of GPs who do not have a centralized system for tracking patients and drugs/inventory","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"| Priority | As a …​                          | I want to …​                                                  | So that I can…​                                               |","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"Emrysil"},"content":"| -------- | ------------------------------- | ------------------------------------------------------------ | ------------------------------------------------------------ |","lastModifiedDate":"2023-03-12"},{"lineNumber":279,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic | Add new patients profiles                                    | use the system to track their personal information and health records |","lastModifiedDate":"2023-02-23"},{"lineNumber":280,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | Add new drug record                                          | use the system to store drug information and track storage   |","lastModifiedDate":"2023-03-12"},{"lineNumber":281,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic | delete a patient                                             | remove patient data that I no longer need                    |","lastModifiedDate":"2023-02-23"},{"lineNumber":282,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | delete a drug by index                                       | remove data of drugs that my clinic no longer offers         |","lastModifiedDate":"2023-03-12"},{"lineNumber":283,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | delete a drug by trade name                                  | remove data of drugs that my clinic no longer offers         |","lastModifiedDate":"2023-03-12"},{"lineNumber":284,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | list all drugs                                               | have an overview of the inventory                            |","lastModifiedDate":"2023-03-12"},{"lineNumber":285,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | list all patients                                            | have an overview of all patient records                      |","lastModifiedDate":"2023-03-12"},{"lineNumber":286,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic | find a person by name                                        | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-02-23"},{"lineNumber":287,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | find a drug by trade name                                    | retrieve details of the drug to facilitate prescription      |","lastModifiedDate":"2023-03-12"},{"lineNumber":288,"author":{"gitId":"CShuwen"},"content":"| `* * * ` | A receptionist at the GP clinic | Retrieve patients’ contact number                            | remind patients of their upcoming appointments               |","lastModifiedDate":"2023-02-23"},{"lineNumber":289,"author":{"gitId":"CShuwen"},"content":"| `* * *`  | A receptionist at the GP clinic | update patient profiles                                      | have access to the most updated version of their personal information in terms of their contact number, address etc to facilitate our internal patient management procedure |","lastModifiedDate":"2023-02-23"},{"lineNumber":290,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | increase a drug\u0027s storage count                              | update inventory whenever new batches of drug arrives        |","lastModifiedDate":"2023-03-12"},{"lineNumber":291,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | decrease a drug\u0027s storage count                              | update inventory whenever a drug is prescribed               |","lastModifiedDate":"2023-03-12"},{"lineNumber":292,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | clear all drug                                               | to prevent data leakage in case the clinic goes out of business |","lastModifiedDate":"2023-03-12"},{"lineNumber":293,"author":{"gitId":"Emrysil"},"content":"| `* * *`  | A receptionist at the GP clinic | clear all patients                                           | to prevent data leakage in case the clinic goes out of business |","lastModifiedDate":"2023-03-12"},{"lineNumber":294,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | sort persons by name                                         | locate a person easily                                       |","lastModifiedDate":"2023-02-23"},{"lineNumber":295,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | archive a patient profile if the patient has not visited for a long time | searching in a smaller dataset and when I distribute health information, I can omit patients in the archive to reduce spamming |","lastModifiedDate":"2023-02-23"},{"lineNumber":296,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Refer the patient to hospitals                               | easily forward their personal information, health record and health condition to hospitals if the patient needs more professional treatment |","lastModifiedDate":"2023-02-23"},{"lineNumber":297,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Check if a patient has any drug allergy                      | Inform the doctor of the patient’s drug allergy and ensure the safety of the patients by avoiding prescribing them with drugs that they are allergic to |","lastModifiedDate":"2023-02-23"},{"lineNumber":298,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Update patients on crowd conditions                          | They can avoid visiting during peak clinic capacities        |","lastModifiedDate":"2023-02-23"},{"lineNumber":299,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Access all hotlines to major SG hospitals                    | easily contact them for emergency cases                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":300,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Add appointment dates for a patient                          | easily tell who has upcoming appointments and sms/email them to remind them |","lastModifiedDate":"2023-02-23"},{"lineNumber":301,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Use the system to send notifications to patients who have upcoming appointments | send out mass notifications with one simple click without having to text each patient individually |","lastModifiedDate":"2023-02-23"},{"lineNumber":302,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Check a patient’s past appointment records at the clinic     | get information about their past visits (doctor, visit frequency, drugs prescribed etc.) |","lastModifiedDate":"2023-02-23"},{"lineNumber":303,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Detect patients who have missed their appointment            | send them reminders to make another appointment              |","lastModifiedDate":"2023-02-23"},{"lineNumber":304,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Update patients on the crowding condition upon request       | provide a more flexible experience at the clinic since they can decide whether or when to visit the clinic based on the crowding condition that can be easily retrieved |","lastModifiedDate":"2023-02-23"},{"lineNumber":305,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Append patient to the queue                                  | Ensure that the patients are served on a first-come-first-served basis and new patients will be lined at the end of the queue. |","lastModifiedDate":"2023-02-23"},{"lineNumber":306,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Check number of patients in the queue for doctor consultation | Know the number of patients already in the queue and inform new patients about the rough waiting hours before their consultation. |","lastModifiedDate":"2023-02-23"},{"lineNumber":307,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Dequeue patients once they enter consultation room           | ensure that the patient who is consulting is no longer in the queue and other patients in the queue can get to see the doctor |","lastModifiedDate":"2023-02-23"},{"lineNumber":308,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Take down special request from patient: male doctor/ female doctor/ specific doctor | Ensure that the patient is assigned to a doctor that they wish to visit and are comfortable with |","lastModifiedDate":"2023-02-23"},{"lineNumber":309,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Edit a calendar of patient appointments                      | make amendment to the patient appoitment if there is a need to delete or change the date of patient appointment |","lastModifiedDate":"2023-02-23"},{"lineNumber":310,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | View calendar of patient appointments                        | be informed about the upcoming appointments in the day       |","lastModifiedDate":"2023-02-23"},{"lineNumber":311,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Distribute health information / news to patients (SMS / whatsapp) | let patients know their personal health info                 |","lastModifiedDate":"2023-02-23"},{"lineNumber":312,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Record down the visitor who has entered the clinic           | Eliminate paper sign-in system                               |","lastModifiedDate":"2023-02-23"},{"lineNumber":313,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Track patient’s observation time at the clinic after vaccination/treatment | easily track and tell when they can leave                    |","lastModifiedDate":"2023-02-23"},{"lineNumber":314,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Check if a drug is still available and if it needs more supply | ensuer that the dispensary does not run out of supply of drugs |","lastModifiedDate":"2023-02-23"},{"lineNumber":315,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Generate pdf receipts for consultation, procedures and medication prescribed | have the choice to print out upon patient requests or email it to them (go green and paperless) |","lastModifiedDate":"2023-02-23"},{"lineNumber":316,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Check if a doctor has an appointment during a period of time. | Ensure that appointments will not clash                      |","lastModifiedDate":"2023-02-23"},{"lineNumber":317,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | notify patients to enter the consultation room by using the system to send push notifications / SMS, or any external broadcast devices | choose not to call out their names                           |","lastModifiedDate":"2023-02-23"},{"lineNumber":318,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | retrieve the patient\u0027s past vaccination records              | Inform the doctor and allow him or her to decide on whether to provide additional vaccines |","lastModifiedDate":"2023-02-23"},{"lineNumber":319,"author":{"gitId":"CShuwen"},"content":"| `* * `   | A receptionist at the GP clinic | Retrieve patients’ emergency contact                         | Inform the patients’ loved ones or guardian during unexpected situations |","lastModifiedDate":"2023-02-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"Jiayan-Lim"},"content":"(For all use cases below, the **System** is the `Careflow` and the **Actor** is the `GP receptionist`, unless specified otherwise)","lastModifiedDate":"2023-03-12"},{"lineNumber":324,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":325,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case: UC01 - Add a patient**","lastModifiedDate":"2023-02-23"},{"lineNumber":326,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":327,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":328,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":329,"author":{"gitId":"Jiayan-Lim"},"content":"**Guarantee: A new user account is created on the system with at least a name, NRIC, phone, email, and address**","lastModifiedDate":"2023-02-23"},{"lineNumber":330,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":331,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":332,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":333,"author":{"gitId":"Jiayan-Lim"},"content":"1. User request to add a new patient to the system.","lastModifiedDate":"2023-02-23"},{"lineNumber":334,"author":{"gitId":"Jiayan-Lim"},"content":"2. The user enters patient details.","lastModifiedDate":"2023-03-12"},{"lineNumber":335,"author":{"gitId":"Jiayan-Lim"},"content":"   1. The following are required information:","lastModifiedDate":"2023-02-23"},{"lineNumber":336,"author":{"gitId":"Jiayan-Lim"},"content":"         - Patient name","lastModifiedDate":"2023-02-23"},{"lineNumber":337,"author":{"gitId":"Jiayan-Lim"},"content":"         - Phone Number","lastModifiedDate":"2023-02-23"},{"lineNumber":338,"author":{"gitId":"Jiayan-Lim"},"content":"         - Email","lastModifiedDate":"2023-02-23"},{"lineNumber":339,"author":{"gitId":"Jiayan-Lim"},"content":"         - Address","lastModifiedDate":"2023-02-23"},{"lineNumber":340,"author":{"gitId":"Jiayan-Lim"},"content":"         - Date of Birth","lastModifiedDate":"2023-03-12"},{"lineNumber":341,"author":{"gitId":"Jiayan-Lim"},"content":"         - Gender","lastModifiedDate":"2023-03-12"},{"lineNumber":342,"author":{"gitId":"Jiayan-Lim"},"content":"         - IC","lastModifiedDate":"2023-03-12"},{"lineNumber":343,"author":{"gitId":"Jiayan-Lim"},"content":"   2. The following are non-required information:","lastModifiedDate":"2023-02-23"},{"lineNumber":344,"author":{"gitId":"Jiayan-Lim"},"content":"         - Drug Allergy","lastModifiedDate":"2023-02-23"},{"lineNumber":345,"author":{"gitId":"Jiayan-Lim"},"content":"         - Emergency contact","lastModifiedDate":"2023-02-23"},{"lineNumber":346,"author":{"gitId":"Jiayan-Lim"},"content":"3. The system creates the new user account.","lastModifiedDate":"2023-03-12"},{"lineNumber":347,"author":{"gitId":"Jiayan-Lim"},"content":"4. The system show the new created user in the patient list.","lastModifiedDate":"2023-03-12"},{"lineNumber":348,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":349,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":350,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":351,"author":{"gitId":"Jiayan-Lim"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":352,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. If any of the required fields are not completed","lastModifiedDate":"2023-02-23"},{"lineNumber":353,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":354,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. the user is informed of this and show the correct format for the command","lastModifiedDate":"2023-03-12"},{"lineNumber":355,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":356,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":357,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":358,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. If the patient name is already in use","lastModifiedDate":"2023-03-12"},{"lineNumber":359,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":360,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. the user is informed that he or she must choose a different name","lastModifiedDate":"2023-02-23"},{"lineNumber":361,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":362,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":363,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":364,"author":{"gitId":"Jiayan-Lim"},"content":"* 2c. If the input field is invalid, the user is informed of this, and the corresponding correct format for the command is displayed","lastModifiedDate":"2023-03-12"},{"lineNumber":365,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":366,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c1. If the length of name exceed 50 character, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":367,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":368,"author":{"gitId":"Jiayan-Lim"},"content":"\t  * 2c2. If the phone number is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":369,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":370,"author":{"gitId":"Jiayan-Lim"},"content":"\t  * 2c3. If the email is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":371,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":372,"author":{"gitId":"Jiayan-Lim"},"content":"  \t* 2c4. If the address is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":373,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":374,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c5. If the birth date is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":375,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":376,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c6. If the gender is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":377,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":378,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c7. If the IC is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":379,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":380,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c8. If the drug allergy is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":381,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":382,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c9. If the emergency contact is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":383,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":384,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":385,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":386,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case: UC02 - Delete a patient**","lastModifiedDate":"2023-03-12"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User \u003cins\u003elist all patients(UC03).\u003c/ins\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":393,"author":{"gitId":"Jiayan-Lim"},"content":"3.  User enters NRIC or index to delete a specific person in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":394,"author":{"gitId":"Jiayan-Lim"},"content":"4.  System deletes the person from the system.","lastModifiedDate":"2023-03-12"},{"lineNumber":395,"author":{"gitId":"Jiayan-Lim"},"content":"5.  System show the upddated patient list.","lastModifiedDate":"2023-03-12"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"Jiayan-Lim"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. The given NRIC is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":406,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":407,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. System shows an error message.","lastModifiedDate":"2023-03-12"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"Jiayan-Lim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":410,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":411,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":412,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":413,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. System shows an error message.","lastModifiedDate":"2023-03-12"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC03 - List all patients**","lastModifiedDate":"2023-02-23"},{"lineNumber":418,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":419,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":420,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":421,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":422,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":423,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to list all patients.","lastModifiedDate":"2023-03-12"},{"lineNumber":424,"author":{"gitId":"Jiayan-Lim"},"content":"2.  System shows a list of patients.","lastModifiedDate":"2023-03-12"},{"lineNumber":425,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":426,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-03-12"},{"lineNumber":427,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":428,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC04 - Find the patients**","lastModifiedDate":"2023-03-12"},{"lineNumber":429,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":430,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-03-12"},{"lineNumber":431,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":432,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-03-12"},{"lineNumber":433,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":434,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to find patients.","lastModifiedDate":"2023-03-12"},{"lineNumber":435,"author":{"gitId":"Jiayan-Lim"},"content":"2.  User enter keyword that they want search for.","lastModifiedDate":"2023-03-12"},{"lineNumber":436,"author":{"gitId":"Jiayan-Lim"},"content":"2.  System return the list of patient that contain the keyword given by the user.","lastModifiedDate":"2023-03-12"},{"lineNumber":437,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":438,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":439,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":440,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC05 - Add a drug**","lastModifiedDate":"2023-03-12"},{"lineNumber":441,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":442,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":443,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":444,"author":{"gitId":"Jiayan-Lim"},"content":"**Guarantee: A new drug entry is created on the system with**","lastModifiedDate":"2023-03-12"},{"lineNumber":445,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":446,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":447,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":448,"author":{"gitId":"Jiayan-Lim"},"content":"1. User request to add a new drug to the system","lastModifiedDate":"2023-02-23"},{"lineNumber":449,"author":{"gitId":"Jiayan-Lim"},"content":"2. The user enters drug details","lastModifiedDate":"2023-02-23"},{"lineNumber":450,"author":{"gitId":"Jiayan-Lim"},"content":"   1. The following are required information:","lastModifiedDate":"2023-03-12"},{"lineNumber":451,"author":{"gitId":"Jiayan-Lim"},"content":"         - Trade name ","lastModifiedDate":"2023-03-12"},{"lineNumber":452,"author":{"gitId":"Jiayan-Lim"},"content":"         - Active ingredients","lastModifiedDate":"2023-03-12"},{"lineNumber":453,"author":{"gitId":"Jiayan-Lim"},"content":"         - Direction ","lastModifiedDate":"2023-03-12"},{"lineNumber":454,"author":{"gitId":"Jiayan-Lim"},"content":"         - Purpose ","lastModifiedDate":"2023-03-12"},{"lineNumber":455,"author":{"gitId":"Jiayan-Lim"},"content":"         - Side effect ","lastModifiedDate":"2023-03-12"},{"lineNumber":456,"author":{"gitId":"Jiayan-Lim"},"content":"         - Storage count","lastModifiedDate":"2023-03-12"},{"lineNumber":457,"author":{"gitId":"Jiayan-Lim"},"content":"3. The system creates the new drug entry","lastModifiedDate":"2023-03-12"},{"lineNumber":458,"author":{"gitId":"Jiayan-Lim"},"content":"4. The system show the new created drug in the drug list","lastModifiedDate":"2023-02-23"},{"lineNumber":459,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":460,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":461,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":462,"author":{"gitId":"Jiayan-Lim"},"content":"**Extensions**","lastModifiedDate":"2023-03-12"},{"lineNumber":463,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. If any of the required fields are not completed","lastModifiedDate":"2023-03-12"},{"lineNumber":464,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":465,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. the user is informed of this and show the correct format for the command","lastModifiedDate":"2023-03-12"},{"lineNumber":466,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":467,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-03-12"},{"lineNumber":468,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":469,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. If the trade name is already in use","lastModifiedDate":"2023-03-12"},{"lineNumber":470,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":471,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. the user is informed that he or she must choose a different name","lastModifiedDate":"2023-03-12"},{"lineNumber":472,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":473,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-03-12"},{"lineNumber":474,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":475,"author":{"gitId":"Jiayan-Lim"},"content":"* 2c. If the input field is invalid, the user is informed of this, and the corresponding correct format for the command is displayed","lastModifiedDate":"2023-03-12"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":477,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c1. If the length of tradeName exceed 50 character, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":478,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":479,"author":{"gitId":"Jiayan-Lim"},"content":"\t  * 2c2. If the active ingredient is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":480,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":481,"author":{"gitId":"Jiayan-Lim"},"content":"\t  * 2c3. If the direction is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":482,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":483,"author":{"gitId":"Jiayan-Lim"},"content":"  \t* 2c4. If the purpose is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":484,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":485,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c5. If the side effect is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":486,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":487,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2c6. If the storage count is invalid, the user is informed of this, and correct format for the command is displayed.","lastModifiedDate":"2023-03-12"},{"lineNumber":488,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":489,"author":{"gitId":"Jiayan-Lim"},"content":" Use case resume at step 2.","lastModifiedDate":"2023-03-12"},{"lineNumber":490,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":491,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC06 - Delete a drug**","lastModifiedDate":"2023-03-12"},{"lineNumber":492,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":493,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":497,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User \u003cins\u003elists all drugs(UC06).\u003c/ins\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":498,"author":{"gitId":"Jiayan-Lim"},"content":"3.  User enters drug\u0027s trade name or index to delete a specific drug in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":499,"author":{"gitId":"Jiayan-Lim"},"content":"4.  System deletes the drug from the system.","lastModifiedDate":"2023-03-12"},{"lineNumber":500,"author":{"gitId":"Jiayan-Lim"},"content":"5.  System show the updated drug list.","lastModifiedDate":"2023-03-12"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-02-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":506,"author":{"gitId":"Jiayan-Lim"},"content":"* 1a. The list is empty.","lastModifiedDate":"2023-02-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":510,"author":{"gitId":"Jiayan-Lim"},"content":"* 2a. The given trade name is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":512,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2a1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":516,"author":{"gitId":"Jiayan-Lim"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2023-02-23"},{"lineNumber":517,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":518,"author":{"gitId":"Jiayan-Lim"},"content":"    * 2b1. CareFlow shows an error message.","lastModifiedDate":"2023-02-23"},{"lineNumber":519,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":520,"author":{"gitId":"Jiayan-Lim"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-23"},{"lineNumber":521,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":522,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC07 - List all drugs**","lastModifiedDate":"2023-03-12"},{"lineNumber":523,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":524,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-02-23"},{"lineNumber":525,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":526,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-02-23"},{"lineNumber":527,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":528,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to list all drugs","lastModifiedDate":"2023-02-23"},{"lineNumber":529,"author":{"gitId":"Jiayan-Lim"},"content":"2.  System shows a list of drugs","lastModifiedDate":"2023-03-12"},{"lineNumber":530,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":531,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-03-12"},{"lineNumber":532,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":533,"author":{"gitId":"Jiayan-Lim"},"content":"**Use case:  UC08 - Find the drugs**","lastModifiedDate":"2023-03-12"},{"lineNumber":534,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":535,"author":{"gitId":"Jiayan-Lim"},"content":"**Precondition: The GP receptionist is logged into the system**","lastModifiedDate":"2023-03-12"},{"lineNumber":536,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":537,"author":{"gitId":"Jiayan-Lim"},"content":"**MSS**","lastModifiedDate":"2023-03-12"},{"lineNumber":538,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":539,"author":{"gitId":"Jiayan-Lim"},"content":"1.  User requests to find drugs.","lastModifiedDate":"2023-03-12"},{"lineNumber":540,"author":{"gitId":"Jiayan-Lim"},"content":"2.  User enter keyword that they want search for.","lastModifiedDate":"2023-03-12"},{"lineNumber":541,"author":{"gitId":"Jiayan-Lim"},"content":"2.  System return the list of drug that contain the keyword given by the user.","lastModifiedDate":"2023-03-12"},{"lineNumber":542,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":543,"author":{"gitId":"Jiayan-Lim"},"content":"    Use case ends.","lastModifiedDate":"2023-02-23"},{"lineNumber":544,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"CShuwen"},"content":"4.  Should be easy to use and navigate for the clinic receptionist. It should have a simple and intuitive interface that is easy to learn and use","lastModifiedDate":"2023-02-23"},{"lineNumber":553,"author":{"gitId":"CShuwen"},"content":"5.  Should be secure and protect patient data from unauthorized access or disclosure.","lastModifiedDate":"2023-02-23"},{"lineNumber":554,"author":{"gitId":"CShuwen"},"content":"6.  Should be able to accommodate growth and expansion. It should be easy to add new features and functionalities as needed.","lastModifiedDate":"2023-02-23"},{"lineNumber":555,"author":{"gitId":"CShuwen"},"content":"7.  Should be easy to maintain and update through a clear and well-documented architecture, and it should be easy to troubleshoot and fix problems should they arise.","lastModifiedDate":"2023-02-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"Jiayan-Lim"},"content":"* **GP receptionist**: General practitioners receptionist","lastModifiedDate":"2023-02-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Emrysil":11,"CShuwen":35,"-":370,"Jiayan-Lim":199}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"   1. Run the `seedu.careflow.Main` and try a few commands.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"cydtseng":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"   e.g. `seedu.careflow.commons.StringUtilTest`","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"   e.g. `seedu.careflow.storage.StorageManagerTest`","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"   e.g. `seedu.careflow.logic.LogicManagerTest`","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"title: CareFlow User Guide","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"\u003ca id\u003d\"top\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"Careflow is a **desktop application for patient and drug inventory management, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"If you are a receptionist for a GP clinic and you can type fast, Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"1. Ensure you have Java 11 installed in your Computer.","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"   * [Installing Java 11 on Windows](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-microsoft-windows-platforms.html#GUID-371F38CC-248F-49EC-BB9C-C37FC89E52A0)","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"   * [Installing Java 11 on macOS](https://docs.oracle.com/en/java/javase/11/install/installation-jdk-macos.html)","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"2. Download the latest `careflow.jar` from [here](https://github.com/AY2223S2-CS2103T-W09-3/tp).","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"3. Copy the file to the folder you want to use as the home folder for your careflowBook.","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar careflow.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"   * `p list` : Lists all patients.","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"   * `d list` : Lists all drugs.","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"   * `add -n John Doe -ph 98765432 -em johnd@example.com -ad John Street, Block 123, #01-01 -dob 21-01-2000 -g male -ic T3871918C` : Adds a patient named `John Doe` to the patient records.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"   * `p delete -in 3` : Deletes the 3rd patient record shown in the current list.","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"   * `p clear` : Deletes all patient records.","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"   * `d clear` : Deletes all drug records","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"#### Notes about command format:","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"* Words in UPPER CASE are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"e.g. in add -n NAME, NAME is a parameter which can be used as add -n John Doe.","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"* Words in `UPPER CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"  e.g. in `add -n NAME`, NAME is a parameter which can be used as `add -n John Doe`.","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"### View help : `g help`","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"Shows all valid command formats and their functionalities.","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"Format: `g help`","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"### Add a Patient record:  `p add`","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"Adds a patient to the list of patients.","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"Format: `p add -n PATIENT_NAME -ph PHONE_NUMBER -em EMAIL -ad ADDRESS -dob DATE_OF_BIRTH -g GENDER -ic NRIC [-da DRUG_ALLERGY] [-ec EMERGENCY_CONTACT_NUMBER]`","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"CShuwen"},"content":"* `p add -n John Doe -ph 98765432 -em johnd@example.com -ad John Street, Block 123, #01-01 -dob 21-01-2000 -g male -ic T3871918C `","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"CShuwen"},"content":"* `p add -n Betsy Crowe -ph 92478963 -em betsycrowe@example.com -ad Sambal Street, Block 72, #04-12 -dob 01-01-2001 -g female -ic T8837191D -da Aspirin -ec 12345678`","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"### List all Patient records : `p list`","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"Shows a list of all patients in the CareFlow system in alphabetical order.","lastModifiedDate":"2023-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"Format: `p list`","lastModifiedDate":"2023-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"### Clear all Patient records : `p clear`","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"nevinlim"},"content":"Clears all records for patients.","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"Format: `p clear`","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"### Retrieve a Patient record by name: `p find`","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"Finds patients whose names contain any of the given keywords.","lastModifiedDate":"2023-02-23"},{"lineNumber":103,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"Format: `p find -n PATIENT_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2023-02-23"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"* Only the name is searched.","lastModifiedDate":"2023-02-23"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":109,"author":{"gitId":"CShuwen"},"content":"* `p find John` returns john and John Doe","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"CShuwen"},"content":"* `p find alex david` returns Alex Yeoh, David Li","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"nevinlim"},"content":"### Delete a Patient record by NRIC: `p delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"cydtseng"},"content":"Deletes the specified patient from the patient list.","lastModifiedDate":"2023-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"cydtseng"},"content":"Format: `p delete -ic PATIENT_NRIC`","lastModifiedDate":"2023-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":119,"author":{"gitId":"cydtseng"},"content":"* `p delete -ic T1234567B`","lastModifiedDate":"2023-02-23"},{"lineNumber":120,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":121,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"nevinlim"},"content":"### Delete a Patient record by index: `p delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"cydtseng"},"content":"Deletes the person at the specified INDEX.","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-02-23"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"Format: `p delete -in PATIENT_INDEX`","lastModifiedDate":"2023-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"cydtseng"},"content":"Example:","lastModifiedDate":"2023-02-23"},{"lineNumber":131,"author":{"gitId":"cydtseng"},"content":"* list followed by p delete -in 2 will delete the 2nd person in the patient list.","lastModifiedDate":"2023-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"Jiayan-Lim"},"content":"### Update a patient by name: `p update`","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Jiayan-Lim"},"content":"Edits an existing patient in the careflow.","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"Jiayan-Lim"},"content":"Format: `p update -n PATIENT_NAME [-n NEW_NAME] [-ph NEW_PHONE_NUMBER] [-em NEW_EMAIL] [-ad NEW_ADDRESS] [-dob NEW_DATE_OF_BIRTH] [-g GENDER] [-ic IC] [-da PATIENT_DRUG_ALLERGY] [-ec NEW_EMERGENCY_CONTACT_NUMBER]`","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"Jiayan-Lim"},"content":"Example:","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"Jiayan-Lim"},"content":"* p update John -ph 91234567 -em johndoe@example.com -ec 81234567 Edits the phone number, email address, emergency contact number of John to be 91234567, johndoe@example.com and 81234567 respectively.","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"Jiayan-Lim"},"content":"* p update Bety -n Betsy Crower -da Aspirin Edits the name and drug allergy of Bety to be Betsy Crowers and Aspirin respectively.","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"nevinlim"},"content":"### Add a Drug entry: `d add`","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"nevinlim"},"content":"Adds a drug entry to the list of drugs.","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"nevinlim"},"content":"Format: `d add -tn TRADE_NAME -ai ACTIVE_INGREDIENT -dir DIRECTIONS -pur PURPOSE -se SIDE_EFFECTS -sc STORAGE_COUNT`","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"CShuwen"},"content":"* `d add -tn Panadol -ai Paracetamol -dir Adults and children above 12 years old, 1-2 capsules -pur treat fever, headache, toothache, rheumatic and muscle pains -se dizziness, fatigue -sc 500`","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"nevinlim"},"content":"### List all Drug entries: `d list`","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"nevinlim"},"content":"Shows a list of all drug entries in the CareFlow system in alphabetical order.","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"nevinlim"},"content":"Format: `d list`","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":163,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":164,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"nevinlim"},"content":"### Retrieve a Drug entry by TRADE_NAME: `d find`","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"nevinlim"},"content":"Finds drug(s) whose trade_name contains any of the given keywords.","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"nevinlim"},"content":"Format: `d find -tn TRADE_NAME`","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"nevinlim"},"content":"* The search is case-insensitive. e.g panadol will match Panadol.","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"nevinlim"},"content":"* Only the trade name is searched.","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"nevinlim"},"content":"### Delete a Drug entry by TRADE_NAME: `d delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"nevinlim"},"content":"Deletes the specified drug entry that matches the trade name keyword from the drug list.","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"cydtseng"},"content":"Format: `d delete -tn TRADE_NAME`","lastModifiedDate":"2023-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-23"},{"lineNumber":182,"author":{"gitId":"cydtseng"},"content":"* `d delete -tn Panadol Flu Max`","lastModifiedDate":"2023-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":185,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"nevinlim"},"content":"### Delete a Drug entry by INDEX : `d delete`","lastModifiedDate":"2023-03-07"},{"lineNumber":188,"author":{"gitId":"nevinlim"},"content":"Deletes the specified drug entry from the drug list based on the index of the drug list.","lastModifiedDate":"2023-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":190,"author":{"gitId":"cydtseng"},"content":"Format: `d delete -i DRUG_INDEX`","lastModifiedDate":"2023-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"cydtseng"},"content":"* `d delete -i 7`","lastModifiedDate":"2023-02-23"},{"lineNumber":194,"author":{"gitId":"nevinlim"},"content":"* This deletes the 7th drug entry in the most recently shown list","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"nevinlim"},"content":"### Clear all Drug entries : `d clear`","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"cydtseng"},"content":"Clears all entries for drugs.","lastModifiedDate":"2023-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"cydtseng"},"content":"Format: `d clear`","lastModifiedDate":"2023-02-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"nevinlim"},"content":"### Update storage count of a Drug entry: `d update`","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"nevinlim"},"content":"Updates the storage count of specified drug entry based on trade name keyword from drug list.","lastModifiedDate":"2023-03-07"},{"lineNumber":209,"author":{"gitId":"nevinlim"},"content":"* NOTE: concatenate + or - in front of value for addition/subtraction respectively","lastModifiedDate":"2023-03-07"},{"lineNumber":210,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"nevinlim"},"content":"Format:","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"nevinlim"},"content":"\u003cbr\u003e`d update -tn TRADE_NAME -up +VALUE` \u003cbr\u003e OR \u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"nevinlim"},"content":"`d update -tn TRADE_NAME -up -VALUE`","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":215,"author":{"gitId":"nevinlim"},"content":"Examples:","lastModifiedDate":"2023-03-07"},{"lineNumber":216,"author":{"gitId":"nevinlim"},"content":"* `d update -tn Panadol Flu Max -up -10`","lastModifiedDate":"2023-03-07"},{"lineNumber":217,"author":{"gitId":"nevinlim"},"content":"  * This **decreases** storage count of the drug entry with trade name matching \"Panadol Flu Max\" by **10**","lastModifiedDate":"2023-03-07"},{"lineNumber":218,"author":{"gitId":"nevinlim"},"content":"* `d update -tn Tylenol PM -up +50`","lastModifiedDate":"2023-03-07"},{"lineNumber":219,"author":{"gitId":"nevinlim"},"content":"  * This **increases** storage count of the drug entry with trade name matching \"Tylenol PM\" by **50**","lastModifiedDate":"2023-03-07"},{"lineNumber":220,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":221,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":222,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"nevinlim"},"content":"### Exit the program : `g exit`","lastModifiedDate":"2023-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"nevinlim"},"content":"Format: `g exit`","lastModifiedDate":"2023-03-07"},{"lineNumber":228,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"cydtseng"},"content":"CareFlow data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"cydtseng"},"content":"All CareFlow data is saved as a JSON file `[JAR file location]/data/careflow.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":243,"author":{"gitId":"cydtseng"},"content":"If your changes to the data file makes its format invalid, CareFlow will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"cydtseng"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CareFlow home folder.","lastModifiedDate":"2023-02-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"cydtseng"},"content":"## Command Summary","lastModifiedDate":"2023-02-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"nevinlim"},"content":"| Action                        | Format, Examples                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-03-07"},{"lineNumber":266,"author":{"gitId":"CShuwen"},"content":"|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"nevinlim"},"content":"| **Help**                      | `g help`                                                                                                                                                                                                                                                                                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":268,"author":{"gitId":"CShuwen"},"content":"| **Add patient**               | `p add -n PATIENT_NAME -ph PHONE_NUMBER -em EMAIL -ad ADDRESS -dob DATE_OF_BIRTH -g GENDER -ic NRIC [-da DRUG_ALLERGY] [-ec EMERGENCY_CONTACT_NUMBER]` \u003cbr\u003e e.g., `add -n John Doe -ph 98765432 -em johnd@example.com -ad John Street, Block 123, #01-01 -dob 21-01-2000 -g male -ic T3871918C` |                                           |                                        |","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"nevinlim"},"content":"| **List patient**              | `p list`                                                                                                                                                                                                                                                                                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":270,"author":{"gitId":"nevinlim"},"content":"| **Clear all patient**         | `p clear`                                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-07"},{"lineNumber":271,"author":{"gitId":"nevinlim"},"content":"| **Find patient by name**      | `p find -n PATIENT_NAME` \u003cbr\u003e e.g., `p find -n John` returns `john` and `John Doe`                                                                                                                                                                                                              |","lastModifiedDate":"2023-03-07"},{"lineNumber":272,"author":{"gitId":"nevinlim"},"content":"| **Delete patient by index**   | `p delete -in PATIENT_INDEX` \u003cbr\u003e e.g., `delete -in 3`                                                                                                                                                                                                                                          |","lastModifiedDate":"2023-03-07"},{"lineNumber":273,"author":{"gitId":"nevinlim"},"content":"| **Delete patient by NRIC**    | `p delete -ic PATIENT_NRIC` \u003cbr\u003e e.g., `delete -ic T0021248C`                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-03-07"},{"lineNumber":274,"author":{"gitId":"CShuwen"},"content":"| **Update patient by name**    | `p update -n PATIENT_NAME [-n NEW_NAME] [-ph NEW_PHONE_NUMBER] [-em NEW_EMAIL] [-ad NEW_ADDRESS] [-dob NEW_DATE_OF_BIRTH] [-g GENDER] [-ic IC] [-da PATIENT_DRUG_ALLERGY] [-ec NEW_EMERGENCY_CONTACT_NUMBER]`                                                                                   |                                                                                                                                                                                                                                  |","lastModifiedDate":"2023-03-13"},{"lineNumber":275,"author":{"gitId":"nevinlim"},"content":"| **Add a drug**                | `d add -tn TRADE_NAME -ai ACTIVE_INGREDIENT -dir DIRECTIONS -pur PURPOSE -se SIDE_EFFECTS -sc STORAGE_COUNT` \u003cbr\u003e e.g., `d add -tn Panadol -ai paracetamol, sodium -dir Adults, 1-2 capsules -pur treat fever, headache -se dizziness -sc 500`                                                  |","lastModifiedDate":"2023-03-07"},{"lineNumber":276,"author":{"gitId":"nevinlim"},"content":"| **List drug**                 | `d list`                                                                                                                                                                                                                                                                                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":277,"author":{"gitId":"nevinlim"},"content":"| **Clear all drugs**           | `d clear`                                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-07"},{"lineNumber":278,"author":{"gitId":"nevinlim"},"content":"| **Find drug by trade name**   | `d find -tn TRADE_NAME` \u003cbr\u003e e.g., `d find -tn panadol`                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-03-07"},{"lineNumber":279,"author":{"gitId":"nevinlim"},"content":"| **Delete drug by trade name** | `d delete -tn TRADE_NAME`\u003cbr\u003e e.g., `d delete -tn Panadol Flu Max`                                                                                                                                                                                                                              |","lastModifiedDate":"2023-03-07"},{"lineNumber":280,"author":{"gitId":"nevinlim"},"content":"| **Delete drug by index**      | `d delete -i INDEX`\u003cbr\u003e e.g.,`d delete -i 7`                                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-03-07"},{"lineNumber":281,"author":{"gitId":"nevinlim"},"content":"| **Update drug storage count** | `d update -tn TRADE_NAME -sc +-VALUE`\u003cbr\u003e e.g.,`d update -tn Panadol Flu Max -sc +90`                                                                                                                                                                                                           |","lastModifiedDate":"2023-03-07"},{"lineNumber":282,"author":{"gitId":"nevinlim"},"content":"| **Exit**                      | `g exit`                                                                                                                                                                                                                                                                                        |","lastModifiedDate":"2023-03-07"},{"lineNumber":283,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":284,"author":{"gitId":"CShuwen"},"content":"[Back to top](#top)","lastModifiedDate":"2023-03-13"},{"lineNumber":285,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"nevinlim":64,"cydtseng":60,"CShuwen":37,"-":116,"Jiayan-Lim":8}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"nevinlim"},"content":"    content: \"CareFlow\";","lastModifiedDate":"2023-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"nevinlim":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"title: CareFlow","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"[![Java CI](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103T-W09-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"[![codecov](https://codecov.io/gh/nus-cs2103-AY2223S2/tp/branch/master/graph/badge.svg?token\u003dSNV76O467D)](https://codecov.io/gh/nus-cs2103-AY2223S2/tp)","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"**CareFlow is a desktop application for patient and drug inventory management of medical clinics.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"* If you are interested in using CareFlow, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"* If you are interested about developing CareFlow, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"nevinlim":6,"-":12}},{"path":"docs/team/cshuwen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"title: Chen Shuwen\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"### Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"Careflow is a desktop application for patient and drug inventory management, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"CShuwen":20}},{"path":"docs/team/cydtseng.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"title: Tseng Chen-Yu\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"To be added soon.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"### Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"Careflow is a desktop application for patient and drug inventory management of medical clinics, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"### Summary of Contributions","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":21}},{"path":"docs/team/emrysil.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"# Xintong\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"### Project: CareFlow","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"Careflow is a desktop application for patient and drug inventory management, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"- **New Feature**","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"- **New Feature**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"- **Code contributed**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"- **Enhancements to existing features**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"- **Documentation**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"  - Contributions to User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"  - Contributions to Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"- **Community**","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"- **Tools**","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"  - TBA","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":25}},{"path":"docs/team/jiayan-lim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jiayan-Lim"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"title: Jiayan\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"# Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"Careflow is a desktop application for patient and drug inventory management of medical clinics, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"Careflow can get your patient and drugs management tasks done faster than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"### Summary of Contributions (to be added soon)","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"- Code Contributed:","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"- Enhancements implemented:","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to the User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to the Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions to team-based tasks:","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"- Review/mentoring contributions:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"- Contributions beyond the project team:","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Jiayan-Lim":18}},{"path":"docs/team/nevinlim.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nevinlim"},"content":"# Nevin\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"##Overview","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"***CareFlow*** is a desktop application for _patient and drug inventory management of medical clinics_, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"***CareFlow*** can get your patient and drugs management tasks done **faster** than traditional applications.","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"## \u003cins\u003eCode contributed: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"* Give a link to your code on tP Code Dashboard. The link is available in the Project List Page -- linked to the  icon under your profile picture.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eEnhancements implemented: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"* A summary of the enhancements you implemented.","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to the UG: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"* Which sections did you contribute to the UG?","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to the DG: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"* Which sections did you contribute to the DG? Which UML diagrams did you add/updated?","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions to team-based tasks\u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eReview/mentoring contributions: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"* Links to PRs reviewed, instances of helping team members in other ways.","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"##\u003cins\u003eContributions beyond the project team: \u003c/ins\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"* Evidence of helping others e.g. responses you posted in our forum, bugs you reported in other team\u0027s products,","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"* Evidence of technical leadership e.g. sharing useful information in the forum","lastModifiedDate":"2023-02-23"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"[Coming soon]","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":41}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"cydtseng"},"content":"Create a `RemarkCommandParser` class in the `seedu.careflow.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"cydtseng"},"content":"Create a new `Remark` in `seedu.careflow.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"cydtseng"},"content":"Simply add the following to [`seedu.careflow.ui.PatientCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"cydtseng":6,"-":395}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.careflow.logic.Logic`.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"A quick look at the `seedu.careflow.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cydtseng":2,"-":299}},{"path":"src/main/java/seedu/careflow/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.FileUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"cydtseng":3,"-":61}},{"path":"src/main/java/seedu/careflow/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"cydtseng":1,"-":24}},{"path":"src/main/java/seedu/careflow/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"import javafx.application.HostServices;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Version;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.StringUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.CareFlowLogic;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.CareFlowLogicManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModelManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.HospitalRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.CareFlowStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.CareFlowStorageManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.DrugInventoryStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.JsonDrugInventoryStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.JsonPatientRecordStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.PatientRecordStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.ui.Ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.ui.UiManager;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"    private static HostServices hostServices;","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowLogic logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowStorage storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    protected CareFlowModel model;","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    public static HostServices getStaticHostServices() {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"        return hostServices;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CareFlow ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        PatientRecordStorage patientRecordStorage \u003d new JsonPatientRecordStorage(userPrefs.getPatientRecordFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        DrugInventoryStorage drugInventoryStorage \u003d new JsonDrugInventoryStorage(userPrefs.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        storage \u003d new CareFlowStorageManager(patientRecordStorage, drugInventoryStorage, userPrefsStorage);","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        logic \u003d new CareFlowLogicManager(model, storage);","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    private CareFlowModel initModelManager(CareFlowStorage careFlowStorage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyPatientRecord\u003e patientRecordOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyDrugInventory\u003e drugInventoryOptional;","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyPatientRecord initialDataPatient;","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyDrugInventory initialDataDrug;","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"        ReadOnlyHospitalRecords initialDataHospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"        initialDataHospital \u003d new HospitalRecord();","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"            patientRecordOptional \u003d storage.readPatientRecord();","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"            drugInventoryOptional \u003d storage.readDrugInventory();","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"            if (patientRecordOptional.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"                logger.info(\"Patient data file not found. Will be starting with a sample Patient Record\");","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"            if (drugInventoryOptional.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"                logger.info(\"Drug data file not found. Will be starting with a sample Drug Inventory\");","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d patientRecordOptional.orElseGet(SampleDataUtil::getSamplePatientRecord);","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d drugInventoryOptional.orElseGet(SampleDataUtil::getSampleDrugInventory);","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with empty Patient Record and Drug \"","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"                    + \"Inventory\");","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"nevinlim"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with a empty Patient Record and \"","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"nevinlim"},"content":"                    + \"Drug Inventory\");","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"            initialDataPatient \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"            initialDataDrug \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"CShuwen"},"content":"        return new CareFlowModelManager(initialDataPatient, initialDataDrug, userPrefs);","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"nevinlim"},"content":"        hostServices \u003d getHostServices();","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"nevinlim"},"content":"        logger.info(\"Starting CareFlow \" + MainApp.VERSION);","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"nevinlim"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping CareFlow ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nevinlim":15,"cydtseng":33,"Emrysil":27,"CShuwen":1,"-":138}},{"path":"src/main/java/seedu/careflow/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":1,"-":62}},{"path":"src/main/java/seedu/careflow/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    private static final String DEFAULT_THEME \u003d \"DARK\";","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private final String theme;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        theme \u003d DEFAULT_THEME;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, String theme) {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"    public String getTheme() {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"        return theme;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates)","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 theme.equals(o.theme);","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        sb.append(\"Theme : \" + theme);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":1,"Emrysil":9,"CShuwen":3,"-":76}},{"path":"src/main/java/seedu/careflow/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    private static final String LOG_FILE \u003d \"careflow.log\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":1,"Emrysil":1,"-":110}},{"path":"src/main/java/seedu/careflow/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_UNKNOWN_OPERATION_TYPE \u003d \"Unknown operation type\";","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX \u003d \"The patient index provided is invalid\";","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_INVALID_PATIENT_DISPLAYED_IC \u003d \"The patient NRIC provided is not found\";","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_INVALID_DRUG_DISPLAYED_INDEX \u003d \"The drug index provided is invalid\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_DRUGS_LISTED_OVERVIEW \u003d \"%1$d drugs listed!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_PATIENTS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nevinlim":2,"cydtseng":1,"Emrysil":1,"CShuwen":3,"-":11}},{"path":"src/main/java/seedu/careflow/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":1,"-":115}},{"path":"src/main/java/seedu/careflow/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core.index;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cydtseng":1,"-":53}},{"path":"src/main/java/seedu/careflow/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":1,"-":10}},{"path":"src/main/java/seedu/careflow/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":1,"-":20}},{"path":"src/main/java/seedu/careflow/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.MainApp;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cydtseng":2,"-":40}},{"path":"src/main/java/seedu/careflow/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":1,"-":34}},{"path":"src/main/java/seedu/careflow/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cydtseng":3,"-":20}},{"path":"src/main/java/seedu/careflow/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":1,"-":82}},{"path":"src/main/java/seedu/careflow/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":3,"-":140}},{"path":"src/main/java/seedu/careflow/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"     * Convert given string to lowercase.","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"    public static String makeStringCaseInsensitive(String s) {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(s);","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"        return s.toLowerCase();","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":2,"-":66,"Jiayan-Lim":9}},{"path":"src/main/java/seedu/careflow/logic/CareFlowLogic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":" * API of the CareFlow Logic component","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowLogic {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * Returns the PatientRecord","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyPatientRecord getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * Returns the DrugInventory","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyDrugInventory getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"    ReadOnlyHospitalRecords getHospitalRecord();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered list of patients */","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered list of drugs */","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"    /** Returns an unmodifiable view of hospitals */","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    ObservableList\u003cHospital\u003e getHospitalList();","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"nevinlim":5,"cydtseng":16,"Emrysil":21,"-":29}},{"path":"src/main/java/seedu/careflow/logic/CareFlowLogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.CareFlowParser;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.storage.CareFlowStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":" * The main LogicManager of the CareFlow application.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"public class CareFlowLogicManager implements CareFlowLogic {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CareFlowLogicManager.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowModel model;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowStorage storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    private final CareFlowParser careFlowParser;","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code CareFlowLogicManager} with the given {@code CareFlowModel} and {@code Storage}.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    public CareFlowLogicManager(CareFlowModel model, CareFlowStorage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        this.model \u003d model;","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        this.careFlowParser \u003d new CareFlowParser();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        CommandResult commandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        Command command \u003d careFlowParser.parseCommand(commandText);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            storage.savePatientRecord(model.getPatientRecord());","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"            storage.saveDrugInventory(model.getDrugInventory());","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + e, e);","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        return commandResult;","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        return model.getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        return model.getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"    public ReadOnlyHospitalRecords getHospitalRecord() {","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"        return model.getHospitalRecords();","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        return model.getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getFilteredDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        return model.getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"    public ObservableList\u003cHospital\u003e getHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"        return model.getHospitalList();","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        return model.getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        return model.getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":7,"cydtseng":26,"Emrysil":76}},{"path":"src/main/java/seedu/careflow/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public abstract CommandResult execute(CareFlowModel model) throws CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":3,"Emrysil":1,"-":14}},{"path":"src/main/java/seedu/careflow/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":1,"-":70}},{"path":"src/main/java/seedu/careflow/logic/commands/drugcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ACTIVE_INGREDIENT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DIRECTION;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PURPOSE;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_SIDE_EFFECT;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_STORAGE_COUNT;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * Adds a drug to the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a drug to the drug inventory.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_TRADE_NAME + \" TRADE NAME \"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_ACTIVE_INGREDIENT + \" ACTIVE INGREDIENT \"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_PURPOSE + \" PURPOSE(S)... \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_SIDE_EFFECT + \" SIDE EFFECT(S)... \"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_DIRECTION + \" DIRECTION \"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_STORAGE_COUNT + \" STORAGE COUNT\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_TRADE_NAME + \" Panadol \"","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_ACTIVE_INGREDIENT + \" Paracetamol \"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_PURPOSE + \" relieve pain / relieve fever / relieve headache \"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_SIDE_EFFECT + \" skin rash / swelling of the lips, tongue, throat or face / nausea / \"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"            + \"unexplained bruising or bleeding \"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_DIRECTION + \" Adults and children over 12 years: 1-2 caplets taken every 4 to 6 hours. Not \"","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"            + \"recommended for children under 12 years. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            + PREFIX_STORAGE_COUNT + \" 50\";","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New drug added: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_DUPLICATE_DRUG \u003d \"This drug already exists in the drug inventory\";","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    public final Drug toAdd;","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"     * Creates an AddCommand to add the specified {@code Drug}","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"     * @param drug the Drug to be added","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public AddCommand(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        toAdd \u003d drug;","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"        if (model.hasDrug(toAdd)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DRUG);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"        model.addDrug(toAdd);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":18,"cydtseng":12,"Emrysil":34,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/careflow/logic/commands/drugcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":" * Empties the existing Drug inventory","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Drug inventory has been cleared!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        model.setDrugInventory(new DrugInventory());","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":5,"cydtseng":6,"Emrysil":16}},{"path":"src/main/java/seedu/careflow/logic/commands/drugcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * Deletes a drug from the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted Drug: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Drug not found: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            + \":  Deletes the drug identified by the index number used in the displayed drug list.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_INDEX + \" INDEX\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Example: \" + COMMAND_WORD + \" -i 2\"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            + COMMAND_WORD + \":  Deletes the drug identified by its trade name.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_TRADE_NAME + \" TRADE NAME\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Example: \" + COMMAND_WORD + \" -tn Panadol\";","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"    private TradeName targetTradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    public DeleteCommand(TradeName targetTradeName) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        this.targetTradeName \u003d targetTradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"        List\u003cDrug\u003e drugList \u003d model.getFilteredDrugList();","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        if (targetTradeName \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d drugList.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_DRUG_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"            Drug drugToDelete \u003d drugList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"            model.deleteDrug(drugToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, drugToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"            Drug drugToDelete \u003d null;","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"            for (Drug drug : drugList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                if (drug.getTradeName().equals(targetTradeName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                    drugToDelete \u003d drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"            if (drugToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"                throw new CommandException(String.format(MESSAGE_FAILURE, targetTradeName));","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"            model.deleteDrug(drugToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, drugToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":47,"cydtseng":11,"Emrysil":12,"Jiayan-Lim":4}},{"path":"src/main/java/seedu/careflow/logic/commands/drugcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Finds a drug from the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    //public static final String MESSAGE_SUCCESS \u003d \"Found matching Drug(s): %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"            + \": Finds all drug(s) whose trade name contain any of \"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD + \" Panadol\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    private final TradeNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    public FindCommand(TradeNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"        model.updateFilteredDrugList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                String.format(Messages.MESSAGE_DRUGS_LISTED_OVERVIEW, model.getFilteredDrugList().size()));","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":20,"cydtseng":7,"Emrysil":11}},{"path":"src/main/java/seedu/careflow/logic/commands/drugcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Lists all drugs in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all drugs\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        model.updateFilteredDrugList(model.PREDICATE_SHOW_ALL_DRUGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":6,"cydtseng":5,"Emrysil":12}},{"path":"src/main/java/seedu/careflow/logic/commands/drugcommands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_UPDATE;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":" * Updates the storage count of an existing Drug in the drug inventory.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Drug: %1$s \\nUpdated storage count: %2$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Drug not found: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"            + \": Updates storage count of drug whose trade name matches given trade name.\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_TRADE_NAME + \" TRADENAME \"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_UPDATE + \" UPDATE VALUE (add + or - in front for addition/deduction) \\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_TRADE_NAME + \" Panadol \"","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            + PREFIX_UPDATE + \" +30\";","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"    private final TradeName tradeName;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    private final Integer value;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    private final boolean add;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"     * @param tradeName the tradeName keyword to identify the existing Drug to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"     * @param value the update value in integer for storage count","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"     * @param add a boolean to denote addition or subtraction for the update value","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"    public UpdateCommand(TradeName tradeName, Integer value, boolean add) {","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        this.add \u003d add;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"        List\u003cDrug\u003e drugList \u003d model.getFilteredDrugList();","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"        Drug toUpdate \u003d null;","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"        for (Drug drug : drugList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"            if (drug.getTradeName().equals(tradeName)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"                if (add) {","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                    drug.getStorageCount().incStorage(value);","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                    drug.getStorageCount().decrStorage(value);","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                toUpdate \u003d drug;","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"                model.setDrug(drug, drug);","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                break;","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"        if (toUpdate \u003d\u003d null) {","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"            throw new CommandException(String.format(MESSAGE_FAILURE, tradeName));","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"                String.format(MESSAGE_SUCCESS, toUpdate.getTradeName(), toUpdate.getStorageCount()));","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nevinlim":65,"cydtseng":9}},{"path":"src/main/java/seedu/careflow/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"cydtseng":1,"-":16}},{"path":"src/main/java/seedu/careflow/logic/commands/generalcommand/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.generalcommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Careflow as requested ...\";","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    public CommandResult execute(CareFlowModel model) {","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":1,"cydtseng":4,"-":13,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/careflow/logic/commands/generalcommand/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.generalcommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"            + \"Example: g \" + COMMAND_WORD;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":1,"cydtseng":5,"Emrysil":1,"-":15}},{"path":"src/main/java/seedu/careflow/logic/commands/patientcommands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" * Adds a patient to the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to patient records.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMAIL + \" EMAIL \"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_ADDRESS + \" ADDRESS \"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DOB + \" DOB \"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_GENDER + \" GENDER \"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_IC + \" IC \"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_DRUG_ALLERGY + \" DRUG_ALLERGY \"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_EMERGENCY_CONTACT_NUMBER + \" EMERGENCY_CONTACT_NUMBER\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_NAME + \" Tom Smith \"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_PHONE + \" 84356788 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_EMAIL + \" tsmith@gmail.com \"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_ADDRESS + \" 969 Lock Street #04-32 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DOB + \" 2001-05-28 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_GENDER + \" MALE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_IC + \" T0278234M \"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"            + PREFIX_DRUG_ALLERGY + \" Aspirin \"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_EMERGENCY_CONTACT_NUMBER + \" 93746552\";","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New patient added: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"This patient already exists.\";","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"    private final Patient patientToAdd;","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"     * Creates an AddCommand to add the specified {@code Patient}","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"     * @param patient Patient to be added","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"    public AddCommand(Patient patient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"        patientToAdd \u003d patient;","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"                || (other instanceof AddCommand","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"                \u0026\u0026 patientToAdd.equals(((AddCommand) other).patientToAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"    public CommandResult execute(CareFlowModel careFlowModel) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(careFlowModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"        if (careFlowModel.hasPatient(patientToAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        careFlowModel.addPatient(patientToAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, patientToAdd));","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":6,"cydtseng":59,"Emrysil":10,"Jiayan-Lim":4}},{"path":"src/main/java/seedu/careflow/logic/commands/patientcommands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":" * Empties the existing Patient records","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Patient record has been cleared!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        model.setPatientRecord(new PatientRecord());","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":5,"cydtseng":6,"Emrysil":13}},{"path":"src/main/java/seedu/careflow/logic/commands/patientcommands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * Deletes a patient from the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"            + \": Deletes the patient identified by the index number used in the displayed patient list.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"            + COMMAND_WORD + \":  Deletes the the patient identified by the IC number.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_IC + \" IC\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Example: \" + COMMAND_WORD + \" -ic T1234567A\";","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_DELETE_PATIENT_SUCCESS \u003d \"Deleted patient: %1$s\";","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"    private Index targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    private Ic targetIc;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"    public DeleteCommand(Ic ic) {","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"        this.targetIc \u003d ic;","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        if (other instanceof seedu.careflow.logic.commands.patientcommands.DeleteCommand) {","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"            if (targetIndex !\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"                return targetIndex.equals((","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"                        (seedu.careflow.logic.commands.patientcommands.DeleteCommand)","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"                                other).targetIndex);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"            if (targetIc !\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"                return targetIc.equals((","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"                        (seedu.careflow.logic.commands.patientcommands.DeleteCommand)","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"                                other).targetIc);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"        return other \u003d\u003d this;","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"     *  Executes the Patient deletion","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"     * @return The command result if deletion is successful","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"     * @throws CommandException If an error occurred during deletion","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"CShuwen"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"CShuwen"},"content":"        List\u003cPatient\u003e patientList \u003d model.getFilteredPatientList();","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"CShuwen"},"content":"        if (targetIc \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"CShuwen"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d patientList.size()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"CShuwen"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"CShuwen"},"content":"            Patient patientToDelete \u003d patientList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"CShuwen"},"content":"            model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"CShuwen"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"CShuwen"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"CShuwen"},"content":"            Patient patientToDelete \u003d null; // delete using patient ic","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"CShuwen"},"content":"            for (Patient patient : patientList) {","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"CShuwen"},"content":"                if (patient.getIc().equals(targetIc)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"CShuwen"},"content":"                    patientToDelete \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"CShuwen"},"content":"                    break;","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"CShuwen"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"            if (patientToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"CShuwen"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PATIENT_DISPLAYED_IC);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"CShuwen"},"content":"            model.deletePatient(patientToDelete);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"CShuwen"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PATIENT_SUCCESS, patientToDelete));","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":10,"cydtseng":24,"Emrysil":10,"CShuwen":52,"Jiayan-Lim":2}},{"path":"src/main/java/seedu/careflow/logic/commands/patientcommands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Finds a patient from the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all patient whose names contain any of \"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"    public CommandResult execute(CareFlowModel model) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"        model.updateFilteredPatientList(predicate);","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"                String.format(Messages.MESSAGE_PATIENTS_LISTED_OVERVIEW, model.getFilteredPatientList().size()));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 predicate.equals((","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"                        (seedu.careflow.logic.commands.patientcommands.FindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":1,"cydtseng":7,"Emrysil":1,"CShuwen":4,"-":30}},{"path":"src/main/java/seedu/careflow/logic/commands/patientcommands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Lists all patients in the patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all patients\";","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public CommandResult execute(CareFlowModel model) throws CommandException {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        model.updateFilteredPatientList(model.PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":6,"cydtseng":5,"Emrysil":12}},{"path":"src/main/java/seedu/careflow/logic/commands/patientcommands/UpdateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.model.CareFlowModel.PREDICATE_SHOW_ALL_PATIENTS;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":" * Update the details of an existing person in the careflow.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"            + \": Update the details of the person identified given the patient name. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Parameters: Patient name\"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_PHONE + \" PHONE ] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_EMAIL + \" EMAIL ] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_ADDRESS + \" ADDRESS ] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_DOB + \" DATE_OF_BIRTH ] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_GENDER + \" GENDER ] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_IC + \" IC ] \"","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_NAME + \" DRUG ALLERGY NUMBER ] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"            + \" [ \" + PREFIX_EMERGENCY_CONTACT_NUMBER + \" EMRGENCY CONTACT ]\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"            + \"Example: \" + COMMAND_WORD + \" John \"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com \"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_DRUG_ALLERGY + \" Aspirin \"","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"            + PREFIX_EMERGENCY_CONTACT_NUMBER + \" 93746552\";","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Updated Patient: %1$s\";","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"    private final EditPatientDescriptor editPatientDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param name of the person in the filtered person list to edit","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"     * @param editPatientDescriptor details to edit the person with","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"    public UpdateCommand(Name name, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"CShuwen"},"content":"        requireNonNull(editPatientDescriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"CShuwen"},"content":"        this.editPatientDescriptor \u003d new EditPatientDescriptor(editPatientDescriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"Jiayan-Lim"},"content":"    public CommandResult execute(CareFlowModel careFlowModel) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(careFlowModel);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"        List\u003cPatient\u003e lastShownList \u003d careFlowModel.getFilteredPatientList();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"Jiayan-Lim"},"content":"        Patient patientToEdit \u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"        for (Patient patient: lastShownList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"            if (patient.getName().equals(name)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"                patientToEdit \u003d patient;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"Jiayan-Lim"},"content":"                break;","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"CShuwen"},"content":"        Patient editedPatient \u003d createEditedPatient(requireNonNull(patientToEdit), editPatientDescriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"        if (!patientToEdit.isSamePatient(editedPatient) \u0026\u0026 careFlowModel.hasPatient(editedPatient)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"Jiayan-Lim"},"content":"        careFlowModel.setPatient(patientToEdit, editedPatient);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"Jiayan-Lim"},"content":"        careFlowModel.updateFilteredPatientList(PREDICATE_SHOW_ALL_PATIENTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"Jiayan-Lim"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPatient));","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"Jiayan-Lim"},"content":"     * Creates and returns a {@code Patient} with the details of {@code patientToEdit}","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"CShuwen"},"content":"     * edited with {@code editPatientDescriptor}.","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"CShuwen"},"content":"    private static Patient createEditedPatient(Patient patientToEdit, EditPatientDescriptor editPatientDescriptor) {","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"Jiayan-Lim"},"content":"        assert patientToEdit !\u003d null;","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"CShuwen"},"content":"        Name updatedName \u003d editPatientDescriptor.getName().orElse(patientToEdit.getName());","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"CShuwen"},"content":"        Phone updatedPhone \u003d editPatientDescriptor.getPhone().orElse(patientToEdit.getPhone());","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CShuwen"},"content":"        Email updatedEmail \u003d editPatientDescriptor.getEmail().orElse(patientToEdit.getEmail());","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"CShuwen"},"content":"        Address updatedAddress \u003d editPatientDescriptor.getAddress().orElse(patientToEdit.getAddress());","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"CShuwen"},"content":"        DateOfBirth updatedBirthDate \u003d editPatientDescriptor.getDateOfBirth().orElse(patientToEdit.getBirthDate());","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"CShuwen"},"content":"        Gender updatedGender \u003d editPatientDescriptor.getGender().orElse(patientToEdit.getGender());","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"CShuwen"},"content":"        Ic updatedIc \u003d editPatientDescriptor.getIc().orElse(patientToEdit.getIc());","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"CShuwen"},"content":"        DrugAllergy updatedDrugAllergy \u003d editPatientDescriptor","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"Jiayan-Lim"},"content":"                .getDrugAllergy()","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"Jiayan-Lim"},"content":"                .orElse(patientToEdit.getDrugAllergy());","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"CShuwen"},"content":"        Phone updatedEmergencyContact \u003d editPatientDescriptor","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"Jiayan-Lim"},"content":"                .getEmergencyContact()","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"Jiayan-Lim"},"content":"                .orElse(patientToEdit.getEmergencyContact());","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"Jiayan-Lim"},"content":"        return new Patient(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate, updatedGender,","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"Jiayan-Lim"},"content":"                updatedIc, updatedDrugAllergy, updatedEmergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"Jiayan-Lim"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"Jiayan-Lim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"Jiayan-Lim"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"Jiayan-Lim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!(other instanceof UpdateCommand)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"Jiayan-Lim"},"content":"        // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"Jiayan-Lim"},"content":"        UpdateCommand e \u003d (UpdateCommand) other;","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"Jiayan-Lim"},"content":"        return name.equals(e.name)","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"CShuwen"},"content":"                \u0026\u0026 editPatientDescriptor.equals(e.editPatientDescriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"Jiayan-Lim"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"Jiayan-Lim"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"CShuwen"},"content":"    public static class EditPatientDescriptor {","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"Jiayan-Lim"},"content":"        private Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"Jiayan-Lim"},"content":"        private Phone phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"Jiayan-Lim"},"content":"        private Email email;","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"Jiayan-Lim"},"content":"        private Address address;","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"Jiayan-Lim"},"content":"        private DateOfBirth dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"Jiayan-Lim"},"content":"        private Gender gender;","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"Jiayan-Lim"},"content":"        private Ic ic;","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"Jiayan-Lim"},"content":"        private DrugAllergy drugAllergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"Jiayan-Lim"},"content":"        private Phone emergencyContact;","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"CShuwen"},"content":"        public EditPatientDescriptor() {}","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"Jiayan-Lim"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"Jiayan-Lim"},"content":"         * Copy constructor.","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"Jiayan-Lim"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"Jiayan-Lim"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"CShuwen"},"content":"        public EditPatientDescriptor(EditPatientDescriptor toCopy) {","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"Jiayan-Lim"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"Jiayan-Lim"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"Jiayan-Lim"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"Jiayan-Lim"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"Jiayan-Lim"},"content":"            setDateOfBirth(toCopy.dateOfBirth);","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"Jiayan-Lim"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"Jiayan-Lim"},"content":"            setIc(toCopy.ic);","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"Jiayan-Lim"},"content":"            setDrugAllergy(toCopy.drugAllergy);","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"Jiayan-Lim"},"content":"            setEmergencyContact(toCopy.emergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"Jiayan-Lim"},"content":"        /**","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"Jiayan-Lim"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"Jiayan-Lim"},"content":"         */","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"Jiayan-Lim"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"Jiayan-Lim"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address,","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"Jiayan-Lim"},"content":"                    dateOfBirth, gender, ic, drugAllergy, emergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"Jiayan-Lim"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Jiayan-Lim"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"Jiayan-Lim"},"content":"            this.email \u003d email;","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"Jiayan-Lim"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setDateOfBirth(DateOfBirth dateOfBirth) {","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"Jiayan-Lim"},"content":"            this.dateOfBirth \u003d dateOfBirth;","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cDateOfBirth\u003e getDateOfBirth() {","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(dateOfBirth);","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"Jiayan-Lim"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setIc(Ic ic) {","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"Jiayan-Lim"},"content":"            this.ic \u003d ic;","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cIc\u003e getIc() {","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(ic);","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setDrugAllergy(DrugAllergy drugAllergy) {","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"Jiayan-Lim"},"content":"            this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cDrugAllergy\u003e getDrugAllergy() {","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(drugAllergy);","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"Jiayan-Lim"},"content":"        public void setEmergencyContact(Phone emergencyContact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"Jiayan-Lim"},"content":"            this.emergencyContact \u003d emergencyContact;","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"Jiayan-Lim"},"content":"        public Optional\u003cPhone\u003e getEmergencyContact() {","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"Jiayan-Lim"},"content":"            return Optional.ofNullable(emergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"Jiayan-Lim"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"Jiayan-Lim"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"Jiayan-Lim"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"Jiayan-Lim"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"Jiayan-Lim"},"content":"                return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":263,"author":{"gitId":"Jiayan-Lim"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":264,"author":{"gitId":"CShuwen"},"content":"            if (!(other instanceof EditPatientDescriptor)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":265,"author":{"gitId":"Jiayan-Lim"},"content":"                return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":266,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":267,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":268,"author":{"gitId":"Jiayan-Lim"},"content":"            // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":269,"author":{"gitId":"CShuwen"},"content":"            EditPatientDescriptor e \u003d (EditPatientDescriptor) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":270,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":271,"author":{"gitId":"Jiayan-Lim"},"content":"            return getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-08"},{"lineNumber":272,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-08"},{"lineNumber":273,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-08"},{"lineNumber":274,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getDateOfBirth().equals(e.getDateOfBirth())","lastModifiedDate":"2023-03-08"},{"lineNumber":275,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2023-03-08"},{"lineNumber":276,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getIc().equals(e.getIc())","lastModifiedDate":"2023-03-08"},{"lineNumber":277,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getDrugAllergy().equals(e.getDrugAllergy())","lastModifiedDate":"2023-03-08"},{"lineNumber":278,"author":{"gitId":"Jiayan-Lim"},"content":"                    \u0026\u0026 getEmergencyContact().equals(e.getEmergencyContact());","lastModifiedDate":"2023-03-08"},{"lineNumber":279,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":280,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":281,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"cydtseng":25,"CShuwen":25,"Jiayan-Lim":231}},{"path":"src/main/java/seedu/careflow/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"cydtseng":1,"-":59}},{"path":"src/main/java/seedu/careflow/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"cydtseng":1,"-":147}},{"path":"src/main/java/seedu/careflow/logic/parser/CareFlowParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_UNKNOWN_OPERATION_TYPE;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.generalcommand.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.drugparser.DrugParser;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.generalparser.GeneralParser;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.patientparser.PatientParser;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * Represents a Parser that is able to parse user input.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * CareFlow Parser will distribute commands to DrugParser, PatientParser and GeneralParser based on the","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * operation type. ie. operation type can be \"p\", \"d\" or \"g\"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class CareFlowParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003copType\u003e[pdg])\\\\s(?\u003ccommandWord\u003e\\\\S+)\"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            + \"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * Parses user input and distribute different operations to specific parsers.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on user input","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        // \"d\" for drug related operations, \"p\" for patient related operations and \"g\" for general operations","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        final String opType \u003d matcher.group(\"opType\");","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        switch (opType) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        case DrugParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            return new DrugParser().parse(commandWord, arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        case PatientParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            return new PatientParser().parse(commandWord, arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        case GeneralParser.OPERATION_TYPE:","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            return new GeneralParser().parse(commandWord);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_OPERATION_TYPE);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":1,"cydtseng":9,"Emrysil":40}},{"path":"src/main/java/seedu/careflow/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /* Prefix definitions for patient */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-ph\");","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-em\");","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-ad\");","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"-dob\");","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DRUG_ALLERGY \u003d new Prefix(\"-da\");","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"-g\");","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_IC \u003d new Prefix(\"-ic\");","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"    public static final Prefix PREFIX_EMERGENCY_CONTACT_NUMBER \u003d new Prefix(\"-ec\");","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /* Prefix definitions for drug*/","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_ACTIVE_INGREDIENT \u003d new Prefix(\"-ai\");","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_DIRECTION \u003d new Prefix(\"-dir\");","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_PURPOSE \u003d new Prefix(\"-pur\");","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_SIDE_EFFECT \u003d new Prefix(\"-se\");","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_STORAGE_COUNT \u003d new Prefix(\"-sc\");","lastModifiedDate":"2023-02-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public static final Prefix PREFIX_TRADE_NAME \u003d new Prefix(\"-tn\");","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"-i\");","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    public static final Prefix PREFIX_UPDATE \u003d new Prefix(\"-up\");","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nevinlim":2,"cydtseng":2,"Emrysil":18,"-":8}},{"path":"src/main/java/seedu/careflow/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"cydtseng":3,"-":13}},{"path":"src/main/java/seedu/careflow/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.StringUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Direction;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Purpose;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.SideEffect;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.StorageCount;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String birthDate} into a {@code DateOfBirth}","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code birthDate} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"cydtseng"},"content":"    public static DateOfBirth parseDateOfBirth(String birthDate) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"cydtseng"},"content":"        String trimmedBirthDate \u003d birthDate.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"cydtseng"},"content":"        if (!DateOfBirth.isValidBirthDate(trimmedBirthDate)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"cydtseng"},"content":"        return new DateOfBirth(trimmedBirthDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String gender} into a {@code Gender}","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"cydtseng"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"cydtseng"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"cydtseng"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"cydtseng"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String icNumber} into a {@code Ic}","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code icNumber} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"    public static Ic parseIc(String icNumber) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"cydtseng"},"content":"        String trimmedIcNumber \u003d icNumber.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":169,"author":{"gitId":"cydtseng"},"content":"        if (!Ic.isValidIc(trimmedIcNumber)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"cydtseng"},"content":"        return new Ic(trimmedIcNumber);","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"nevinlim"},"content":"     * Parses {@code String drugAllergy} into a {@code DrugAllergy}","lastModifiedDate":"2023-03-10"},{"lineNumber":176,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code drugAllergy} is invalid.","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"cydtseng"},"content":"    public static DrugAllergy parseDrugAllergy(String drugAllergy) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"Jiayan-Lim"},"content":"        if (drugAllergy \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"Jiayan-Lim"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"cydtseng"},"content":"        String trimmedDrugAllergy \u003d drugAllergy.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"cydtseng"},"content":"        if (!DrugAllergy.isValidDrugAllergy(trimmedDrugAllergy)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"cydtseng"},"content":"        return new DrugAllergy(trimmedDrugAllergy);","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":189,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":190,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"Jiayan-Lim"},"content":"     * Parses a {@code String emergencyContact} into a {@code EmergencyContact}.","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"Jiayan-Lim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"Jiayan-Lim"},"content":"     * @throws ParseException if the given {@code EmergencyContact} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"Jiayan-Lim"},"content":"    public static Phone parseEmergencyContact(String emergencyContact) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"Jiayan-Lim"},"content":"        if (emergencyContact \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"Jiayan-Lim"},"content":"            return null;","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"Jiayan-Lim"},"content":"        String trimmedEmergencyContact \u003d emergencyContact.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!Phone.isValidPhone(trimmedEmergencyContact)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"Jiayan-Lim"},"content":"        return new Phone(trimmedEmergencyContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":208,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String tradeName} into a {@code TradeName}.","lastModifiedDate":"2023-03-03"},{"lineNumber":209,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":210,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":211,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code tradeName} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":212,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":213,"author":{"gitId":"nevinlim"},"content":"    public static TradeName parseTradeName(String tradeName) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":214,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":215,"author":{"gitId":"nevinlim"},"content":"        String trimmedTradeName \u003d tradeName.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":216,"author":{"gitId":"nevinlim"},"content":"        if (!TradeName.isValidTradeName(trimmedTradeName)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":217,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(TradeName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":218,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":219,"author":{"gitId":"nevinlim"},"content":"        return new TradeName(trimmedTradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":220,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":221,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":222,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":223,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String ingredient} into a {@code ActiveIngredient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":224,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":225,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":226,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code ingredient} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":227,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":228,"author":{"gitId":"nevinlim"},"content":"    public static ActiveIngredient parseActiveIngredient(String ingredient) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":229,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":230,"author":{"gitId":"nevinlim"},"content":"        String trimmedIngredient \u003d ingredient.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":231,"author":{"gitId":"nevinlim"},"content":"        if (!ActiveIngredient.isValidIngredient(trimmedIngredient)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":232,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(ActiveIngredient.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":233,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":234,"author":{"gitId":"nevinlim"},"content":"        return new ActiveIngredient(trimmedIngredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":235,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":236,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":237,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":238,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String direction} into a {@code Direction}.","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":241,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code direction} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":242,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"nevinlim"},"content":"    public static Direction parseDirection(String direction) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(direction);","lastModifiedDate":"2023-03-03"},{"lineNumber":245,"author":{"gitId":"nevinlim"},"content":"        String trimmedDirection \u003d direction.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":246,"author":{"gitId":"nevinlim"},"content":"        if (!Direction.isValidDirection(trimmedDirection)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":247,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(Direction.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":"        return new Direction(trimmedDirection);","lastModifiedDate":"2023-03-03"},{"lineNumber":250,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":251,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String purpose} into a {@code Purpose}.","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code purpose} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":258,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"nevinlim"},"content":"    public static Purpose parsePurpose(String purpose) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(purpose);","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"nevinlim"},"content":"        String trimmedPurpose \u003d purpose.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"nevinlim"},"content":"        if (!Purpose.isValidPurpose(trimmedPurpose)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(Purpose.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":264,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":265,"author":{"gitId":"nevinlim"},"content":"        return new Purpose(trimmedPurpose);","lastModifiedDate":"2023-03-03"},{"lineNumber":266,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":268,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":269,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String sideEffect} into a {@code SideEffect}.","lastModifiedDate":"2023-03-03"},{"lineNumber":270,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":271,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":272,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code sideEffect} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":273,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":274,"author":{"gitId":"nevinlim"},"content":"    public static SideEffect parseSideEffect(String sideEffect) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":275,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(sideEffect);","lastModifiedDate":"2023-03-03"},{"lineNumber":276,"author":{"gitId":"nevinlim"},"content":"        String trimmedSideEffect \u003d sideEffect.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":277,"author":{"gitId":"nevinlim"},"content":"        if (!SideEffect.isValidSideEffect(trimmedSideEffect)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":278,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(SideEffect.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":279,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":280,"author":{"gitId":"nevinlim"},"content":"        return new SideEffect(trimmedSideEffect);","lastModifiedDate":"2023-03-03"},{"lineNumber":281,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":282,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":283,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":284,"author":{"gitId":"nevinlim"},"content":"     * Parses a {@code String count} into a {@code StorageCount}.","lastModifiedDate":"2023-03-03"},{"lineNumber":285,"author":{"gitId":"nevinlim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-03"},{"lineNumber":286,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":287,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the given {@code count} is invalid.","lastModifiedDate":"2023-03-03"},{"lineNumber":288,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":289,"author":{"gitId":"nevinlim"},"content":"    public static StorageCount parseStorageCount(String count) throws ParseException {","lastModifiedDate":"2023-03-03"},{"lineNumber":290,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-03-03"},{"lineNumber":291,"author":{"gitId":"nevinlim"},"content":"        String trimmedCount \u003d count.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":292,"author":{"gitId":"nevinlim"},"content":"        if (!StorageCount.isValidStorageCount(trimmedCount)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":293,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(StorageCount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":294,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":295,"author":{"gitId":"nevinlim"},"content":"        return new StorageCount(trimmedCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":296,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nevinlim":110,"cydtseng":52,"-":115,"Jiayan-Lim":20}},{"path":"src/main/java/seedu/careflow/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"cydtseng":1,"-":38}},{"path":"src/main/java/seedu/careflow/logic/parser/drugparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ACTIVE_INGREDIENT;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DIRECTION;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PURPOSE;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_SIDE_EFFECT;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_STORAGE_COUNT;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Prefix;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Direction;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Purpose;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.SideEffect;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.StorageCount;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                ArgumentTokenizer.tokenize(userInput,","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_TRADE_NAME, PREFIX_ACTIVE_INGREDIENT,","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_DIRECTION, PREFIX_PURPOSE,","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"                        PREFIX_SIDE_EFFECT, PREFIX_STORAGE_COUNT);","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_TRADE_NAME, PREFIX_ACTIVE_INGREDIENT, PREFIX_DIRECTION,","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                PREFIX_PURPOSE, PREFIX_SIDE_EFFECT, PREFIX_STORAGE_COUNT)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"                    seedu.careflow.logic.commands.drugcommands.AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"        TradeName tradeName \u003d ParserUtil.parseTradeName(argMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"        ActiveIngredient activeIngredient \u003d ParserUtil.parseActiveIngredient(","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_ACTIVE_INGREDIENT).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        Direction direction \u003d ParserUtil.parseDirection(argMultimap.getValue(PREFIX_DIRECTION).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"        Purpose purpose \u003d ParserUtil.parsePurpose(argMultimap.getValue(PREFIX_PURPOSE).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        SideEffect sideEffect \u003d ParserUtil.parseSideEffect(argMultimap.getValue(PREFIX_SIDE_EFFECT).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        StorageCount storageCount \u003d ParserUtil.parseStorageCount(argMultimap.getValue(PREFIX_STORAGE_COUNT).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"        Drug drug \u003d new Drug(tradeName, activeIngredient, direction, purpose, sideEffect, storageCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"        return new AddCommand(drug);","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":32,"cydtseng":23,"Emrysil":10}},{"path":"src/main/java/seedu/careflow/logic/parser/drugparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Prefix;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_INDEX);","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        if (arePrefixesPresent(argumentMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            Index index \u003d ParserUtil.parseIndex(argumentMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TRADE_NAME);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_TRADE_NAME)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                TradeName tradeName \u003d ParserUtil.parseTradeName(argMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"                return new DeleteCommand(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"                        seedu.careflow.logic.commands.drugcommands.DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":24,"cydtseng":14,"Emrysil":9}},{"path":"src/main/java/seedu/careflow/logic/parser/drugparser/DrugParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.ClearCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.UpdateCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class DrugParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"d\";","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param arguments arguments specific to the command","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"            return new UpdateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":2,"cydtseng":10,"Emrysil":35}},{"path":"src/main/java/seedu/careflow/logic/parser/drugparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public FindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"                    String.format(","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"                            MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"                            seedu.careflow.logic.commands.drugcommands.FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        String[] tradeNameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"        return new seedu.careflow.logic.commands.drugcommands.FindCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"                new TradeNameContainsKeywordsPredicate(Arrays.asList(tradeNameKeywords)));","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"nevinlim":19,"cydtseng":8,"Emrysil":9}},{"path":"src/main/java/seedu/careflow/logic/parser/drugparser/UpdateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_TRADE_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_UPDATE;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.drugcommands.UpdateCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Prefix;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":" * Parses input arguments and creates a new UpdateCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    private final char positive \u003d \u0027+\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    private final char negative \u003d \u0027-\u0027;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public UpdateCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_TRADE_NAME, PREFIX_UPDATE);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        if (arePrefixesPresent(argumentMultimap, PREFIX_TRADE_NAME, PREFIX_UPDATE)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"            TradeName tradeName \u003d ParserUtil.parseTradeName(argumentMultimap.getValue(PREFIX_TRADE_NAME).get());","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"            String update \u003d argumentMultimap.getValue(PREFIX_UPDATE).get();","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"            boolean add;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            if (update.charAt(0) \u003d\u003d negative) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"                add \u003d false;","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"            } else if (update.charAt(0) \u003d\u003d positive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"                add \u003d true;","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"            } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                throw new ParseException(\"Unknown/missing symbol\"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                        + \" (\u0027+\u0027 for addition and \u0027-\u0027 for subtraction concatenated in front) \"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                        + \"for update value\");","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"            try {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"                Integer value \u003d Integer.parseInt(update.substring(1));","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"                return new UpdateCommand(tradeName, value, add);","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                throw new ParseException(\"Update value is invalid, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"                        + \"Please enter only integer values with \u0027+\u0027 or \u0027-\u0027 prefixed.\");","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"        } else {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"                    seedu.careflow.logic.commands.drugcommands.UpdateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"nevinlim":46,"cydtseng":13}},{"path":"src/main/java/seedu/careflow/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"cydtseng":2,"-":15}},{"path":"src/main/java/seedu/careflow/logic/parser/generalparser/GeneralParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.generalparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.generalcommand.ExitCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.generalcommand.HelpCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class GeneralParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"g\";","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":6,"Emrysil":27}},{"path":"src/main/java/seedu/careflow/logic/parser/patientparser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Prefix;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"     * and returns an AddCommand object for execution of adding a patient.","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    public AddCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"                ArgumentTokenizer.tokenize(userInput,","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_DOB,","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_IC,","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"                        PREFIX_EMERGENCY_CONTACT_NUMBER","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"                        );","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DOB, PREFIX_GENDER, PREFIX_IC,","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                PREFIX_DRUG_ALLERGY, PREFIX_EMERGENCY_CONTACT_NUMBER)","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"                    seedu.careflow.logic.commands.patientcommands.AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        DateOfBirth birthDate \u003d ParserUtil.parseDateOfBirth(","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"        Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"        DrugAllergy drugAllergy \u003d ParserUtil.parseDrugAllergy(","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_DRUG_ALLERGY).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"        Phone emergencyContactNumber \u003d ParserUtil.parsePhone(","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"                argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_NUMBER).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"        Patient patient \u003d new Patient(name, phone, email, address, birthDate, gender, ic,","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"                drugAllergy, emergencyContactNumber);","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"        return new AddCommand(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":11,"cydtseng":69,"Emrysil":10}},{"path":"src/main/java/seedu/careflow/logic/parser/patientparser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Prefix;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"     * and returns an DeleteCommand object for execution of deleting a patient.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"            ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_IC);","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_IC)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"                if (argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"                    Ic ic \u003d ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get());","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"                    return new DeleteCommand(ic);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"                } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"                    throw new ParseException(String.format(","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"                            MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"                            seedu.careflow.logic.commands.patientcommands.DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"                }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"            } else {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"                Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"                            seedu.careflow.logic.commands.patientcommands.DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values  in the given","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":6,"cydtseng":14,"Emrysil":9,"CShuwen":30}},{"path":"src/main/java/seedu/careflow/logic/parser/patientparser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public FindCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"                            seedu.careflow.logic.commands.patientcommands.FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"        return new seedu.careflow.logic.commands.patientcommands.FindCommand(","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"                new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"nevinlim":5,"cydtseng":8,"Emrysil":9,"CShuwen":8}},{"path":"src/main/java/seedu/careflow/logic/parser/patientparser/PatientParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.ClearCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.FindCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.ListCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.UpdateCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Parses user input","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class PatientParser {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public static final String OPERATION_TYPE \u003d \"p\";","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param commandWord user command","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param arguments arguments specific to the command","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @return the command based on the command word","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public Command parse(String commandWord, String arguments) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        case UpdateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"            return new UpdateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            return new ClearCommand();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":10,"Emrysil":34,"Jiayan-Lim":2}},{"path":"src/main/java/seedu/careflow/logic/parser/patientparser/UpdateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.UpdateCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.Parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":" * Parses input arguments and creates a new UpdateCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"public class UpdateCommandParser implements Parser\u003cUpdateCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     * and returns an UpdateCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    public UpdateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_NAME,","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_PHONE,","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_EMAIL,","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_ADDRESS,","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_DOB,","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_GENDER,","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_IC,","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_DRUG_ALLERGY,","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"                        PREFIX_EMERGENCY_CONTACT_NUMBER","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"                        );","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        Name name;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"            name \u003d ParserUtil.parseName(argMultimap.getPreamble());","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"        UpdateCommand.EditPatientDescriptor editPatientDescriptor \u003d new UpdateCommand.EditPatientDescriptor();","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setDateOfBirth(ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_IC).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setIc(ParserUtil.parseIc(argMultimap.getValue(PREFIX_IC).get()));","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_DRUG_ALLERGY).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setDrugAllergy(ParserUtil.parseDrugAllergy(","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"                    argMultimap.getValue(PREFIX_DRUG_ALLERGY).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"        if (argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_NUMBER).isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"CShuwen"},"content":"            editPatientDescriptor.setEmergencyContact(ParserUtil.parseEmergencyContact(","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"                    argMultimap.getValue(PREFIX_EMERGENCY_CONTACT_NUMBER).get()));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"CShuwen"},"content":"        if (!editPatientDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"            throw new ParseException(UpdateCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"CShuwen"},"content":"        return new UpdateCommand(name, editPatientDescriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"cydtseng":18,"CShuwen":12,"Jiayan-Lim":62}},{"path":"src/main/java/seedu/careflow/model/CareFlow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * Wraps all data at the CareFlow level","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Duplicates are not allowed","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class CareFlow {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private final PatientRecord patientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private final DrugInventory drugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    private final HospitalRecord hospitalRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        patientRecord \u003d new PatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        drugInventory \u003d new DrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"        hospitalRecord \u003d new HospitalRecord();","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"     * creates a CareFlow","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public CareFlow() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"     * Creates a CareFlow using Patients and Drugs in {@code toBeCopiedP @code toBeCopiedD}","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"     * @param toBeCopiedP the patient records","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"     * @param toBeCopiedD the drug inventory","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"    public CareFlow(ReadOnlyPatientRecord toBeCopiedP, ReadOnlyDrugInventory toBeCopiedD) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        resetPatientData(toBeCopiedP);","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        resetDrugData(toBeCopiedD);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        return patientRecord;","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        return drugInventory;","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"    public ReadOnlyHospitalRecords getHospitalRecords() {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"        return hospitalRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        patientRecord.setPatients(patients);","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        drugInventory.setDrugs(drugs);","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"    public void setHospitals(List\u003cHospital\u003e hospitals) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"        hospitalRecord.setHospitals(hospitals);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow patient record with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    public void resetPatientData(ReadOnlyPatientRecord newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    public void resetDrugData(ReadOnlyDrugInventory newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        setDrugs(newData.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"    public void resetHospitalData(ReadOnlyHospitalRecords newData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"        setHospitals(newData.getHospitalList());","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.hasPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        return drugInventory.hasDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"        patientRecord.addPatient(p);","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug d) {","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"        drugInventory.addDrug(d);","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"cydtseng"},"content":"    public void addHospital(Hospital h) {","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"cydtseng"},"content":"        hospitalRecord.addHospital(h);","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"cydtseng"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"        patientRecord.setPatient(target, editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"     * inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"        drugInventory.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"        patientRecord.removePatient(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"    public void removeDrug(Drug key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"        drugInventory.removeDrug(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"    //// util methods","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.toString() + \"\\n\" + drugInventory.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"        return patientRecord.getPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"        return drugInventory.getDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"cydtseng"},"content":"    public ObservableList\u003cHospital\u003e getHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"cydtseng"},"content":"        return hospitalRecord.getHospitalList();","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof CareFlow","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patientRecord.equals(((CareFlow) other).patientRecord)","lastModifiedDate":"2023-02-28"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugInventory.equals(((CareFlow) other).drugInventory));","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"        return ((Integer) (patientRecord.hashCode() + drugInventory.hashCode())).hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":10,"cydtseng":27,"Emrysil":149,"CShuwen":4}},{"path":"src/main/java/seedu/careflow/model/CareFlowModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * The API of the Model component.","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowModel {","lastModifiedDate":"2023-02-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * {@code Predicate} that always evaluates to true.","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    Predicate\u003cPatient\u003e PREDICATE_SHOW_ALL_PATIENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    Predicate\u003cDrug\u003e PREDICATE_SHOW_ALL_DRUGS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * Replaces user prefs data with data in {@code userPrefs}.","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     * Returns the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 patient record file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    void setPatientRecordFilePath(Path patientRecordFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * Sets the user prefs\u0027 drug inventory file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    void setDrugInventoryFilePath(Path drugInventoryFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * Replaces patient record data with the data in {@code patientRecord}.","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    void setPatientRecord(ReadOnlyPatientRecord patientRecord);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     * Replaces drug inventory data with the data in {@code drugInventory}.","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    void setDrugInventory(ReadOnlyDrugInventory drugInventory);","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"     * Returns the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyPatientRecord getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"     * Returns the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    ReadOnlyDrugInventory getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"     * Return the HospitalRecords","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"    ReadOnlyHospitalRecords getHospitalRecords();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    boolean hasPatient(Patient patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    boolean hasDrug(Drug drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * Deletes the given patient.","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     * The patient must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    void deletePatient(Patient target);","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"     * Deletes the given drug.","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"     * The drug must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    void deleteDrug(Drug target);","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"     * Adds the given patient.","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"     * {@code patient} must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    void addPatient(Patient patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"     * Adds the given drug.","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"     * {@code drug} must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"    void addDrug(Drug drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"    void setPatient(Patient target, Patient editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"    void setDrug(Drug target, Drug editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered patient list */","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getFilteredPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"    /** Returns an unmodifiable view of the filtered drug list */","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getFilteredDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"cydtseng"},"content":"    /** Return an unmodifiable view of hospital records*/","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"cydtseng"},"content":"    ObservableList\u003cHospital\u003e getHospitalList();","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"     * Updates the filter of the filtered patient list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"     * Updates the filter of the filtered drug list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"    void updateFilteredDrugList(Predicate\u003cDrug\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":3,"cydtseng":16,"Emrysil":140}},{"path":"src/main/java/seedu/careflow/model/CareFlowModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":" * Represents the in-memory model of the CareFlow data.","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"public class CareFlowModelManager implements CareFlowModel {","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CareFlowModelManager.class);","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    private static final String LOGGER_MESSAGE \u003d \"Initialising with patient record: %s, drug inventory: %s and user \"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"            + \"prefs %s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private final CareFlow careFlow;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private final FilteredList\u003cPatient\u003e filteredPatients;","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    private final FilteredList\u003cDrug\u003e filteredDrugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    private final FilteredList\u003cHospital\u003e filteredHospitals;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"     * Initializes a CareFlowModelManager with the given patientRecord, drugInventory and userPrefs.","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"     * @param patientRecord patient records","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"     * @param drugInventory drug inventory","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"     * @param userPrefs user preferences","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"    public CareFlowModelManager(ReadOnlyPatientRecord patientRecord, ReadOnlyDrugInventory drugInventory,","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"                                ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(drugInventory, patientRecord, userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        logger.fine(String.format(LOGGER_MESSAGE, patientRecord, drugInventory, userPrefs));","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"        this.careFlow \u003d new CareFlow(patientRecord, drugInventory);","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        this.filteredPatients \u003d new FilteredList\u003c\u003e(this.careFlow.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        this.filteredDrugs \u003d new FilteredList\u003c\u003e(this.careFlow.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"        setFixedHospitalList();","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        this.filteredHospitals \u003d new FilteredList\u003c\u003e(this.careFlow.getHospitalList());","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    public CareFlowModelManager() {","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"        this(new PatientRecord(), new DrugInventory(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        return userPrefs;","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        return userPrefs.getPatientRecordFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecordFilePath(Path patientRecordFilePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patientRecordFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setPatientRecordFilePath(patientRecordFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        return userPrefs.getDrugInventoryFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventoryFilePath(Path drugInventoryFilePath) {","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drugInventoryFilePath);","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setDrugInventoryFilePath(drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Patient Record \u0026 Drug Inventory \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecord(ReadOnlyPatientRecord patientRecord) {","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        this.careFlow.resetPatientData(patientRecord);","lastModifiedDate":"2023-02-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventory(ReadOnlyDrugInventory drugInventory) {","lastModifiedDate":"2023-02-28"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        this.careFlow.resetDrugData(drugInventory);","lastModifiedDate":"2023-02-28"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-02-28"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"        return careFlow.getPatientRecord();","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-02-28"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        return careFlow.getDrugInventory();","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"    public ReadOnlyHospitalRecords getHospitalRecords() {","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"cydtseng"},"content":"        return careFlow.getHospitalRecords();","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"        return careFlow.hasPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"        return careFlow.hasDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"    public void deletePatient(Patient target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"        careFlow.removePatient(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    public void deleteDrug(Drug target) {","lastModifiedDate":"2023-02-28"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        careFlow.removeDrug(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"        careFlow.addPatient(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"        careFlow.addDrug(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"        careFlow.setPatient(target, editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"        careFlow.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"        return filteredPatients;","lastModifiedDate":"2023-02-28"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getFilteredDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"        return filteredDrugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":182,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"    public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"        filteredPatients.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"    public void updateFilteredDrugList(Predicate\u003cDrug\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"        filteredDrugs.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":194,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"cydtseng"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Hospital Hotlines \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"cydtseng"},"content":"     * Set a fixed list of hospital information","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"cydtseng"},"content":"    public void setFixedHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"cydtseng"},"content":"        careFlow.addHospital(new Hospital(\"KK Women\u0027s and Children\u0027s Hospital\", \"+65 62255554\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"cydtseng"},"content":"        careFlow.addHospital(new Hospital(\"Changi General Hospital\", \"+65 67888833\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"cydtseng"},"content":"        careFlow.addHospital(new Hospital(\"Khoo Teck Puat Hospital\", \"+65 65558000\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"cydtseng"},"content":"        careFlow.addHospital(new Hospital(\"Tan Tock Seng Hospital\", \"+65 62566011\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"cydtseng"},"content":"     * @return fixed set of Hospital Hotlines","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"cydtseng"},"content":"    public ObservableList\u003cHospital\u003e getHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"cydtseng"},"content":"        return filteredHospitals;","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":17,"cydtseng":39,"Emrysil":154,"CShuwen":4}},{"path":"src/main/java/seedu/careflow/model/DrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.UniqueDrugList;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" * Wraps all data at the Drug Inventory level","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class DrugInventory implements ReadOnlyDrugInventory {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final UniqueDrugList drugs;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        drugs \u003d new UniqueDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     * creates a DrugInventory using the Drugs in the {@code toBeCopied}","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory(ReadOnlyDrugInventory toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.drugs.setDrugs(drugs);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of this drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public void resetData(ReadOnlyDrugInventory newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        setDrugs(newData.getDrugList());","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a drug with the same identity as {@code drug} exists in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return drugs.contains(drug);","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void addDrug(Drug d) {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        drugs.add(d);","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the drug","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        drugs.setDrug(target, editedDrug);","lastModifiedDate":"2023-02-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the drug inventory.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void removeDrug(Drug key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        drugs.remove(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        return drugs.asUnmodifiableObservableList().size() + \" drugs\";","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e getDrugList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        return drugs.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof DrugInventory","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugs.equals(((DrugInventory) other).drugs));","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        return drugs.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":10,"cydtseng":4,"Emrysil":86}},{"path":"src/main/java/seedu/careflow/model/HospitalRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.UniqueHospitalList;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":" * Wraps all data at the Hospital Record level","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"public class HospitalRecord implements ReadOnlyHospitalRecords {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"    private final UniqueHospitalList hospitals;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"        hospitals \u003d new UniqueHospitalList();","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"    public HospitalRecord() {}","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"     * creates a HospitalRecord using the hospitals in the {@code toBeCopied}","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"    public HospitalRecord(ReadOnlyHospitalRecords toBeCopied) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"        this();","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"    public void setHospitals(List\u003cHospital\u003e hospitals) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"        this.hospitals.setHospitals(hospitals);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"     * Resets the existing data of this hospital record with {@code newData}.","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"    public void resetData(ReadOnlyHospitalRecords newData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"        setHospitals(newData.getHospitalList());","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"     * Returns true if a hospital with the same identity as {@code hospital} exists in the hospital records.","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    public boolean hasHospital(Hospital hospital) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(hospital);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        return hospitals.contains(hospital);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"     * Adds a hospital to the hospital records.","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"     * The hospital must not already exist in the hospital record.","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"    public void addHospital(Hospital h) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"        hospitals.add(h);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"     * Replaces the given hospital {@code target} in the list with {@code editedHospital}.","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"     * {@code target} must exist in the hospital record.","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"     * The hospital identity of {@code editedHospital} must not be the same as another existing drug in the hospital","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"     * record.","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"    public void setHospital(Hospital target, Hospital editedHospital) {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"        hospitals.setHospital(target, editedHospital);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"     * Removes {@code key} from drug inventory.","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"     * {@code key} must exist in the drug inventory.","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"    public void removeHospital(Hospital key) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"        hospitals.remove(key);","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"        return hospitals.asUnmodifiableObservableList().size() + \" hospitals\";","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"    public ObservableList\u003cHospital\u003e getHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"        return hospitals.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"                || (other instanceof HospitalRecord","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"                \u0026\u0026 hospitals.equals(((HospitalRecord) other).hospitals));","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"        return hospitals.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":98,"CShuwen":4}},{"path":"src/main/java/seedu/careflow/model/PatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.UniquePatientList;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":" * Wraps all data at the Patient Record level","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"public class PatientRecord implements ReadOnlyPatientRecord {","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final UniquePatientList patients;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        patients \u003d new UniquePatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord() {}","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     * creates a PatientRecord using the Patients in the {@code toBeCopied}","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord(ReadOnlyPatientRecord toBeCopied) {","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        this();","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"        this.patients.setPatients(patients);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * Resets the existing data of CareFlow drug inventory with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public void resetData(ReadOnlyPatientRecord newData) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        setPatients(newData.getPatientList());","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a patient with the same identity as {@code patient} exists in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patient);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"        return patients.contains(patient);","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void addPatient(Patient p) {","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"        patients.add(p);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * Replaces the given patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the patient","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * record.","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(editedPatient);","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"        patients.setPatient(target, editedPatient);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes {@code key} from patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * {@code key} must exist in the patient record.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void removePatient(Patient key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        patients.remove(key);","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-28"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"        return patients.asUnmodifiableObservableList().size() + \" patients\";","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e getPatientList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"        return patients.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof PatientRecord","lastModifiedDate":"2023-02-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patients.equals(((PatientRecord) other).patients));","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        return patients.hashCode();","lastModifiedDate":"2023-02-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"nevinlim":10,"cydtseng":12,"Emrysil":77}},{"path":"src/main/java/seedu/careflow/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"cydtseng":2,"Emrysil":3,"-":13}},{"path":"src/main/java/seedu/careflow/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private Path patientRecordFilePath \u003d Paths.get(\"data\", \"patientRecord.json\");","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private Path drugInventoryFilePath \u003d Paths.get(\"data\", \"drugInventory.json\");","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        setPatientRecordFilePath(newUserPrefs.getPatientRecordFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        setDrugInventoryFilePath(newUserPrefs.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        return patientRecordFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public void setPatientRecordFilePath(Path patientRecordFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patientRecordFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        this.patientRecordFilePath \u003d patientRecordFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        return drugInventoryFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    public void setDrugInventoryFilePath(Path drugInventoryFilePath) {","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        this.drugInventoryFilePath \u003d drugInventoryFilePath;","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 patientRecordFilePath.equals(o.patientRecordFilePath)","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 drugInventoryFilePath.equals(o.drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        return Objects.hash(guiSettings, patientRecordFilePath, drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        sb.append(\"Gui Settings : \").append(guiSettings);","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        sb.append(\"\\nLocal patient data file location : \").append(patientRecordFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        sb.append(\"\\nLocal drug data file location : \").append(drugInventoryFilePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":2,"Emrysil":26,"-":74}},{"path":"src/main/java/seedu/careflow/model/drug/ActiveIngredient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s active ingredient in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class ActiveIngredient {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            \"Active ingredient should only contain alphanumeric characters, spaces and dashes, and it should not be\"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"                    + \" blank but less than 200 characters long\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[a-zA-Z0-9][a-zA-Z0-9 -]{0,200}\";","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code ActiveIngredient}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param ingredient A valid active ingredient.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public ActiveIngredient(String ingredient) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(ingredient);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        checkArgument(isValidIngredient(ingredient), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        value \u003d ingredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a given string is a valid active ingredient.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public static boolean isValidIngredient(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof ActiveIngredient","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 value.equals(((ActiveIngredient) other).value));","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":2,"cydtseng":2,"Emrysil":46}},{"path":"src/main/java/seedu/careflow/model/drug/Direction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s direction in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class Direction {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            \"Direction should be in sentence form, it should not be blank and less than 1500 characters long\";","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Graph}\\\\p{Space}]{0,1499}\";","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code Direction}.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * @param direction A valid drug direction.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public Direction(String direction) {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(direction);","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        checkArgument(isValidDirection(direction), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        this.value \u003d direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * Returns true if a given string is a valid drug direction.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public static boolean isValidDirection(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof Direction // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 value.equals(((Direction) other).value)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":2,"Emrysil":47}},{"path":"src/main/java/seedu/careflow/model/drug/Drug.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Represents a Drug in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Drug {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    // Identity fields","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private final TradeName tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    // Data fields","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    private final ActiveIngredient activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final Direction direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    private final Purpose purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    private final SideEffect sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private final StorageCount storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public Drug(TradeName tradeName, ActiveIngredient activeIngredient, Direction direction,","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"                Purpose purposes, SideEffect sideEffects,","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"                StorageCount storageCount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireAllNonNull(tradeName, activeIngredient, direction, purposes, sideEffects,","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"                storageCount);","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        this.activeIngredient \u003d activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        this.direction \u003d direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.purposes \u003d purposes;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.storageCount \u003d storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public TradeName getTradeName() {","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        return tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public ActiveIngredient getActiveIngredient() {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        return activeIngredient;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    public Direction getDirection() {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        return direction;","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    public Purpose getPurposes() {","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"        return purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public StorageCount getStorageCount() {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        return storageCount;","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"     * Returns an immutable side effect set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"    public SideEffect getSideEffects() {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"        return sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * Returns true if both drugs have the same name.","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * This defines a weaker notion of equality between two drugs.","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDrug(Drug otherDrug) {","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        if (otherDrug \u003d\u003d this) {","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        return otherDrug !\u003d null","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 otherDrug.getTradeName().equals(getTradeName());","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        if (!(other instanceof Drug)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        Drug otherDrug \u003d (Drug) other;","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        return getTradeName().equals(otherDrug.getTradeName())","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getActiveIngredient().equals(otherDrug.getActiveIngredient())","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getDirection().equals(otherDrug.getDirection())","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getPurposes().equals(otherDrug.getPurposes())","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getSideEffects().equals(otherDrug.getSideEffects())","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 getStorageCount().equals(otherDrug.getStorageCount());","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"        return Objects.hash(tradeName, activeIngredient, direction,","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"                purposes, sideEffects, storageCount);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"        builder.append(getTradeName())","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Active Ingredient: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"                .append(getActiveIngredient())","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Direction: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"                .append(getDirection())","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"                .append(\"; Storage Count: \")","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"nevinlim"},"content":"                .append(getStorageCount())","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"nevinlim"},"content":"                .append(\"; Purposes: \")","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"                .append(getPurposes())","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"                .append(\"; Side Effects: \")","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"nevinlim"},"content":"                .append(getSideEffects());","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":15,"cydtseng":2,"Emrysil":100}},{"path":"src/main/java/seedu/careflow/model/drug/Purpose.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s purpose in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class Purpose {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Purposes should be in sentence form\"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            + \", it cannot be blank and should be less than 1500 characters long\";","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first 3 consecutive characters are upper or lowercase alphabetical characters,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"     * followed by 0 or more alphabetical or whitespace characters.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}][\\\\p{Graph}\\\\p{Space}]{0,1499}\";","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs an {@code Purpose}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param purpose A valid purpose.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public Purpose(String purpose) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(purpose);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidPurpose(purpose), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.purpose \u003d purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid purpose.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidPurpose(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return purpose;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof Purpose // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 purpose.equals(((Purpose) other).purpose)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        return purpose.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":44,"cydtseng":2,"Emrysil":9}},{"path":"src/main/java/seedu/careflow/model/drug/SideEffect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s possible side effects in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class SideEffect {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Side effects should be in sentence form \"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            + \"it cannot be blank and should be less than 1500 characters long\";","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"     * The first 3 consecutive characters are upper or lowercase alphabetical characters,","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * followed by 0 or more alphabetical, whitespace characters or commas.","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Za-z0-9][\\\\p{Graph}\\\\p{Space}]{0,1499}\";","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public final String sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"     * Constructs an {@code SideEffect}.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     * @param sideEffect A valid side effect.","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    public SideEffect(String sideEffect) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(sideEffect);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidSideEffect(sideEffect), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        this.sideEffect \u003d sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid side effect.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidSideEffect(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return sideEffect;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof SideEffect // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 sideEffect.equals(((SideEffect) other).sideEffect)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"        return sideEffect.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":43,"cydtseng":2,"Emrysil":10}},{"path":"src/main/java/seedu/careflow/model/drug/StorageCount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s storage count in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class StorageCount {","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"            \"Storage Count should only contain positive integers,\"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"                    + \"it should be at least 1 digit long but no more than 7 digits\";","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\d][\\\\d]{0,6}\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    private Integer count;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"     * Constructs a {@code StorageCount}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"     * @param count A valid storage count.","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    public StorageCount(String count) {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(count);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidStorageCount(count), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        this.count \u003d Integer.parseInt(count);","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid storage count.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidStorageCount(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"     * Decreases storage count by {@code amount}","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"     * @param amount the decrease value","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    public void decrStorage(Integer amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        if (amount \u003e count) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            count \u003d 0;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            count -\u003d amount;","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"     * Increases storage count by {@code amount}","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"     * @param amount the increase value","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    public void incStorage(Integer amount) {","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        count +\u003d amount;","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        return count.toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof StorageCount // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 count.equals(((StorageCount) other).count)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"    public Integer getCount() {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"        return this.count;","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"        return count.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":49,"cydtseng":6,"Emrysil":18}},{"path":"src/main/java/seedu/careflow/model/drug/TradeName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Represents a drug\u0027s trade name in the drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class TradeName {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"            \"Trade names should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"                    + \"it should not be blank and less than 50 characters\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    /*","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}][\\\\p{Alnum} ]{0,49}\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    public final String tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"     * Constructs a {@code TradeName}.","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     * @param tradeName A valid trade name.","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    public TradeName(String tradeName) {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"        requireNonNull(tradeName);","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"        checkArgument(isValidTradeName(tradeName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"     * Returns true if a given string is a valid trade name.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    public static boolean isValidTradeName(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":"    public boolean isBlank() {","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"        return this.tradeName.isBlank();","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"        return this.tradeName;","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                || (other instanceof TradeName // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 tradeName.equals(((TradeName) other).tradeName)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"        return tradeName.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":52,"cydtseng":2,"Emrysil":7}},{"path":"src/main/java/seedu/careflow/model/drug/TradeNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.StringUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":" * Tests that a {@code Drug}\u0027s {@code TradeName} matches any of the keywords given.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"public class TradeNameContainsKeywordsPredicate implements Predicate\u003cDrug\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    public TradeNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public boolean test(Drug drug) {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(drug.getTradeName().tradeName, keyword));","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"                || (other","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"                instanceof seedu.careflow.model.drug.TradeNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"                \u0026\u0026 keywords.equals((","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"                        (seedu.careflow.model.drug.TradeNameContainsKeywordsPredicate)","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"                                other).keywords)); // state check","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":29,"cydtseng":4}},{"path":"src/main/java/seedu/careflow/model/drug/UniqueDrugList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.exceptions.DrugNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.exceptions.DuplicateDrugException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" * A list of drugs that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * A drug is considered unique by comparing using {@code Drug#isSameDrug(Drug)}. As such, adding and updating of","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * drug uses Drug#isSameDrug(Drug) for equality so as to ensure that the drug being added or updated is","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * unique in terms of identity in the UniqueDrugList. However, the removal of a drug uses Drug#equals(Object) so","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" * as to ensure that the drug with exactly the same fields will be removed.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":" *","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":" * @see Drug#isSameDrug(Drug)","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"public class UniqueDrugList implements Iterable\u003cDrug\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cDrug\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cDrug\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * Returns true if the list contains an equivalent drug as the given argument.","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public boolean contains(Drug toCheck) {","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return internalList.stream().anyMatch(toCheck::isSameDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * Adds a drug to the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * The drug must not already exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public void add(Drug toAdd) {","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     * Replaces the drug {@code target} in the list with {@code editedDrug}.","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The drug identity of {@code editedDrug} must not be the same as another existing drug in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(target, editedDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"            throw new DrugNotFoundException();","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        if (!target.isSameDrug(editedDrug) \u0026\u0026 contains(editedDrug)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        internalList.set(index, editedDrug);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes the equivalent drug from the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * The drug must exist in the list.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void remove(Drug toRemove) {","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"            throw new DrugNotFoundException();","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(UniqueDrugList replacement) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"     * Replaces the contents of this list with {@code drugs}.","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * {@code drugs} must not contain duplicate persons.","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void setDrugs(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(drugs);","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        if (!drugsAreUnique(drugs)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicateDrugException();","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(drugs);","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cDrug\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    public Iterator\u003cDrug\u003e iterator() {","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof UniqueDrugList // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"                \u0026\u0026 internalList.equals(((UniqueDrugList) other).internalList));","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-02-23"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"     * Returns true if {@code drugs} contains only unique drugs.","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-02-23"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    private boolean drugsAreUnique(List\u003cDrug\u003e drugs) {","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        for (int i \u003d 0; i \u003c drugs.size() - 1; i++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            for (int j \u003d i + 1; j \u003c drugs.size(); j++) {","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"                if (drugs.get(i).isSameDrug(drugs.get(j))) {","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"                    return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":4,"Emrysil":133}},{"path":"src/main/java/seedu/careflow/model/drug/exceptions/DrugNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":" * Signals that the operation is unable to find the specified drug.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class DrugNotFoundException extends RuntimeException {","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":2,"Emrysil":5}},{"path":"src/main/java/seedu/careflow/model/drug/exceptions/DuplicateDrugException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.drug.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Signals that the operation will result in duplicate Drugs (Drugs are considered duplicates if they have the same","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * information).","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class DuplicateDrugException extends RuntimeException{","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":1,"Emrysil":7}},{"path":"src/main/java/seedu/careflow/model/hospital/Hospital.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":" * Represents a Hospital in the hospital record","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"public class Hospital {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    private final String hospitalName;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    private final String hotline;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"     * Constructs a Hospital,","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"    public Hospital(String hospitalName, String hotline) {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"        this.hospitalName \u003d hospitalName;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"        this.hotline \u003d hotline;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    public String getHospitalName() {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"        return this.hospitalName;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    public String getHotline() {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"        return this.hotline;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"     * Returns true if both hospital have the same name.","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"     * This defines a weaker notion of equality between two hospital.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"    public boolean isSameHospital(Hospital otherHospital) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"        if (otherHospital \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"        return otherHospital !\u003d null","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"                \u0026\u0026 otherHospital.getHospitalName().equals(getHospitalName());","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":27,"CShuwen":11}},{"path":"src/main/java/seedu/careflow/model/hospital/UniqueHospitalList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.exceptions.DuplicateHospitalException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.exceptions.HospitalNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":" * A list of hospitals that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":" * A hospital is considered unique by comparing using {@code Hospital#isSameHospital(Hospital)}. As such, adding and","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":" * updating of hospital uses Hospital#isSameHospital(Hospital) for equality so as to ensure that the hospital being","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":" * added or updated is unique in terms of identity in the UniqueHospitalList. However, the removal of a hospital uses","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":" * Hospital#equals(Object) so as to ensure that the hospital with exactly the same fields will be removed.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":" *","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":" *","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":" * @see Hospital#isSameHospital(Hospital)","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"public class UniqueHospitalList implements Iterable\u003cHospital\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"    private final ObservableList\u003cHospital\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"    private final ObservableList\u003cHospital\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"     * Returns true if the list contains an equivalent hospital as the given argument.","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"    public boolean contains(Hospital toCheck) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"        return internalList.stream().anyMatch(toCheck::isSameHospital);","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"     * Adds a hospital to the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"     * The hospital must not already exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"    public void add(Hospital toAdd) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"            throw new DuplicateHospitalException();","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"     * Replaces the hospital {@code target} in the list with {@code editedHospital}.","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"     * The hospital identity of {@code editedHospital} must not be the same as another existing hospital in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"    public void setHospital(Hospital target, Hospital editedHospital) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"        requireAllNonNull(target, editedHospital);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"            throw new HospitalNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"        if (!target.isSameHospital(editedHospital) \u0026\u0026 contains(editedHospital)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"            throw new DuplicateHospitalException();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"        internalList.set(index, editedHospital);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"     * Removes the equivalent hospital from the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"     * The hospital must exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"    public void remove(Hospital toRemove) {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"            throw new HospitalNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"    public void setHospitals(UniqueHospitalList replacement) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"     * Replaces the contents of this list with {@code hospitals}.","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"     * {@code hospitals} must not contain duplicate hospitals.","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"    public void setHospitals(List\u003cHospital\u003e hospitals) {","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"        requireAllNonNull(hospitals);","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"        if (!hospitalsAreUnique(hospitals)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"            throw new DuplicateHospitalException();","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"        internalList.setAll(hospitals);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"    public ObservableList\u003cHospital\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"    public Iterator\u003cHospital\u003e iterator() {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"cydtseng"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"cydtseng"},"content":"                || (other instanceof UniqueHospitalList // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"cydtseng"},"content":"                \u0026\u0026 internalList.equals(((UniqueHospitalList) other).internalList));","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"cydtseng"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"cydtseng"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"     * Returns true if {@code hospitals} contains only unique hospitals.","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"cydtseng"},"content":"    private boolean hospitalsAreUnique(List\u003cHospital\u003e hospitals) {","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"        for (int i \u003d 0; i \u003c hospitals.size() - 1; i++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"cydtseng"},"content":"            for (int j \u003d i + 1; j \u003c hospitals.size(); j++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"cydtseng"},"content":"                if (hospitals.get(i).isSameHospital(hospitals.get(j))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"cydtseng"},"content":"                    return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"cydtseng"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"cydtseng"},"content":"        return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":121,"CShuwen":16}},{"path":"src/main/java/seedu/careflow/model/hospital/exceptions/DuplicateHospitalException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.hospital.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":" * Signals that the operation will result in duplicate Hospitals (Hospitals are considered duplicates","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":" * if they have the same information).","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"public class DuplicateHospitalException extends RuntimeException{","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":8,"CShuwen":2}},{"path":"src/main/java/seedu/careflow/model/hospital/exceptions/HospitalNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.hospital.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":" * Signals that the operation is unable to find the specified Hospital.","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"public class HospitalNotFoundException extends RuntimeException{","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":7}},{"path":"src/main/java/seedu/careflow/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, \"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"            + \"it should not be blank and less than 200 characters long\";","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].{1,200}\";","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nevinlim":3,"cydtseng":2,"-":53}},{"path":"src/main/java/seedu/careflow/model/person/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s date of birth in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class DateOfBirth {","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Date of birth should only contain numeric characters and spaces, \"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"                    + \"and the date should fall between 01/01/1900 and current date\";","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final DateTimeFormatter[] FORMATS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"            Stream.of(\"dd.MM.yyyy\", \"dd/MM/yyyy\", \"dd-MM-yyyy\",","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"                            \"dd.MM.yy\", \"dd/MM/yy\", \"dd-MM-yy\")","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"                    .map(DateTimeFormatter::ofPattern)","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"                    .toArray(DateTimeFormatter[]::new);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final LocalDate minRangeOfBirth \u003d LocalDate.of(1900, 1, 1);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final LocalDate maxRangeOfBirth \u003d LocalDate.now();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    public final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param value A valid birth date.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    public DateOfBirth(String value) {","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidBirthDate(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is in valid date format,","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"     * i.e.: dd.mm.yyyy -\u003e 01.01.2023","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd/mm/yyyy -\u003e 01/01/2023","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd-mm-yyyy -\u003e 01-01-2023","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd.mm.yy -\u003e 01.01.2023","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd/mm/yy -\u003e 01/01/23","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"     *       dd-mm-yy -\u003e 01-01-23","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    private static LocalDate formatDateIfValid(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        for (DateTimeFormatter format: FORMATS) {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"            try {","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"                return LocalDate.parse(test, format);","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"                // do nothing, continue check whether given string input match any other date time format","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        return null;","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid date of birth, or more","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"     * specifically the date of birth fall between year of 1900 and current date.","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidBirthDate(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        // check whether one\u0027s date of birth is fall between 1900 and current year.","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"        LocalDate formattedDate \u003d formatDateIfValid(test);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"        if (formattedDate \u003d\u003d null) {","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"        return formattedDate.isBefore(maxRangeOfBirth) \u0026\u0026 formattedDate.isAfter(minRangeOfBirth);","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof DateOfBirth // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 value.equals(((DateOfBirth) other).value)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":3,"Emrysil":6,"Jiayan-Lim":79}},{"path":"src/main/java/seedu/careflow/model/person/DrugAllergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s drug allergy in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class DrugAllergy {","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Drug allergy should be alphanumeric \"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"            + \"and less than 500 characters long\";","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}\\\\p{Space}]{1,499}+\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Tag drugAllergy;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DrugAllergy}.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param drugAllergy A valid drug allergy description.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidDrugAllergy(drugAllergy), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drugAllergy \u003d new Tag(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid drug allergy.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidDrugAllergy(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        return drugAllergy.tagName;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof DrugAllergy // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 drugAllergy.equals(((DrugAllergy) other).drugAllergy)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        return drugAllergy.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"nevinlim":2,"cydtseng":3,"Emrysil":7,"Jiayan-Lim":39}},{"path":"src/main/java/seedu/careflow/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":2,"-":69}},{"path":"src/main/java/seedu/careflow/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.StringUtil.makeStringCaseInsensitive;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Represents a patient\u0027s gender in the patient record","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Gender {","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Gender should only be either female or male, it should not be blank\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final String VALIDATION_REGEX \u003d \"f|female|m|male\";","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    public final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param value A valid gender.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    public Gender(String value) {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidGender(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is either female or male.","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidGender(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        return makeStringCaseInsensitive(test).matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":3,"Emrysil":6,"Jiayan-Lim":41}},{"path":"src/main/java/seedu/careflow/model/person/Ic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":" * Represents a patient\u0027s IC in the patient record","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class Ic {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"            \"IC number should only contain alphanumeric characters,\"","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"                    + \" and it should be exactly 8 digits and characters long\";","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private static final String VALIDATION_REGEX \u003d \"[a-zA-Z]\\\\d{7}[a-zA-Z]\";","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    public final String value;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code Ic}.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     * @param icNumber A valid ic number.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public Ic(String icNumber) {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        requireNonNull(icNumber);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        checkArgument(isValidIc(icNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        value \u003d icNumber;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if a given string is a valid ic number.","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"    public static boolean isValidIc(String test) {","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        return value;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"                || (other instanceof Ic // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 value.equals(((Ic) other).value)); // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":3,"Jiayan-Lim":49}},{"path":"src/main/java/seedu/careflow/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"            \"Names should only contain alphanumeric characters and spaces,\"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"                    + \" it should not be blank and less than 51 characters long\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]{0,50}\";","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nevinlim":3,"cydtseng":2,"-":55}},{"path":"src/main/java/seedu/careflow/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.StringUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPatient\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public boolean test(Patient patient) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(patient.getName().fullName, keyword));","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cydtseng":2,"Emrysil":3,"-":26}},{"path":"src/main/java/seedu/careflow/model/person/Patient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":" * Represents a Patient in the patient recordn","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"public class Patient {","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"    // Identity fields","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Name name;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Phone phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Email email;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    private final Address address;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"    private DateOfBirth birthDate \u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"    private Gender gender \u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    private Ic ic \u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"    private Optional\u003cDrugAllergy\u003e drugAllergy;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    private Optional\u003cPhone\u003e emergencyContact;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    // private constructor that used by other constructor to set up basic patient\u0027s field","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    private Patient(Name name, Phone phone, Email email, Address address) {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(name, phone, email, address);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, DateOfBirth birthDate, Gender gender, Ic ic) {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        this(name, phone, email, address);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        requireAllNonNull(birthDate, gender, ic);","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        // initialise optional field: drugAllergy and emergencyContact","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        this.drugAllergy \u003d Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        this.emergencyContact \u003d Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"     * Constructs a {@code DateOfBirth}.","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"     * Uses this constructor when want to include drug allergy or emergency contact of the patient.","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"    public Patient(Name name, Phone phone, Email email, Address address, DateOfBirth birthDate, Gender gender, Ic ic,","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        DrugAllergy drugAllergy, Phone emergencyContact) {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        this(name, phone, email, address, birthDate, gender, ic);","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drugAllergy \u003d Optional.ofNullable(drugAllergy);","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        this.emergencyContact \u003d Optional.ofNullable(emergencyContact);","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"        return name;","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"Jiayan-Lim"},"content":"    public Phone getPhone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"Jiayan-Lim"},"content":"        return phone;","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"Jiayan-Lim"},"content":"    public Email getEmail() {","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"Jiayan-Lim"},"content":"        return email;","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"Jiayan-Lim"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"        return address;","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"Jiayan-Lim"},"content":"    public DateOfBirth getBirthDate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.birthDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Jiayan-Lim"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.gender;","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Jiayan-Lim"},"content":"    public Ic getIc() {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.ic;","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugAllergy getDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.drugAllergy.orElse(null);","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Jiayan-Lim"},"content":"    public Phone getEmergencyContact() {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Jiayan-Lim"},"content":"        return this.emergencyContact.orElse(null);","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if both patient have the same name.","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"Jiayan-Lim"},"content":"     * This defines a weaker notion of equality between two patient.","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"CShuwen"},"content":"    public boolean isSamePatient(Patient otherPatient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"Jiayan-Lim"},"content":"        if (otherPatient \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"Jiayan-Lim"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"Jiayan-Lim"},"content":"        return otherPatient !\u003d null","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 otherPatient.getName().equals(getName());","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"Jiayan-Lim"},"content":"     * Returns true if both patients have the same identity and data fields.","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"Jiayan-Lim"},"content":"     * This defines a stronger notion of equality between two patients.","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"Jiayan-Lim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"Jiayan-Lim"},"content":"            return true;","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!(other instanceof Patient)) {","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":120,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"CShuwen"},"content":"        Patient otherPatient \u003d (Patient) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"CShuwen"},"content":"        return otherPatient.getName().equals(getName())","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"CShuwen"},"content":"                \u0026\u0026 otherPatient.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"CShuwen"},"content":"                \u0026\u0026 otherPatient.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"CShuwen"},"content":"                \u0026\u0026 otherPatient.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"CShuwen"},"content":"                \u0026\u0026 otherPatient.getBirthDate().equals(getBirthDate())","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"CShuwen"},"content":"                \u0026\u0026 otherPatient.getGender().equals(getGender())","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"CShuwen"},"content":"                \u0026\u0026 otherPatient.getIc().equals(getIc());","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"Jiayan-Lim"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"Jiayan-Lim"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"Jiayan-Lim"},"content":"        return Objects.hash(name, phone, email, address, birthDate, gender, ic);","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":137,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":138,"author":{"gitId":"Jiayan-Lim"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"Jiayan-Lim"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"Jiayan-Lim"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":142,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":144,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(\"; Date of Birth: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":148,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(getBirthDate())","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(getGender())","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(\"; IC: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":152,"author":{"gitId":"Jiayan-Lim"},"content":"                .append(getIc());","lastModifiedDate":"2023-03-11"},{"lineNumber":153,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":154,"author":{"gitId":"Jiayan-Lim"},"content":"        if (drugAllergy.isPresent()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":155,"author":{"gitId":"Jiayan-Lim"},"content":"            builder.append(\"; Drug Allergy: \").append(getDrugAllergy());","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"Jiayan-Lim"},"content":"        if (emergencyContact.isPresent()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":158,"author":{"gitId":"Jiayan-Lim"},"content":"            builder.append(\"; Emergency Contact Number: \").append(getEmergencyContact());","lastModifiedDate":"2023-03-11"},{"lineNumber":159,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":160,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"Jiayan-Lim"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":2,"Emrysil":7,"CShuwen":10,"Jiayan-Lim":144}},{"path":"src/main/java/seedu/careflow/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long.\";","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":2,"-":50,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/careflow/model/person/UniquePatientList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.exceptions.DuplicatePatientException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.exceptions.PatientNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":" * A list of patients that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":" * A person is considered unique by comparing using {@code Person#isSamePatient()(Person)}. As such,","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":" * adding and updating of persons uses Person#isSamePatient()(Person) for equality so as to ensure","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":" * that the person being added or updated is unique in terms of identity in the UniquePersonList.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":" * However, the removal of a patient uses Person#equals(Object) so","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":" * @see Patient#isSamePatient(Patient)","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"public class UniquePatientList implements Iterable\u003cPatient\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cPatient\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private final ObservableList\u003cPatient\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * Returns true if the list contains an equivalent patient as the given argument.","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public boolean contains(Patient toCheck) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePatient);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * Adds a patient to the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * The patient must not already exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public void add(Patient toAdd) {","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     * Replaces the patient {@code target} in the list with {@code editedPatient}.","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * The patient identity of {@code editedPatient} must not be the same as another existing patient in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(target, editedPatient);","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"        if (!target.isSamePatient(editedPatient) \u0026\u0026 contains(editedPatient)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        internalList.set(index, editedPatient);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * Removes the equivalent patient from the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * The patient must exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void remove(Patient toRemove) {","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"            throw new PatientNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(UniquePatientList replacement) {","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void setPatients(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        requireAllNonNull(patients);","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        if (!patientsAreUnique(patients)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"            throw new DuplicatePatientException();","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        internalList.setAll(patients);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    public ObservableList\u003cPatient\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    public Iterator\u003cPatient\u003e iterator() {","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"                || (other instanceof UniquePatientList // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"                        \u0026\u0026 internalList.equals(((UniquePatientList) other).internalList));","lastModifiedDate":"2023-03-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    private boolean patientsAreUnique(List\u003cPatient\u003e patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        for (int i \u003d 0; i \u003c patients.size() - 1; i++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            for (int j \u003d i + 1; j \u003c patients.size(); j++) {","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"CShuwen"},"content":"                if (patients.get(i).isSamePatient(patients.get(j))) {","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":4,"Emrysil":33,"CShuwen":8,"-":91,"Jiayan-Lim":1}},{"path":"src/main/java/seedu/careflow/model/person/exceptions/DuplicatePatientException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":" * identity).","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"public class DuplicatePatientException extends RuntimeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    public DuplicatePatientException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"cydtseng":13}},{"path":"src/main/java/seedu/careflow/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"cydtseng":1,"-":10}},{"path":"src/main/java/seedu/careflow/model/person/exceptions/PatientNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":" * Signals that the operation is unable to find the specified patient.","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"public class PatientNotFoundException extends RuntimeException{","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"nevinlim":3,"cydtseng":4}},{"path":"src/main/java/seedu/careflow/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person.exceptions;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"cydtseng":1,"-":5}},{"path":"src/main/java/seedu/careflow/model/readonly/ReadOnlyDrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.readonly;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Unmodifiable view of a drug inventory","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public interface ReadOnlyDrugInventory {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cDrug\u003e getDrugList();","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":2,"Emrysil":9}},{"path":"src/main/java/seedu/careflow/model/readonly/ReadOnlyHospitalRecords.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.readonly;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":" * Unmodifiable view of a hospital record","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"public interface ReadOnlyHospitalRecords {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"    ObservableList\u003cHospital\u003e getHospitalList();","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":8,"CShuwen":3}},{"path":"src/main/java/seedu/careflow/model/readonly/ReadOnlyPatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.readonly;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Unmodifiable view of a patient records","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public interface ReadOnlyPatientRecord {","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    ObservableList\u003cPatient\u003e getPatientList();","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"cydtseng":2,"Emrysil":9}},{"path":"src/main/java/seedu/careflow/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum}\\\\p{Space}]+\";","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cydtseng":2,"Emrysil":1,"-":51}},{"path":"src/main/java/seedu/careflow/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Direction;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Purpose;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.SideEffect;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.StorageCount;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public static Patient[] getSamplePatients() {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        return new Patient[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new DateOfBirth(\"01-01-2000\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"                    new Gender(\"female\"), new Ic(\"T1234567J\"), new DrugAllergy(\"Penicillin\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"                    new Phone(\"12345678\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new DateOfBirth(\"01-01-2001\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                    new Gender(\"female\"), new Ic(\"T7654321K\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new DateOfBirth(\"31-12-1999\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"                    new Gender(\"female\"), new Ic(\"F1117777P\"), new DrugAllergy(\"sulfonamides\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"                    new Phone(\"00000000\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new DateOfBirth(\"05-05-1995\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"                    new Gender(\"male\"), new Ic(\"P9998888C\")),","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new DateOfBirth(\"02-02-2002\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"                    new Gender(\"male\"), new Ic(\"J0001111F\"), new DrugAllergy(\"Aspirin\"), new Phone(\"78965432\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            new Patient(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new DateOfBirth(\"03-03-2003\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"                    new Gender(\"male\"), new Ic(\"E3334444B\"))","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        };","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public static Drug[] getSampleDrugs() {","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        return new Drug[] {","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":"            new Drug(new TradeName(\"Panadol\"), new ActiveIngredient(\"Paracetamol\"), new Direction(\"Adults and \"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"                    + \"children over 12 years: 1-2 capsules taken every 4-6 hours as required\"), new Purpose(","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"                            \"relief of headache, pain and fever\"), new SideEffect(\"Skin rash or itching. Breathing\"","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"                    + \" problems or swelling of lips, throat or face. Mouth ulcers. Unexplained bruising or \"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"                    + \"bleeding.\"), new StorageCount(\"30\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"            new Drug(new TradeName(\"Lipitor\"), new ActiveIngredient(\"Atorvastatin\"), new Direction(\"10 mg once a \"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"                    + \"day in adults and children aged 10\"), new Purpose(\"Prevent cardiovascular disease in those at \"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"                    + \"high risk and to treat abnormal lipid levels.\"), new SideEffect(\"Joint pain, diarrhea, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"                    + \"heartburn, nausea, and muscle pains\"), new StorageCount(\"20\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"            new Drug(new TradeName(\"Xanax\"), new ActiveIngredient(\"Alprazolam\"), new Direction(\"varies\"),","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"                    new Purpose(\"Treat anxiety and panic disorders.\"), new SideEffect(\"Drowsiness, dizziness, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"                    + \"increased saliva production, or change in sex drive/ability may occur.\"),","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":"                    new StorageCount(\"10\")),","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"            new Drug(new TradeName(\"Ultram\"), new ActiveIngredient(\"Tramadol\"), new Direction(\"Take every 4 to 6 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"nevinlim"},"content":"                    + \"hours as needed for pain relief\"), new Purpose(\"Help relieve moderate to moderately \"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"                    + \"severe pain.\"), new SideEffect(\"Nausea, vomiting, constipation, lightheadedness, \"","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"                    + \"dizziness, drowsiness, or headache may occur.\"), new StorageCount(\"17\"))","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        };","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    public static ReadOnlyDrugInventory getSampleDrugInventory() {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        DrugInventory sampleDI \u003d new DrugInventory();","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        for (Drug sampleDrug: getSampleDrugs()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"            sampleDI.addDrug(sampleDrug);","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        return sampleDI;","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    public static ReadOnlyPatientRecord getSamplePatientRecord() {","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"        PatientRecord samplePR \u003d new PatientRecord();","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        for (Patient samplePatient: getSamplePatients()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"            samplePR.addPatient(samplePatient);","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        return samplePR;","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"nevinlim":23,"cydtseng":22,"Emrysil":37,"-":21}},{"path":"src/main/java/seedu/careflow/storage/CareFlowStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":" * Represents a storage for {@link seedu.careflow.model.CareFlow}.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public interface CareFlowStorage extends PatientRecordStorage, DrugInventoryStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":6,"cydtseng":7,"Emrysil":28}},{"path":"src/main/java/seedu/careflow/storage/CareFlowStorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":" * Manages storage of CareFlow data in local storage.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"public class CareFlowStorageManager implements CareFlowStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CareFlowStorageManager.class);","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"    private final PatientRecordStorage patientRecordStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    private final DrugInventoryStorage drugInventoryStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"     * Creates a CareFlowStorageManager with {@code patientRecordStorage,","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"     * @code drugInventoryStorage, @code userPrefsStorage}","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public CareFlowStorageManager(PatientRecordStorage patientRecordStorage, DrugInventoryStorage drugInventoryStorage,","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"                                  UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"        super();","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        this.patientRecordStorage \u003d patientRecordStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.drugInventoryStorage \u003d drugInventoryStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        return patientRecordStorage.getPatientRecordFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        return drugInventoryStorage.getDrugInventoryFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        return readPatientRecord(patientRecordStorage.getPatientRecordFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord(Path filePath)","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"        return patientRecordStorage.readPatientRecord(filePath);","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"        return readDrugInventory(drugInventoryStorage.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory(Path filePath)","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        return drugInventoryStorage.readDrugInventory(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"        savePatientRecord(patientRecord, patientRecordStorage.getPatientRecordFilePath());","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        patientRecordStorage.savePatientRecord(patientRecord, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException {","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"        saveDrugInventory(drugInventory, drugInventoryStorage.getDrugInventoryFilePath());","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        drugInventoryStorage.saveDrugInventory(drugInventory, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":30,"cydtseng":7,"Emrysil":69}},{"path":"src/main/java/seedu/careflow/storage/DrugInventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Represents a storage for drug inventory","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public interface DrugInventoryStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    Path getDrugInventoryFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Returns drug inventory data as a {@link ReadOnlyDrugInventory}.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @see #getDrugInventoryFilePath()","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Saves the given {@link ReadOnlyDrugInventory} to the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * @param drugInventory cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @see #saveDrugInventory(ReadOnlyDrugInventory)","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    void saveDrugInventory(ReadOnlyDrugInventory drugInventory, Path filePath) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":2,"cydtseng":3,"Emrysil":40}},{"path":"src/main/java/seedu/careflow/storage/JsonAdaptedDrug.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Direction;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Purpose;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.SideEffect;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.StorageCount;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":" * Jackson-friendly version of {@link Drug}.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"public class JsonAdaptedDrug {","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Drug\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    private final String tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"    private final String activeIngredient;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    private final String direction;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"    private final String purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    private final String sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    private final String storageCount;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"     * Constructs a {@code JsonAdaptedDrug} with the given drug details.","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    public JsonAdaptedDrug(@JsonProperty(\"tradeName\") String tradeName,","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"                           @JsonProperty(\"activeIngredient\") String activeIngredient,","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"                             @JsonProperty(\"direction\") String direction,","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"                           @JsonProperty(\"purposes\") String purposes,","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"                             @JsonProperty(\"sideEffects\") String sideEffects,","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"                           @JsonProperty(\"storageCount\") String storageCount) {","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"        this.tradeName \u003d tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"        this.activeIngredient \u003d activeIngredient;","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"        this.direction \u003d direction;","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"        this.purposes \u003d purposes;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"        this.sideEffects \u003d sideEffects;","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        this.storageCount \u003d storageCount;","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"     * Converts a given {@code Drug} into this class for Jackson use.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"    public JsonAdaptedDrug(Drug source) {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        tradeName \u003d source.getTradeName().tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"        activeIngredient \u003d source.getActiveIngredient().value;","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"        direction \u003d source.getDirection().value;","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"        purposes \u003d source.getPurposes().purpose;","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"        sideEffects \u003d source.getSideEffects().sideEffect;","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"        storageCount \u003d source.getStorageCount().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"     * Converts this Jackson-friendly adapted drug object into the model\u0027s {@code Drug} object.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"    public Drug toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"        if (tradeName \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"                    TradeName.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        if (!TradeName.isValidTradeName(tradeName)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(TradeName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"        final TradeName modelTradeName \u003d new TradeName(tradeName);","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"        if (activeIngredient \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"                    ActiveIngredient.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        if (!ActiveIngredient.isValidIngredient(activeIngredient)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(ActiveIngredient.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"        final ActiveIngredient modelActiveIngredient \u003d new ActiveIngredient(activeIngredient);","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"        if (direction \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"                    Direction.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        if (!Direction.isValidDirection(direction)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Direction.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"        final Direction modelDirection \u003d new Direction(direction);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"        if (purposes \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"                    Purpose.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        if (!Purpose.isValidPurpose(purposes)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Purpose.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"        final Purpose modelPurpose \u003d new Purpose(purposes);","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"        if (sideEffects \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"                    SideEffect.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        if (!SideEffect.isValidSideEffect(sideEffects)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(SideEffect.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"        final SideEffect modelSideEffects \u003d new SideEffect(sideEffects);","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"cydtseng"},"content":"        if (storageCount \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"cydtseng"},"content":"                    StorageCount.class.getSimpleName()));","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"        if (!StorageCount.isValidStorageCount(storageCount)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(StorageCount.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"        final StorageCount modelStorageCount \u003d new StorageCount(storageCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"cydtseng"},"content":"        return new Drug(modelTradeName, modelActiveIngredient,","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"cydtseng"},"content":"                modelDirection, modelPurpose, modelSideEffects, modelStorageCount);","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":1,"cydtseng":109,"Emrysil":18}},{"path":"src/main/java/seedu/careflow/storage/JsonAdaptedPatient.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":" * Jackson-friendly version of {@link Patient}.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonAdaptedPatient {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Patient\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final String name;","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private final String phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private final String email;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    private final String address;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private final String birthDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private final String gender;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private final String ic;","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private final String drugAllergy;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private final String emergencyContact;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code JsonAdaptedPatient} with the given patient details.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public JsonAdaptedPatient(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                             @JsonProperty(\"birthDate\") String birthDate, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                              @JsonProperty(\"ic\") String ic, @JsonProperty(\"drugAllergy\") String drugAllergy,","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                              @JsonProperty(\"emergencyContact\") String emergencyContact) {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        this.ic \u003d ic;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        this.emergencyContact \u003d emergencyContact;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * Converts a given {@code Patient} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public JsonAdaptedPatient(Patient source) {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        birthDate \u003d source.getBirthDate().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        gender \u003d source.getGender().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        ic \u003d source.getIc().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        if (source.getDrugAllergy() !\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            drugAllergy \u003d source.getDrugAllergy().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"            drugAllergy \u003d null;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        if (source.getDrugAllergy() !\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"            emergencyContact \u003d source.getEmergencyContact().value;","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"            emergencyContact \u003d null;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"     * Converts this Jackson-friendly adapted patient object into the model\u0027s {@code Patient} object.","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted patient.","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    public Patient toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2023-03-05"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-03-05"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2023-03-05"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2023-03-05"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"        if (birthDate \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"                    DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"        if (!DateOfBirth.isValidBirthDate(birthDate)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        final DateOfBirth modelBirthDate \u003d new DateOfBirth(birthDate);","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"                    Gender.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"        if (ic \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"                    Ic.class.getSimpleName()));","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"        if (!Ic.isValidIc(ic)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Ic.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"        final Ic modelIc \u003d new Ic(ic);","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"        if (drugAllergy !\u003d null \u0026\u0026 !DrugAllergy.isValidDrugAllergy(drugAllergy)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"        DrugAllergy modelDrugAllergy \u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"        if (drugAllergy !\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"            modelDrugAllergy \u003d new DrugAllergy(drugAllergy);","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"        if (emergencyContact !\u003d null \u0026\u0026 !Phone.isValidPhone(emergencyContact)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"        Phone modelEmergencyContact \u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"        if (emergencyContact !\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"            modelEmergencyContact \u003d new Phone(emergencyContact);","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"        if (modelDrugAllergy \u003d\u003d null \u0026\u0026 modelEmergencyContact \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"            return new Patient(modelName, modelPhone, modelEmail, modelAddress, modelBirthDate, modelGender, modelIc);","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"        return new Patient(modelName, modelPhone, modelEmail, modelAddress, modelBirthDate, modelGender, modelIc,","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"                modelDrugAllergy, modelEmergencyContact);","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nevinlim":4,"cydtseng":11,"Emrysil":153}},{"path":"src/main/java/seedu/careflow/storage/JsonDrugInventoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.FileUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.JsonUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" * A class to access drug data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"public class JsonDrugInventoryStorage implements DrugInventoryStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDrugInventoryStorage.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"     * Creates a JsonDrugInventoryStorage with {@code filePath}","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public JsonDrugInventoryStorage(Path filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory() throws DataConversionException {","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return readDrugInventory(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    public Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cJsonSerializableDrugInventory\u003e jsonDrugInventory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"                filePath, JsonSerializableDrugInventory.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        if (jsonDrugInventory.isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            return Optional.of(jsonDrugInventory.get().toModelType());","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        saveDrugInventory(drugInventory, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     * Similar to {@link #saveDrugInventory(ReadOnlyDrugInventory)}.","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory(ReadOnlyDrugInventory drugInventory, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(drugInventory);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDrugInventory(drugInventory), filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":11,"cydtseng":7,"Emrysil":64}},{"path":"src/main/java/seedu/careflow/storage/JsonPatientRecordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.FileUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.JsonUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" * A class to access patient data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonPatientRecordStorage implements PatientRecordStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPatientRecordStorage.class);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"    private final Path filePath;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public JsonPatientRecordStorage(Path filePath) {","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return filePath;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException {","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return readPatientRecord(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"    public Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cJsonSerializablePatientRecord\u003e jsonPatientRecord \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                filePath, JsonSerializablePatientRecord.class);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        if (!jsonPatientRecord.isPresent()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"            return Optional.of(jsonPatientRecord.get().toModelType());","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        savePatientRecord(patientRecord, filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord(ReadOnlyPatientRecord patientRecord, Path filePath) throws IOException {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(patientRecord);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePatientRecord(patientRecord), filePath);","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":10,"cydtseng":7,"Emrysil":57}},{"path":"src/main/java/seedu/careflow/storage/JsonSerializableDrugInventory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * An Immutable DrugInventory that is serializable to JSON format.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"@JsonRootName(value \u003d \"druginventory\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonSerializableDrugInventory {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_DUPLICATE_DRUG \u003d \"Drug list contains duplicate drug(s).\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cJsonAdaptedDrug\u003e drugs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code JsonSerializableDrugInventory} with the given drug.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializableDrugInventory(@JsonProperty(\"drugs\") List\u003cJsonAdaptedDrug\u003e drugs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        this.drugs.addAll(drugs);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Converts a given {@code ReadOnlyDrugInventory} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDrugInventory}.","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializableDrugInventory(ReadOnlyDrugInventory source) {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        drugs.addAll(source.getDrugList().stream().map(JsonAdaptedDrug::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * Converts this serializable drug inventory into the model\u0027s {@code DrugInventory} object.","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public DrugInventory toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        DrugInventory drugInventory \u003d new DrugInventory();","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        for (JsonAdaptedDrug jsonAdaptedDrug : drugs) {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"            Drug drug \u003d jsonAdaptedDrug.toModelType();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            if (drugInventory.hasDrug(drug)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_DRUG);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            drugInventory.addDrug(drug);","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        return drugInventory;","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nevinlim":5,"cydtseng":5,"Emrysil":49}},{"path":"src/main/java/seedu/careflow/storage/JsonSerializablePatientRecord.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"nevinlim"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * An Immutable PatientRecord that is serializable to JSON format.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"@JsonRootName(value \u003d \"patientrecord\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonSerializablePatientRecord {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final String MESSAGE_DUPLICATE_PATIENT \u003d \"Patient list contains duplicate patient(s).\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cJsonAdaptedPatient\u003e patients;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        patients \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializablePatientRecord(@JsonProperty(\"patients\") List\u003cJsonAdaptedPatient\u003e patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.patients.addAll(patients);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     * Converts a given {@code ReadOnlyPatientRecord} into this class for Jackson use.","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePatientRecord}.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public JsonSerializablePatientRecord(ReadOnlyPatientRecord source) {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        patients.addAll(source.getPatientList().stream().map(JsonAdaptedPatient::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     * Converts this serializable patient record into the model\u0027s {@code PatientRecord} object.","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public PatientRecord toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        PatientRecord patientRecord \u003d new PatientRecord();","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        for (JsonAdaptedPatient jsonAdaptedPatient : patients) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            Patient patient \u003d jsonAdaptedPatient.toModelType();","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            if (patientRecord.hasPatient(patient)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PATIENT);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"            patientRecord.addPatient(patient);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        return patientRecord;","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nevinlim":5,"cydtseng":5,"Emrysil":52}},{"path":"src/main/java/seedu/careflow/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.JsonUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cydtseng":5,"-":42}},{"path":"src/main/java/seedu/careflow/storage/PatientRecordStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Represents a storage for patient record","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public interface PatientRecordStorage {","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    Path getPatientRecordFilePath();","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Returns patient record data as a {@link ReadOnlyPatientRecord}.","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @see #getPatientRecordFilePath()","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     * Saves the given {@link ReadOnlyPatientRecord} to the storage.","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * @param patientRecord cannot be null.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    void savePatientRecord(ReadOnlyPatientRecord patientRecord) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @see #savePatientRecord(ReadOnlyPatientRecord)","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    void savePatientRecord(ReadOnlyPatientRecord patientRecord, Path filePath) throws IOException;","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"nevinlim":1,"cydtseng":3,"Emrysil":41}},{"path":"src/main/java/seedu/careflow/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":" * Represents a storage for {@link seedu.careflow.model.UserPrefs}.","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"     * Saves the given {@link seedu.careflow.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cydtseng":6,"-":30}},{"path":"src/main/java/seedu/careflow/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"         * @see seedu.careflow.logic.Logic#execute(String)","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"cydtseng":6,"-":80}},{"path":"src/main/java/seedu/careflow/ui/DrugCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":" * An UI component that displays information of a {@code Drug}.","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"public class DrugCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    private static final String FXML \u003d \"DrugListCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    public final Drug drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label tradeName;","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"    @FXML","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"    private Label id;","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"     * Creates a {@code DrugCode} with the given {@code Drug} and index to display.","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    public DrugCard(Drug drug, int displayedIndex) {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        super(FXML);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        this.drug \u003d drug;","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        tradeName.setText(this.drug.getTradeName().tradeName);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    @Override","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"            return true;","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"        if (!(other instanceof DrugCard)) {","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"            return false;","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"        // state check","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Jiayan-Lim"},"content":"        DrugCard card \u003d (DrugCard) other;","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Jiayan-Lim"},"content":"        return tradeName.getText().equals(card.tradeName.getText())","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 drug.equals(card.drug);","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"cydtseng":2,"Emrysil":2,"Jiayan-Lim":57}},{"path":"src/main/java/seedu/careflow/ui/DrugListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.CareFlowLogic;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":" * Panel containing the list of drugs.","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"public class DrugListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    private static final String FXML \u003d \"DrugListPanel.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    private ListView\u003cDrug\u003e drugListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"    private Label selectedTradeName;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"    private Label selectedActiveIngredient;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"    private Label selectedDirection;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"    private Label selectedPurposes;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"    private Label selectedSideEffects;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    private Label selectedStorageCount;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"     * Creates a {@code DrugListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"    public DrugListPanel(ObservableList\u003cDrug\u003e drugList, CareFlowLogic logic) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"        // DRUG LIST","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"        drugListView.setItems(drugList);","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"        drugListView.setCellFactory(listView -\u003e new DrugListViewCell());","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"        displayDrugDetail();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"        logic.getFilteredDrugList().addListener(new ListChangeListener\u003cDrug\u003e() {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"            @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"            public void onChanged(Change\u003c? extends Drug\u003e c) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"                Drug selectedDrug \u003d drugListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"                setDrugDetailDisplay(selectedDrug);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"    private void displayDrugDetail() {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"        drugListView.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"            Drug selectedDrug \u003d drugListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"CShuwen"},"content":"            setDrugDetailDisplay(selectedDrug);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"    private void setDrugDetailDisplay(Drug selectedDrug) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"        selectedTradeName.setText(selectedDrug.getTradeName().tradeName);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"        selectedActiveIngredient.setText(\"Active Ingredient: \" + selectedDrug.getActiveIngredient().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"        selectedDirection.setText(\"Direction: \" + selectedDrug.getDirection().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"        selectedPurposes.setText(\"Purposes: \" + selectedDrug.getPurposes().purpose);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"CShuwen"},"content":"        selectedSideEffects.setText(\"Side Effects: \" + selectedDrug.getSideEffects().sideEffect);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"CShuwen"},"content":"        selectedStorageCount.setText(\"Storage Count: \" + selectedDrug.getStorageCount().toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Drug} using a {@code DrugCard}.","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    static class DrugListViewCell extends ListCell\u003cDrug\u003e {","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"        protected void updateItem(Drug drug, boolean empty) {","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"            super.updateItem(drug, empty);","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"            if (empty || drug \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"                setText(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"                setGraphic(new DrugCard(drug, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"cydtseng":35,"Emrysil":1,"CShuwen":54}},{"path":"src/main/java/seedu/careflow/ui/DrugPieChartPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"import java.text.DecimalFormat;","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.CareFlowLogic;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":" * Panel containing the drug pie chart","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"public class DrugPieChartPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    private static final String FXML \u003d \"DrugPieChartPanel.fxml\";","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    private ObservableList\u003cPieChart.Data\u003e pieChartData \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    private PieChart drugPieChart;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"     * Displays the graphics of a {@code DrugPieChart}.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"    public DrugPieChartPanel(ObservableList\u003cDrug\u003e drugList, CareFlowLogic logic) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"        updatePieChartSegments(drugList);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"        logic.getFilteredDrugList().addListener(new ListChangeListener\u003cDrug\u003e() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"            @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"            public void onChanged(Change\u003c? extends Drug\u003e c) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"                updatePieChartSegments(logic.getFilteredDrugList());","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"    private static double getTotal(ObservableList\u003cPieChart.Data\u003e pieChartData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"        double total \u003d 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"        for (PieChart.Data data : pieChartData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"            total +\u003d data.getPieValue();","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        return total;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    private void updatePieChartSegments(ObservableList\u003cDrug\u003e drugList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"        setPieChartData(drugList);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"        // set the percentage label format","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"        DecimalFormat df \u003d new DecimalFormat(\"#.##\");","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        drugPieChart.setData(pieChartData);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"        drugPieChart.getData().forEach(data -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"            data.setName(data.getName() + \" (\"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"                    + df.format((data.getPieValue() / getTotal(pieChartData)) * 100) + \"%)\");","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"        });","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"        // add drug names and percentage values to the pie chart","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"        for (PieChart.Data data : drugPieChart.getData()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"            Text text \u003d new Text(data.getName());","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"            text.setStyle(\"-fx-font-size: 12; -fx-font-weight: bold\");","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"            data.getNode().setUserData(text);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"    private void setPieChartData(ObservableList\u003cDrug\u003e drugList) {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"        pieChartData.clear();","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"        for (int i \u003d 0; i \u003c drugList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"            Drug drug \u003d drugList.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"            PieChart.Data newData \u003d new PieChart.Data(drug.getTradeName().toString(),","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"                    drug.getStorageCount().getCount());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"            pieChartData.add(newData);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":66,"CShuwen":10}},{"path":"src/main/java/seedu/careflow/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"import seedu.careflow.MainApp;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-w09-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"    private Button openButton;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    private Scene scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    public Scene getScene() {","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"        return scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"    private void openUrl() {","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"CShuwen"},"content":"        final Hyperlink userGuideUrl \u003d new Hyperlink(USERGUIDE_URL);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"CShuwen"},"content":"        MainApp.getStaticHostServices().showDocument(userGuideUrl.getText());","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nevinlim":13,"cydtseng":2,"CShuwen":2,"-":88}},{"path":"src/main/java/seedu/careflow/ui/HospitalCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":" * A UI component that displays information of a {@code HospitalHotline}.","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"public class HospitalCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    private static final String FXML \u003d \"HospitalCard.fxml\";","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    public final Hospital hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    private Label hospitalName;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    private Label hotline;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"     * Creates a {@code HospitalCode} with the given {@code Hospital} and index to display.","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"    public HospitalCard(Hospital hospital) {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"        this.hospital \u003d hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"        this.hospitalName.setText(this.hospital.getHospitalName());","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"        this.hotline.setText(this.hospital.getHotline());","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"        //instanceof handles null","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"        if (!(other instanceof HospitalCard)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"        HospitalCard card \u003d (HospitalCard) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"        return this.hospitalName.getText().equals(card.hospitalName.getText())","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"                \u0026\u0026 this.hospital.equals(card.hospital);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":49,"CShuwen":3}},{"path":"src/main/java/seedu/careflow/ui/HospitalListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":" * Panel containing the list of hospitals.","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"public class HospitalListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    private static final String FXML \u003d \"HospitalListPanel.fxml\";","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    private ListView\u003cHospital\u003e hospitalListView;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"     * Creates a {@code HopsitalListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"    public HospitalListPanel(ObservableList\u003cHospital\u003e hospitalHotlineList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"        this.hospitalListView.setItems(hospitalHotlineList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"        this.hospitalListView.setCellFactory(listView -\u003e new HotlineListViewCell());","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Hospital} using a {@code HospitalCard}.","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"    class HotlineListViewCell extends ListCell\u003cHospital\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"        protected void updateItem(Hospital hospital, boolean empty) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"            super.updateItem(hospital, empty);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"            if (empty || hospital \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"                setText(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"                setGraphic(new HospitalCard(hospital).getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":37,"CShuwen":7}},{"path":"src/main/java/seedu/careflow/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"nevinlim"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.CareFlowLogic;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    private final CareFlowLogic logic;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"    private PatientListPanel patientListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"    private DrugListPanel drugListPanel;","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"    private DrugPieChartPanel drugPieChartPanel;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"    private HospitalListPanel hospitalRecordlistPanel;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    private final HelpWindow helpWindow;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"    private StackPane patientListPanelPlaceholder;","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"    private MenuItem light;","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"    private MenuItem dark;","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    private StackPane patientDrugListPanelPlaceholder;","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"    private StackPane drugListPanelPlaceholder;","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    private StackPane drugPieChartPanelPlaceholder;","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"    private StackPane hospitalRecordPanelPlaceholder;","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"    private Scene scene;","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"    private TabPane tabPane;","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"    private Tab patientTab;","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"    private Tab drugTab;","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"    private Tab hospitalTab;","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    private String theme;","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    public MainWindow(Stage primaryStage, CareFlowLogic logic) {","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":106,"author":{"gitId":"nevinlim"},"content":"        primaryStage.setTitle(\"CareFlow\");","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"        setTheme(logic.getGuiSettings());","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"nevinlim"},"content":"        setAccelerator(light, KeyCombination.valueOf(\"CTRL+SHIFT+L\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"nevinlim"},"content":"        setAccelerator(dark, KeyCombination.valueOf(\"CTRL+SHIFT+D\"));","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"        //make the tabPane fill its parent VBox","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"cydtseng"},"content":"        VBox.setVgrow(tabPane, Priority.ALWAYS);","lastModifiedDate":"2023-03-10"},{"lineNumber":168,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"CShuwen"},"content":"        patientListPanel \u003d new PatientListPanel(logic.getFilteredPatientList(), logic);","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"cydtseng"},"content":"        patientListPanelPlaceholder.getChildren().add(patientListPanel.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"CShuwen"},"content":"        drugListPanel \u003d new DrugListPanel(logic.getFilteredDrugList(), logic);","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"cydtseng"},"content":"        drugListPanelPlaceholder.getChildren().add(drugListPanel.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":175,"author":{"gitId":"cydtseng"},"content":"        drugPieChartPanel \u003d new DrugPieChartPanel(logic.getFilteredDrugList(), logic);","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"cydtseng"},"content":"        drugPieChartPanelPlaceholder.getChildren().add(drugPieChartPanel.getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"cydtseng"},"content":"        hospitalRecordlistPanel \u003d new HospitalListPanel(logic.getHospitalList());","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"cydtseng"},"content":"        hospitalRecordPanelPlaceholder.getChildren().add(hospitalRecordlistPanel.getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"        StatusBarFooter statusBarFooter \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"                new StatusBarFooter(logic.getPatientRecordFilePath(), logic.getDrugInventoryFilePath());","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":190,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":207,"author":{"gitId":"Emrysil"},"content":"     * Sets the default theme based on {@code guiSettings}","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"Emrysil"},"content":"    private void setTheme(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"Emrysil"},"content":"        String theme \u003d guiSettings.getTheme();","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"Emrysil"},"content":"        if (theme.equals(\"DARK\")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"Emrysil"},"content":"            toggleDarkTheme();","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"Emrysil"},"content":"            toggleLightTheme();","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":239,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":241,"author":{"gitId":"Emrysil"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), theme);","lastModifiedDate":"2023-03-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":247,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":"     * Toggles the Light theme version of the app","lastModifiedDate":"2023-03-10"},{"lineNumber":250,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":251,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"    public void toggleLightTheme() {","lastModifiedDate":"2023-03-10"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"        // enable style","lastModifiedDate":"2023-03-10"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":255,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/LightTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":256,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":257,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/HelpWindowLight.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":258,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":259,"author":{"gitId":"nevinlim"},"content":"        // disable style","lastModifiedDate":"2023-03-10"},{"lineNumber":260,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":261,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/DarkTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":262,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":263,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/Extensions.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":264,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":265,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/HelpWindow.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":266,"author":{"gitId":"Emrysil"},"content":"        theme \u003d \"LIGHT\";","lastModifiedDate":"2023-03-12"},{"lineNumber":267,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":270,"author":{"gitId":"nevinlim"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":271,"author":{"gitId":"nevinlim"},"content":"     * Toggles the Dark theme version of the app","lastModifiedDate":"2023-03-10"},{"lineNumber":272,"author":{"gitId":"nevinlim"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":273,"author":{"gitId":"nevinlim"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":274,"author":{"gitId":"nevinlim"},"content":"    public void toggleDarkTheme() {","lastModifiedDate":"2023-03-10"},{"lineNumber":275,"author":{"gitId":"nevinlim"},"content":"        // enable style","lastModifiedDate":"2023-03-10"},{"lineNumber":276,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":277,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/DarkTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":278,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":279,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/Extensions.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":280,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().add(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":281,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/HelpWindow.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":282,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":283,"author":{"gitId":"nevinlim"},"content":"        // disable style","lastModifiedDate":"2023-03-10"},{"lineNumber":284,"author":{"gitId":"nevinlim"},"content":"        scene.getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":285,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/LightTheme.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":286,"author":{"gitId":"nevinlim"},"content":"        helpWindow.getScene().getStylesheets().remove(Objects.requireNonNull(","lastModifiedDate":"2023-03-10"},{"lineNumber":287,"author":{"gitId":"CShuwen"},"content":"                getClass().getResource(\"/stylesheet/HelpWindowLight.css\")).toExternalForm());","lastModifiedDate":"2023-03-12"},{"lineNumber":288,"author":{"gitId":"Emrysil"},"content":"        theme \u003d \"DARK\";","lastModifiedDate":"2023-03-12"},{"lineNumber":289,"author":{"gitId":"nevinlim"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":291,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":292,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":293,"author":{"gitId":"cydtseng"},"content":"     * @see seedu.careflow.logic.CareFlowLogic#execute(String)","lastModifiedDate":"2023-03-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":316,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nevinlim":44,"cydtseng":49,"Emrysil":24,"CShuwen":19,"-":180}},{"path":"src/main/java/seedu/careflow/ui/PatientCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":" * An UI component that displays information of a {@code Patient}.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class PatientCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private static final String FXML \u003d \"PatientListCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    public final Patient patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"     * Creates a {@code PatientCode} with the given {@code Patient} and index to display.","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public PatientCard(Patient patient, int displayedIndex) {","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        this.patient \u003d patient;","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        name.setText(this.patient.getName().fullName);","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"        phone.setText(\"Tel: \" + this.patient.getPhone().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        if (!(other instanceof PatientCard)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        PatientCard card \u003d (PatientCard) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"Jiayan-Lim"},"content":"                \u0026\u0026 patient.equals(card.patient);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cydtseng":2,"Emrysil":5,"CShuwen":1,"-":48,"Jiayan-Lim":6}},{"path":"src/main/java/seedu/careflow/ui/PatientListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.CareFlowLogic;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":" * Panel containing the list of patients.","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"public class PatientListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"    private static final String FXML \u003d \"PatientListPanel.fxml\";","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"    private ListView\u003cPatient\u003e patientListView;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"    private Label selectedName;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"    private Label selectedPhone;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"    private Label selectedAddress;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"    private Label selectedEmail;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"    private Label selectedBirthDate;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"    private Label selectedGender;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"    private Label selectedIc;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"     * Creates a {@code PatientListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    public PatientListPanel(ObservableList\u003cPatient\u003e patientList, CareFlowLogic logic) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"        super(FXML);","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"        // PERSON LIST","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"        patientListView.setItems(patientList);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"        patientListView.setCellFactory(listView -\u003e new PatientListViewCell());","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"        displayPatientDetail();","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"        logic.getFilteredPatientList().addListener(new ListChangeListener\u003cPatient\u003e() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"            @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"            public void onChanged(Change\u003c? extends Patient\u003e c) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"                Patient selectedPatient \u003d patientListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"                setPatientDetailDisplay(selectedPatient);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"    private void displayPatientDetail() {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"        patientListView.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"            Patient selectedPatient \u003d patientListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"            setPatientDetailDisplay(selectedPatient);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"    private void setPatientDetailDisplay(Patient selectedPatient) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"CShuwen"},"content":"        selectedName.setText(selectedPatient.getName().fullName);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"        selectedPhone.setText(\"Tel: \" + selectedPatient.getPhone().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"        selectedAddress.setText(\"Address: \" + selectedPatient.getAddress().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"        selectedEmail.setText(\"Email: \" + selectedPatient.getEmail().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"        selectedBirthDate.setText(\"Date of Birth: \" + selectedPatient.getBirthDate().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"        selectedGender.setText(\"Gender: \" + selectedPatient.getGender().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"        selectedIc.setText(\"Ic: \" + selectedPatient.getIc().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Patient} using a {@code PatientCard}.","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    class PatientListViewCell extends ListCell\u003cPatient\u003e {","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"        @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"        protected void updateItem(Patient patient, boolean empty) {","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"            super.updateItem(patient, empty);","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"            if (empty || patient \u003d\u003d null) {","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"                setText(null);","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"            } else {","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"                setGraphic(new PatientCard(patient, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"cydtseng":36,"CShuwen":50}},{"path":"src/main/java/seedu/careflow/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cydtseng":1,"-":27}},{"path":"src/main/java/seedu/careflow/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public StatusBarFooter(Path patientSaveLocation, Path drugSaveLocation) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(patientSaveLocation) + \"\\t\"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"nevinlim"},"content":"                        + Paths.get(\".\").resolve(drugSaveLocation)","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"nevinlim":2,"cydtseng":1,"Emrysil":2,"-":25}},{"path":"src/main/java/seedu/careflow/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cydtseng":1,"-":12}},{"path":"src/main/java/seedu/careflow/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.MainApp;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.util.StringUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.CareFlowLogic;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/careFlow.png\";","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private CareFlowLogic logic;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public UiManager(CareFlowLogic logic) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"        alert.getDialogPane().getStylesheets().add(\"stylesheet/DarkTheme.css\");","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cydtseng":5,"Emrysil":3,"CShuwen":1,"-":78}},{"path":"src/main/java/seedu/careflow/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.MainApp;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cydtseng":2,"-":86}},{"path":"src/main/resources/stylesheet/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":".root {","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"    -fx-font-family: sans-serif, Helvetica, Arial;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"    background-color: derive(#445568, 25%); /* Used in the default.html file */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: normal;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"    -fx-base: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"    -fx-control-inner-background: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"    /* -fx-padding: 0 0 1 0; */","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"    -fx-background-radius: 10.0;","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#758E9B, 20%)","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#758E9B, 40%)","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: #67879F;","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"/* Drawing blue line border around selected cell","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"cydtseng"},"content":"}*/","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"CShuwen"},"content":"    -fx-text-fill: #F7F8F8;","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"CShuwen"},"content":"    -fx-text-fill: #F7F8F8;","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":145,"author":{"gitId":"CShuwen"},"content":"     -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":149,"author":{"gitId":"CShuwen"},"content":"     -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"CShuwen"},"content":"     -fx-border-color: derive(#445568, 10%);","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"cydtseng"},"content":"/* TAB PANE RELATED*/","lastModifiedDate":"2023-03-10"},{"lineNumber":155,"author":{"gitId":"cydtseng"},"content":".tab-pane:top *.tab-header-area {","lastModifiedDate":"2023-03-10"},{"lineNumber":156,"author":{"gitId":"cydtseng"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":157,"author":{"gitId":"cydtseng"},"content":"    -fx-padding: 0.416667em 0.166667em 0.0em 0.0em;","lastModifiedDate":"2023-03-10"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":159,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":160,"author":{"gitId":"cydtseng"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2023-03-10"},{"lineNumber":161,"author":{"gitId":"cydtseng"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":162,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":163,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":164,"author":{"gitId":"cydtseng"},"content":".tab-pane","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"cydtseng"},"content":"{","lastModifiedDate":"2023-03-10"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"    -fx-tab-min-width: 90px;","lastModifiedDate":"2023-03-10"},{"lineNumber":167,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":169,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":170,"author":{"gitId":"cydtseng"},"content":".tab{","lastModifiedDate":"2023-03-10"},{"lineNumber":171,"author":{"gitId":"cydtseng"},"content":"    -fx-background-insets: 0 1 0 1, 0, 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":172,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":173,"author":{"gitId":"cydtseng"},"content":".tab-pane .tab","lastModifiedDate":"2023-03-10"},{"lineNumber":174,"author":{"gitId":"cydtseng"},"content":"{","lastModifiedDate":"2023-03-10"},{"lineNumber":175,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: #F7F8F8;","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":177,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"cydtseng"},"content":".tab-pane .tab:selected","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"cydtseng"},"content":"{","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 15%);","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":182,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"cydtseng"},"content":".tab .tab-label {","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"cydtseng"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"cydtseng"},"content":"    -fx-pref-width: 150.0;","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"CShuwen"},"content":"    -fx-text-fill: derive(#445568, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":190,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"cydtseng"},"content":".tab:selected .tab-label {","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"cydtseng"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":202,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"CShuwen"},"content":"    -fx-border-color: derive(#445568, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":230,"author":{"gitId":"CShuwen"},"content":"    -fx-border-color: derive(#445568, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":235,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 30%);","lastModifiedDate":"2023-03-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 50%);","lastModifiedDate":"2023-03-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-12"},{"lineNumber":252,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"CShuwen"},"content":"  -fx-text-fill: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: #445568;","lastModifiedDate":"2023-03-12"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":339,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: derive(#445568, 50%);","lastModifiedDate":"2023-03-12"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":341,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":346,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":371,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: transparent derive(#445568, 25%) transparent derive(#445568, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":373,"author":{"gitId":"CShuwen"},"content":"    -fx-border-color: derive(#445568, 25%) derive(#445568, 25%) #ffffff derive(#445568, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":380,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":384,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":385,"author":{"gitId":"CShuwen"},"content":"    -fx-background-color: transparent, derive(#445568, 25%), transparent, derive(#445568, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":387,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":389,"author":{"gitId":"nevinlim"},"content":"#drugList {","lastModifiedDate":"2023-03-12"},{"lineNumber":390,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, derive(#445568, 25%), transparent, derive(#445568, 5%);","lastModifiedDate":"2023-03-12"},{"lineNumber":391,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":392,"author":{"gitId":"nevinlim"},"content":"#patientList {","lastModifiedDate":"2023-03-12"},{"lineNumber":393,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, derive(#445568, 25%), transparent, derive(#445568, 5%);","lastModifiedDate":"2023-03-12"},{"lineNumber":394,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":395,"author":{"gitId":"nevinlim"},"content":"#detailDisplay {","lastModifiedDate":"2023-03-12"},{"lineNumber":396,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, derive(#445568, 25%), transparent, derive(#445568, 5%);","lastModifiedDate":"2023-03-12"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":398,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":400,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":405,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":408,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":410,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":412,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"nevinlim":10,"cydtseng":62,"CShuwen":37,"-":303}},{"path":"src/main/resources/stylesheet/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"    -fx-background: derive(#445568, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CShuwen":1,"-":19}},{"path":"src/main/resources/stylesheet/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":".root {","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"    -fx-font-family: sans-serif, Helvetica, Arial;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"#openButton, #helpMessage {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"#openButton {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"#openButton:hover {","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"#openButton:armed {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"nevinlim":4,"cydtseng":5,"-":15}},{"path":"src/main/resources/stylesheet/HelpWindowLight.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":".root {","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"    -fx-font-family: sans-serif, Helvetica, Arial;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":"#openButton, #helpMessage {","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"-fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"#openButton {","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: lightgray;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"nevinlim"},"content":"#openButton:hover {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: gray;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"#openButton:armed {","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"-fx-background-color: darkgray;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"#helpMessageContainer {","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#f0f0f0, 20%);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"nevinlim":19,"cydtseng":4}},{"path":"src/main/resources/stylesheet/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":".root {","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"    -fx-font-family: sans-serif, Helvetica, Arial;","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"nevinlim"},"content":".background {","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #b1e6fa;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"nevinlim"},"content":"    background-color: #b1e6fa; /* Used in the default.html file */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"nevinlim"},"content":".label {","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: derive(#445568, 15%);","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":".label-bright {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: derive(#445568, 15%);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"nevinlim"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"nevinlim"},"content":".label-header {","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: derive(#445568, 15%);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"nevinlim"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":".text-field {","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"nevinlim"},"content":".tab-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"nevinlim"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"nevinlim"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"nevinlim"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"nevinlim"},"content":".table-view {","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"nevinlim"},"content":"    -fx-base: #b1e6fa;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"nevinlim"},"content":"    -fx-control-inner-background: #b1e6fa;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #b1e6fa;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"nevinlim"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"nevinlim"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"nevinlim"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"nevinlim"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"nevinlim"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"nevinlim"},"content":"    transparent","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"nevinlim"},"content":"    transparent","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"nevinlim"},"content":"    derive(-fx-base, 80%)","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"nevinlim"},"content":"    transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"nevinlim"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"nevinlim"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"nevinlim"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"nevinlim"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"nevinlim"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"nevinlim"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#b1e6fa, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: transparent transparent transparent #c3c3c3;","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"nevinlim"},"content":".split-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"nevinlim"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#b1e6fa, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"nevinlim"},"content":".list-view {","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#b1e6fa, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"nevinlim"},"content":".list-cell {","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"nevinlim"},"content":"    /*-fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"nevinlim"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 0 0 0 0;*/","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"nevinlim"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"nevinlim"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"nevinlim"},"content":"    /* -fx-padding: 0 0 1 0; */","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 5px;","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 10.0;","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"nevinlim"},"content":"    -fx-border-insets: 5px;","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 5px;","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"nevinlim"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#d7f2fc, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"nevinlim"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#d7f2fc, 40%);","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":120,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":121,"author":{"gitId":"nevinlim"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-10"},{"lineNumber":122,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #a9c1c9;","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"nevinlim"},"content":"/*.list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: #8cb3d9;","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"nevinlim"},"content":"}*/","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"nevinlim"},"content":".list-cell .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: derive(#445568, 15%);;","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"nevinlim"},"content":".cell_big_label {","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"nevinlim"},"content":".cell_small_label {","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"nevinlim"},"content":".stack-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#b1e6fa, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"nevinlim"},"content":".pane-with-border {","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#b1e6fa, 20%);","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: derive(#b1e6fa, 10%);","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"nevinlim"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"nevinlim"},"content":"/* TAB PANE RELATED*/","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"nevinlim"},"content":".tab-pane:top *.tab-header-area {","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 0, 0 0 1 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 0.416667em 0.166667em 0.0em 0.0em;","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"nevinlim"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"nevinlim"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"nevinlim"},"content":".tab-pane","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"nevinlim"},"content":"{","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"nevinlim"},"content":"    -fx-tab-min-width: 90px;","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#b1e6fa, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"nevinlim"},"content":".tab{","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 0 1 0 1, 0, 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"nevinlim"},"content":".tab-pane .tab","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"nevinlim"},"content":"{","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#445568, 15%);","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"nevinlim"},"content":".tab-pane .tab:selected","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"nevinlim"},"content":"{","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #F7F8F8","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"nevinlim"},"content":".tab .tab-label {","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"nevinlim"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"nevinlim"},"content":"    -fx-pref-width: 150.0;","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: derive(#b1e6fa, 25%);","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"nevinlim"},"content":".tab:selected .tab-label {","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"nevinlim"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2023-03-12"},{"lineNumber":192,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: derive(#445568, 15%);;","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"nevinlim"},"content":".status-bar {","lastModifiedDate":"2023-03-10"},{"lineNumber":196,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":198,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":199,"author":{"gitId":"nevinlim"},"content":".result-display {","lastModifiedDate":"2023-03-10"},{"lineNumber":200,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":201,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":203,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: derive(#445568, 15%);","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":205,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":206,"author":{"gitId":"nevinlim"},"content":".result-display .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":207,"author":{"gitId":"cydtseng"},"content":"    -fx-text-fill: derive(#445568, 15%) !important;","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":209,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":210,"author":{"gitId":"nevinlim"},"content":".status-bar .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":211,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-10"},{"lineNumber":214,"author":{"gitId":"nevinlim"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-10"},{"lineNumber":215,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":216,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":217,"author":{"gitId":"nevinlim"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-10"},{"lineNumber":218,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":219,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: #d4d4d4;","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-10"},{"lineNumber":221,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":222,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":223,"author":{"gitId":"nevinlim"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":224,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":225,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":226,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":227,"author":{"gitId":"nevinlim"},"content":".grid-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: #d4d4d4;","lastModifiedDate":"2023-03-10"},{"lineNumber":230,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-10"},{"lineNumber":231,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":232,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"nevinlim"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #e3e3e3;","lastModifiedDate":"2023-03-10"},{"lineNumber":235,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":237,"author":{"gitId":"nevinlim"},"content":".context-menu {","lastModifiedDate":"2023-03-10"},{"lineNumber":238,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #b1e6fa;","lastModifiedDate":"2023-03-12"},{"lineNumber":239,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":240,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":241,"author":{"gitId":"nevinlim"},"content":".context-menu .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":242,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":243,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":244,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":245,"author":{"gitId":"nevinlim"},"content":".menu-bar {","lastModifiedDate":"2023-03-10"},{"lineNumber":246,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #b1e6fa;","lastModifiedDate":"2023-03-12"},{"lineNumber":247,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":248,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":249,"author":{"gitId":"nevinlim"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":250,"author":{"gitId":"cydtseng"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-12"},{"lineNumber":251,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":253,"author":{"gitId":"nevinlim"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-10"},{"lineNumber":254,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":255,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":256,"author":{"gitId":"nevinlim"},"content":".menu .left-container {","lastModifiedDate":"2023-03-10"},{"lineNumber":257,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":258,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":259,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":260,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":261,"author":{"gitId":"nevinlim"},"content":".button {","lastModifiedDate":"2023-03-10"},{"lineNumber":262,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-10"},{"lineNumber":263,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: #666666;","lastModifiedDate":"2023-03-10"},{"lineNumber":264,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":265,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":266,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":267,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":268,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #666666;","lastModifiedDate":"2023-03-10"},{"lineNumber":269,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":270,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":271,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":272,"author":{"gitId":"nevinlim"},"content":".button:hover {","lastModifiedDate":"2023-03-10"},{"lineNumber":273,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #e0e0e0;","lastModifiedDate":"2023-03-10"},{"lineNumber":274,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":275,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":276,"author":{"gitId":"nevinlim"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-10"},{"lineNumber":277,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":278,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":279,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":280,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":281,"author":{"gitId":"nevinlim"},"content":".button:focused {","lastModifiedDate":"2023-03-10"},{"lineNumber":282,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: #1d1d1d, #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":283,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":284,"author":{"gitId":"nevinlim"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-10"},{"lineNumber":285,"author":{"gitId":"nevinlim"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":286,"author":{"gitId":"nevinlim"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":287,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":288,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":289,"author":{"gitId":"nevinlim"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-10"},{"lineNumber":290,"author":{"gitId":"nevinlim"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-10"},{"lineNumber":291,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":292,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #666666;","lastModifiedDate":"2023-03-10"},{"lineNumber":293,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":294,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":295,"author":{"gitId":"nevinlim"},"content":".button:default {","lastModifiedDate":"2023-03-10"},{"lineNumber":296,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-10"},{"lineNumber":297,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-10"},{"lineNumber":298,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":299,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":300,"author":{"gitId":"nevinlim"},"content":".button:default:hover {","lastModifiedDate":"2023-03-10"},{"lineNumber":301,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-10"},{"lineNumber":302,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":303,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":304,"author":{"gitId":"nevinlim"},"content":".dialog-pane {","lastModifiedDate":"2023-03-10"},{"lineNumber":305,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":306,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":307,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":308,"author":{"gitId":"nevinlim"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-10"},{"lineNumber":309,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":310,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":311,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":312,"author":{"gitId":"nevinlim"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-10"},{"lineNumber":313,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-10"},{"lineNumber":314,"author":{"gitId":"nevinlim"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-10"},{"lineNumber":315,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":316,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":317,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":318,"author":{"gitId":"nevinlim"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-10"},{"lineNumber":319,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: derive(#f5f5f5, 25%);","lastModifiedDate":"2023-03-10"},{"lineNumber":320,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":321,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":322,"author":{"gitId":"nevinlim"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-10"},{"lineNumber":323,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-10"},{"lineNumber":324,"author":{"gitId":"nevinlim"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-10"},{"lineNumber":325,"author":{"gitId":"nevinlim"},"content":"    -fx-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":326,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-10"},{"lineNumber":327,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":328,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":329,"author":{"gitId":"nevinlim"},"content":".scroll-bar {","lastModifiedDate":"2023-03-10"},{"lineNumber":330,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #f5f5f5;","lastModifiedDate":"2023-03-10"},{"lineNumber":331,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":332,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":333,"author":{"gitId":"nevinlim"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-10"},{"lineNumber":334,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #c7c7c7;","lastModifiedDate":"2023-03-10"},{"lineNumber":335,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":336,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":337,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":338,"author":{"gitId":"nevinlim"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-10"},{"lineNumber":339,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":340,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":341,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":342,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":343,"author":{"gitId":"nevinlim"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-10"},{"lineNumber":344,"author":{"gitId":"nevinlim"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-10"},{"lineNumber":345,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":346,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":347,"author":{"gitId":"nevinlim"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-10"},{"lineNumber":348,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-10"},{"lineNumber":349,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":350,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":351,"author":{"gitId":"nevinlim"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-10"},{"lineNumber":352,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":353,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":354,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":355,"author":{"gitId":"nevinlim"},"content":"#cardPane {","lastModifiedDate":"2023-03-10"},{"lineNumber":356,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-10"},{"lineNumber":357,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":358,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":359,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":360,"author":{"gitId":"nevinlim"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-10"},{"lineNumber":361,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-10"},{"lineNumber":362,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #0066cc;","lastModifiedDate":"2023-03-10"},{"lineNumber":363,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":364,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":365,"author":{"gitId":"nevinlim"},"content":"#commandTextField {","lastModifiedDate":"2023-03-10"},{"lineNumber":366,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent white transparent white;","lastModifiedDate":"2023-03-10"},{"lineNumber":367,"author":{"gitId":"nevinlim"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":368,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: white white #383838 white;","lastModifiedDate":"2023-03-10"},{"lineNumber":369,"author":{"gitId":"nevinlim"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":370,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":371,"author":{"gitId":"cydtseng"},"content":"    -fx-font-weight: lighter;","lastModifiedDate":"2023-03-14"},{"lineNumber":372,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-10"},{"lineNumber":373,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-10"},{"lineNumber":374,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":375,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":376,"author":{"gitId":"nevinlim"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-10"},{"lineNumber":377,"author":{"gitId":"nevinlim"},"content":"    -fx-effect: innershadow(gaussian, white, 10, 0, 0, 0);","lastModifiedDate":"2023-03-10"},{"lineNumber":378,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":379,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":380,"author":{"gitId":"nevinlim"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-10"},{"lineNumber":381,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2023-03-10"},{"lineNumber":382,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-10"},{"lineNumber":383,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":384,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":385,"author":{"gitId":"nevinlim"},"content":"#tags {","lastModifiedDate":"2023-03-10"},{"lineNumber":386,"author":{"gitId":"nevinlim"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-10"},{"lineNumber":387,"author":{"gitId":"nevinlim"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":388,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":389,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":390,"author":{"gitId":"nevinlim"},"content":"#tags .label {","lastModifiedDate":"2023-03-10"},{"lineNumber":391,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":392,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: #4caf50;","lastModifiedDate":"2023-03-10"},{"lineNumber":393,"author":{"gitId":"nevinlim"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":394,"author":{"gitId":"nevinlim"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":395,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-10"},{"lineNumber":396,"author":{"gitId":"nevinlim"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-10"},{"lineNumber":397,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":398,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":399,"author":{"gitId":"nevinlim"},"content":"#drugList {","lastModifiedDate":"2023-03-12"},{"lineNumber":400,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2023-03-12"},{"lineNumber":401,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":402,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":403,"author":{"gitId":"nevinlim"},"content":"#patientList {","lastModifiedDate":"2023-03-12"},{"lineNumber":404,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2023-03-12"},{"lineNumber":405,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":406,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":407,"author":{"gitId":"nevinlim"},"content":"#detailDisplay {","lastModifiedDate":"2023-03-12"},{"lineNumber":408,"author":{"gitId":"nevinlim"},"content":"    -fx-background-color: transparent, white, transparent, white;","lastModifiedDate":"2023-03-12"},{"lineNumber":409,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":410,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":411,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":412,"author":{"gitId":"nevinlim"},"content":".error {","lastModifiedDate":"2023-03-10"},{"lineNumber":413,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2023-03-10"},{"lineNumber":414,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":415,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":416,"author":{"gitId":"nevinlim"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-10"},{"lineNumber":417,"author":{"gitId":"nevinlim"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-03-10"},{"lineNumber":418,"author":{"gitId":"nevinlim"},"content":"    -fx-background: #b1e6fa;","lastModifiedDate":"2023-03-12"},{"lineNumber":419,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":420,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":421,"author":{"gitId":"nevinlim"},"content":".tag-selector {","lastModifiedDate":"2023-03-10"},{"lineNumber":422,"author":{"gitId":"nevinlim"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-10"},{"lineNumber":423,"author":{"gitId":"nevinlim"},"content":"    -fx-border-color: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":424,"author":{"gitId":"nevinlim"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":425,"author":{"gitId":"nevinlim"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2023-03-10"},{"lineNumber":426,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"},{"lineNumber":427,"author":{"gitId":"nevinlim"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":428,"author":{"gitId":"nevinlim"},"content":".tooltip-text {","lastModifiedDate":"2023-03-10"},{"lineNumber":429,"author":{"gitId":"nevinlim"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-10"},{"lineNumber":430,"author":{"gitId":"nevinlim"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"nevinlim":408,"cydtseng":22}},{"path":"src/main/resources/view/DrugListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"60\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"                \u003cLabel fx:id\u003d\"tradeName\" text\u003d\"\\$tradeName\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Emrysil":26,"CShuwen":1}},{"path":"src/main/resources/view/DrugListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    \u003cListView fx:id\u003d\"drugListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"nevinlim"},"content":"    \u003cScrollPane fx:id\u003d\"drugList\" prefWidth\u003d\"300\" hvalue\u003d\"1.0\"  hbarPolicy\u003d\"NEVER\" GridPane.columnIndex\u003d\"0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"        \u003ccontent \u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"nevinlim"},"content":"            \u003cVBox maxWidth\u003d\"280\" prefWidth\u003d\"265\" prefHeight\u003d\"450\" fx:id\u003d\"detailDisplay\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedTradeName\"  wrapText\u003d\"true\" text\u003d\"Please select a drug\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedActiveIngredient\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedDirection\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedPurposes\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"  /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedSideEffects\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedStorageCount\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"nevinlim":2,"cydtseng":8,"CShuwen":19}},{"path":"src/main/resources/view/DrugPieChartPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"        \u003cLabel text\u003d\"Drug Inventory Overview\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"        \u003cPieChart fx:id\u003d\"drugPieChart\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":16}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2019-08-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"nevinlim"},"content":"    \u003cScene fx:id\u003d\"scene\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"        \u003cURL value\u003d\"@../stylesheet/HelpWindow.css\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\" fx:id\u003d\"helpMessageContainer\"\u003e","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"nevinlim"},"content":"          \u003cButton fx:id\u003d\"openButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUrl\" text\u003d\"Open URL\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"nevinlim":2,"CShuwen":1,"-":41}},{"path":"src/main/resources/view/HospitalCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"                \u003cLabel fx:id\u003d\"hospitalName\" text\u003d\"\\$hospitalName\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"                \u003cLabel fx:id\u003d\"hotline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$hotline\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":26}},{"path":"src/main/resources/view/HospitalListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    \u003cListView fx:id\u003d\"hospitalListView\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":8}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CareFlow\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    \u003cImage url\u003d\"@/images/careFlow.png\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"nevinlim"},"content":"    \u003cScene fx:id\u003d\"scene\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"        \u003cURL value\u003d\"@../stylesheet/DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"        \u003cURL value\u003d\"@../stylesheet/Extensions.css\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"nevinlim"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"nevinlim"},"content":"            \u003cMenuItem fx:id\u003d\"light\" mnemonicParsing\u003d\"false\" onAction\u003d\"#toggleLightTheme\" text\u003d\"Light Theme\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"nevinlim"},"content":"            \u003cMenuItem fx:id\u003d\"dark\" mnemonicParsing\u003d\"false\" onAction\u003d\"#toggleDarkTheme\" text\u003d\"Dark Theme\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"nevinlim"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"        \u003cStackPane fx:id\u003d\"drugPieChartPanelPlaceholder\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"        \u003cTabPane fx:id\u003d\"tabPane\" minWidth\u003d\"340\" prefWidth\u003d\"340\" tabClosingPolicy\u003d\"UNAVAILABLE\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"          \u003cTab fx:id\u003d\"patientTab\" closable\u003d\"false\" text\u003d\"Patient Records\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            \u003cStackPane fx:id\u003d\"patientListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"          \u003cTab fx:id\u003d\"drugTab\" closable\u003d\"false\" text\u003d\"Drug Inventory\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"            \u003cStackPane fx:id\u003d\"drugListPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"          \u003cTab fx:id\u003d\"hospitalTab\" closable\u003d\"false\" text\u003d\"Hospital Hotlines\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"            \u003cStackPane fx:id\u003d\"hospitalRecordPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"          \u003c/Tab\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"        \u003c/TabPane\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"nevinlim":5,"cydtseng":24,"Emrysil":1,"CShuwen":2,"-":31}},{"path":"src/main/resources/view/PatientDrugListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"  \u003cListView fx:id\u003d\"patientListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"  \u003cListView fx:id\u003d\"drugListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"Emrysil":1,"CShuwen":4,"-":4}},{"path":"src/main/resources/view/PatientListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"0\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"85\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"  \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":2,"Emrysil":1,"CShuwen":2,"-":29}},{"path":"src/main/resources/view/PatientListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" \u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"    \u003cListView fx:id\u003d\"patientListView\" HBox.hgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"nevinlim"},"content":"    \u003cScrollPane fx:id\u003d\"patientList\" prefWidth\u003d\"300\" hvalue\u003d\"1.0\"  hbarPolicy\u003d\"NEVER\" GridPane.columnIndex\u003d\"0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"        \u003ccontent \u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"nevinlim"},"content":"            \u003cVBox maxWidth\u003d\"280\" prefWidth\u003d\"265\" prefHeight\u003d\"450\" fx:id\u003d\"detailDisplay\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedName\" maxHeight\u003d\"Infinity\"  wrapText\u003d\"true\" text\u003d\"Please select a patient\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedPhone\"  maxHeight\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedAddress\" maxHeight\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"  /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedEmail\"  maxHeight\u003d\"Infinity\" wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedBirthDate\" maxHeight\u003d\"Infinity\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedGender\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"                \u003cLabel fx:id\u003d\"selectedIc\"  wrapText\u003d\"true\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"        \u003c/content\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"nevinlim":2,"cydtseng":7,"CShuwen":22}},{"path":"src/test/java/seedu/careflow/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"cydtseng":1,"-":57}},{"path":"src/test/java/seedu/careflow/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"cydtseng":1,"-":26}},{"path":"src/test/java/seedu/careflow/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":2,"-":133}},{"path":"src/test/java/seedu/careflow/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.core.index;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cydtseng":2,"-":58}},{"path":"src/test/java/seedu/careflow/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        assertNotNull(AppUtil.getImage(\"/images/careFlow.png\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"cydtseng":2,"Emrysil":1,"-":33}},{"path":"src/test/java/seedu/careflow/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"cydtseng":3,"-":105}},{"path":"src/test/java/seedu/careflow/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.Config;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cydtseng":4,"-":112}},{"path":"src/test/java/seedu/careflow/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":2,"-":21}},{"path":"src/test/java/seedu/careflow/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.commons.util;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import java.io.IOException;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.TestUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"// * Tests JSON Read and Write","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//public class JsonUtilTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//        serializableTestClass.setTestValues();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":45}},{"path":"src/test/java/seedu/careflow/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.commons.util;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"Jiayan-Lim"},"content":"    public void makeStringCaseInsensitive() {","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid input","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.makeStringCaseInsensitive(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid input","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"Jiayan-Lim"},"content":"        assertEquals(\"testing\", StringUtil.makeStringCaseInsensitive(\"TESTING\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":151,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":152,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cydtseng":2,"-":141,"Jiayan-Lim":10}},{"path":"src/test/java/seedu/careflow/logic/CareFlowLogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class CareFlowLogicManagerTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    void getPatientRecord() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"    void getDrugInventory() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    void getHospitalRecord() {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"    void getFilteredPatientList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"    void getFilteredDrugList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"    void getHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"    void getPatientRecordFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"    void getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"    void getGuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"    void setGuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":50}},{"path":"src/test/java/seedu/careflow/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//public class AddCommandIntegrationTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    private Model model;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    public void execute_newPerson_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.addPerson(validPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":45}},{"path":"src/test/java/seedu/careflow/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"//import seedu.address.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"//import seedu.address.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"//import seedu.address.testutil.PatientBuilder;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"//public class AddCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"//    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"//    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"//    }","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"////    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"////    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"////        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"////        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"////        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"////        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"////        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"////    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"////    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"////    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"////        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"////        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"////        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"////        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"////                         () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"////    }","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"//    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"//        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"//        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"//        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"//        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"//        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"//        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"//        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"//        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"CShuwen"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"//        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"//    }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"//    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"//     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"//     */","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"////    private class ModelStub implements Model {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"CShuwen"},"content":"////        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"CShuwen"},"content":"////        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"CShuwen"},"content":"////        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"CShuwen"},"content":"////        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"CShuwen"},"content":"////        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"CShuwen"},"content":"////        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"CShuwen"},"content":"////        public void addPerson(Person person) {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"CShuwen"},"content":"////        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"CShuwen"},"content":"////        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"CShuwen"},"content":"////        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"CShuwen"},"content":"////        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"CShuwen"},"content":"////        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"CShuwen"},"content":"////        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"CShuwen"},"content":"////        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"CShuwen"},"content":"////            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"CShuwen"},"content":"////    }","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"CShuwen"},"content":"//    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"CShuwen"},"content":"//     * A Model stub that contains a single person.","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"CShuwen"},"content":"//     */","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"CShuwen"},"content":"////    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"CShuwen"},"content":"////        private final Person person;","lastModifiedDate":"2023-03-12"},{"lineNumber":145,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"CShuwen"},"content":"////        ModelStubWithPerson(Person person) {","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"CShuwen"},"content":"////            requireNonNull(person);","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"CShuwen"},"content":"////            this.person \u003d person;","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"CShuwen"},"content":"////        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"CShuwen"},"content":"////            requireNonNull(person);","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"CShuwen"},"content":"////            return this.person.isSamePerson(person);","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"CShuwen"},"content":"////    }","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"CShuwen"},"content":"////    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"CShuwen"},"content":"////     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"CShuwen"},"content":"////     */","lastModifiedDate":"2023-03-12"},{"lineNumber":161,"author":{"gitId":"CShuwen"},"content":"////    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"CShuwen"},"content":"////        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":163,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":164,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"CShuwen"},"content":"////        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"CShuwen"},"content":"////            requireNonNull(person);","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"CShuwen"},"content":"////            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"CShuwen"},"content":"////        public void addPerson(Person person) {","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"CShuwen"},"content":"////            requireNonNull(person);","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"CShuwen"},"content":"////            personsAdded.add(person);","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"CShuwen"},"content":"////","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"CShuwen"},"content":"////        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"CShuwen"},"content":"////        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"CShuwen"},"content":"////            return new AddressBook();","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"CShuwen"},"content":"////        }","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"CShuwen"},"content":"////    }","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Emrysil":7,"CShuwen":174}},{"path":"src/test/java/seedu/careflow/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//public class ClearCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":32}},{"path":"src/test/java/seedu/careflow/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"cydtseng":1,"-":53}},{"path":"src/test/java/seedu/careflow/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"// * Contains helper methods for testing commands.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"//public class CommandTestUtil {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    static {","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"////    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"////            Model expectedModel) {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"////        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"////            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"////            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"////            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"////        } catch (CommandException ce) {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"////            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"////        }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"////    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"////            Model expectedModel) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"////        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"////        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        // only do so by copying its components.","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//     * {@code model}\u0027s address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"CShuwen"},"content":"//}","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Emrysil":123,"CShuwen":3}},{"path":"src/test/java/seedu/careflow/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"// * {@code DeleteCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        showNoPerson(expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Emrysil":107,"-":2}},{"path":"src/test/java/seedu/careflow/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//public class EditCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    public void execute_filteredList_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"//     * but smaller than size of address book","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"//    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"//        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"//        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"//        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"//                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"//        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"//        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"//        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"//        // different index -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"//        // different descriptor -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":173}},{"path":"src/test/java/seedu/careflow/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//public class EditPersonDescriptorTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        // different values -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":58}},{"path":"src/test/java/seedu/careflow/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//public class ExitCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void execute_exit_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":20}},{"path":"src/test/java/seedu/careflow/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//public class FindCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":83}},{"path":"src/test/java/seedu/careflow/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//public class HelpCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void execute_help_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":20}},{"path":"src/test/java/seedu/careflow/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"///**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"// * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"// */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//public class ListCommandTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    private Model model;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    private Model expectedModel;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    @BeforeEach","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//    public void setUp() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":39}},{"path":"src/test/java/seedu/careflow/logic/commands/drugcommands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class AddCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/commands/drugcommands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class ClearCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/commands/drugcommands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/commands/drugcommands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class FindCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/commands/drugcommands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class ListCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/commands/drugcommands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.drugcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class UpdateCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/commands/patientcommands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.readonly.ReadOnlyHospitalRecords;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.testutil.PatientBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"class AddCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"    public void constructor_nullPatient_throwsNullPointerException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"    public void execute_patientAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"        ModelStubAcceptingPatientAdded modelStub \u003d new ModelStubAcceptingPatientAdded();","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"        CommandResult commandResult \u003d new AddCommand(validPatient).execute(modelStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPatient), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"        assertEquals(Arrays.asList(validPatient), modelStub.patientsAdded);","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"    public void execute_duplicatePatient_throwsCommandException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"        Patient validPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"        AddCommand addCommand \u003d new AddCommand(validPatient);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"        ModelStub modelStub \u003d new ModelStubWithPatient(validPatient);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PATIENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"    public void equals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"        Patient alice \u003d new PatientBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"        Patient bob \u003d new PatientBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CShuwen"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"CShuwen"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"CShuwen"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"CShuwen"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"CShuwen"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"CShuwen"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"CShuwen"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"CShuwen"},"content":"    private class ModelStub implements CareFlowModel {","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"CShuwen"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"CShuwen"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"CShuwen"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"CShuwen"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"CShuwen"},"content":"        public Path getPatientRecordFilePath() {","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"CShuwen"},"content":"        public Path getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"CShuwen"},"content":"        public void setPatientRecordFilePath(Path patientRecordFilePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"CShuwen"},"content":"        public void setDrugInventoryFilePath(Path drugInventoryFilePath) {","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"CShuwen"},"content":"        public void setPatientRecord(ReadOnlyPatientRecord patientRecord) {","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"CShuwen"},"content":"        public void setDrugInventory(ReadOnlyDrugInventory drugInventory) {","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"CShuwen"},"content":"        public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"CShuwen"},"content":"        public ReadOnlyDrugInventory getDrugInventory() {","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"CShuwen"},"content":"        public ReadOnlyHospitalRecords getHospitalRecords() {","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"CShuwen"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"CShuwen"},"content":"        public boolean hasDrug(Drug drug) {","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"CShuwen"},"content":"        public void deletePatient(Patient target) {","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"CShuwen"},"content":"        public void deleteDrug(Drug target) {","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"CShuwen"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":172,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"CShuwen"},"content":"        public void addDrug(Drug drug) {","lastModifiedDate":"2023-03-20"},{"lineNumber":174,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"CShuwen"},"content":"        public void setPatient(Patient target, Patient editedPatient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"CShuwen"},"content":"        public void setDrug(Drug target, Drug editedDrug) {","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"CShuwen"},"content":"        public ObservableList\u003cPatient\u003e getFilteredPatientList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"CShuwen"},"content":"        public ObservableList\u003cDrug\u003e getFilteredDrugList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"CShuwen"},"content":"        public ObservableList\u003cHospital\u003e getHospitalList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"CShuwen"},"content":"        public void updateFilteredPatientList(Predicate\u003cPatient\u003e predicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"CShuwen"},"content":"        public void updateFilteredDrugList(Predicate\u003cDrug\u003e predicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"CShuwen"},"content":"     * A Model stub that contains a single patient.","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"CShuwen"},"content":"    private class ModelStubWithPatient extends ModelStub {","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"CShuwen"},"content":"        private final Patient patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"CShuwen"},"content":"        ModelStubWithPatient(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"CShuwen"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"CShuwen"},"content":"            this.patient \u003d patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"CShuwen"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"CShuwen"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"CShuwen"},"content":"            return this.patient.isSamePatient(patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":232,"author":{"gitId":"CShuwen"},"content":"     * A Model stub that always accept the patient being added.","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"CShuwen"},"content":"    private class ModelStubAcceptingPatientAdded extends ModelStub {","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"CShuwen"},"content":"        final ArrayList\u003cPatient\u003e patientsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":236,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":237,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"CShuwen"},"content":"        public boolean hasPatient(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"CShuwen"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":240,"author":{"gitId":"CShuwen"},"content":"            return patientsAdded.stream().anyMatch(patient::isSamePatient);","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"CShuwen"},"content":"        public void addPatient(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"CShuwen"},"content":"            requireNonNull(patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"CShuwen"},"content":"            patientsAdded.add(patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":248,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":249,"author":{"gitId":"CShuwen"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"CShuwen"},"content":"        public ReadOnlyPatientRecord getPatientRecord() {","lastModifiedDate":"2023-03-20"},{"lineNumber":251,"author":{"gitId":"CShuwen"},"content":"            return new PatientRecord();","lastModifiedDate":"2023-03-20"},{"lineNumber":252,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":253,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":254,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":12,"CShuwen":242}},{"path":"src/test/java/seedu/careflow/logic/commands/patientcommands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.commands.patientcommands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.TypicalDrugs.getTypicalDrugInventory;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.TypicalPatients.getTypicalPatientRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.CareFlowModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"public class ClearCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"    public void execute_emptyCareFlowPatientRecord_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"        CareFlowModel model \u003d new CareFlowModelManager();","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"        CareFlowModel expectedCareFlowModel \u003d new CareFlowModelManager();","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedCareFlowModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"        CareFlowModel model \u003d new CareFlowModelManager(getTypicalPatientRecord(), getTypicalDrugInventory(),","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"                new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"        CareFlowModel expectedCareFlowModel \u003d new CareFlowModelManager(getTypicalPatientRecord(),","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"                getTypicalDrugInventory(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"        expectedCareFlowModel.setPatientRecord(new PatientRecord());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedCareFlowModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":8,"CShuwen":26}},{"path":"src/test/java/seedu/careflow/logic/commands/patientcommands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.CommandResult;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.CareFlow;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.testutil.EditPatientDescriptorBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"public class CommandTestUtil {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"01-01-1990\";","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"02-02-1990\";","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_GENDER_AMY \u003d \"female\";","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_GENDER_BOB \u003d \"male\";","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_IC_AMY \u003d \"A7654321B\";","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_IC_BOB \u003d \"A7654321C\";","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_DRUG_ALLERGY_AMY \u003d \"penicillin\";","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_DRUG_ALLERGY_BOB \u003d \"panadol\";","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_EMERGENCY_CONTACT_AMY \u003d \"88888888\";","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"    public static final String VALID_EMERGENCY_CONTACT_BOB \u003d \"77777777\";","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CShuwen"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"    public static final String BIRTHDATE_DESC_AMY \u003d \" \" + PREFIX_DOB + VALID_BIRTHDATE_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"    public static final String BIRTHDATE_DESC_BOB \u003d \" \" + PREFIX_DOB + VALID_BIRTHDATE_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"    public static final String IC_DESC_AMY \u003d \" \" + PREFIX_IC + VALID_IC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"    public static final String IC_DESC_BOB \u003d \" \" + PREFIX_IC + VALID_IC_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"    public static final String DRUG_ALLERGY_DESC_AMY \u003d \" \" + PREFIX_DRUG_ALLERGY + VALID_DRUG_ALLERGY_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"    public static final String DRUG_ALLERGY_DESC_BOB \u003d \" \" + PREFIX_DRUG_ALLERGY + VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"CShuwen"},"content":"    public static final String EMERGENCY_CONTACT_DESC_AMY \u003d \" \" + PREFIX_EMERGENCY_CONTACT_NUMBER","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"CShuwen"},"content":"            + VALID_EMERGENCY_CONTACT_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"CShuwen"},"content":"    public static final String EMERGENCY_CONTACT_DESC_BOB \u003d \" \" + PREFIX_EMERGENCY_CONTACT_NUMBER","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"CShuwen"},"content":"            + VALID_EMERGENCY_CONTACT_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"CShuwen"},"content":"    // TODO ADD MORE CONSTRAINS HERE","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"CShuwen"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"CShuwen"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"CShuwen"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"CShuwen"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for careflowes","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"CShuwen"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CShuwen"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CShuwen"},"content":"    public static final UpdateCommand.EditPatientDescriptor DESC_AMY;","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"CShuwen"},"content":"    public static final UpdateCommand.EditPatientDescriptor DESC_BOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"CShuwen"},"content":"    static {","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"CShuwen"},"content":"        DESC_AMY \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"CShuwen"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"CShuwen"},"content":"                .withBirthDate(VALID_BIRTHDATE_AMY).withGender(VALID_GENDER_AMY).withIc(VALID_IC_AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"                .withDrugAllergy(VALID_DRUG_ALLERGY_AMY).withEmergencyContact(VALID_EMERGENCY_CONTACT_AMY)","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"CShuwen"},"content":"                .build();","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"CShuwen"},"content":"        DESC_BOB \u003d new EditPatientDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"CShuwen"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"CShuwen"},"content":"                .withBirthDate(VALID_BIRTHDATE_BOB).withGender(VALID_GENDER_BOB).withIc(VALID_IC_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"CShuwen"},"content":"                .withDrugAllergy(VALID_DRUG_ALLERGY_BOB).withEmergencyContact(VALID_EMERGENCY_CONTACT_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"CShuwen"},"content":"                .build();","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"CShuwen"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"CShuwen"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"CShuwen"},"content":"     * - the {@code actualCareFlowModel} matches {@code expectedCareFlowModel}","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"CShuwen"},"content":"    public static void assertCommandSuccess(Command command, CareFlowModel actualCareFlowModel,","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"CShuwen"},"content":"                                            CommandResult expectedCommandResult, CareFlowModel expectedCareFlowModel) {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"CShuwen"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"CShuwen"},"content":"            CommandResult result \u003d command.execute(actualCareFlowModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CShuwen"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"CShuwen"},"content":"            assertEquals(actualCareFlowModel.getDrugInventory(), expectedCareFlowModel.getDrugInventory());","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"CShuwen"},"content":"            assertEquals(actualCareFlowModel.getPatientRecord(), expectedCareFlowModel.getPatientRecord());","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"CShuwen"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"CShuwen"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"CShuwen"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, CareFlowModel, CommandResult, CareFlowModel)}","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"CShuwen"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"CShuwen"},"content":"    public static void assertCommandSuccess(Command command, CareFlowModel actualCareFlowModel, String expectedMessage,","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"CShuwen"},"content":"                                            CareFlowModel expectedCareFlowModel) {","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"CShuwen"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"CShuwen"},"content":"        assertCommandSuccess(command, actualCareFlowModel, expectedCommandResult, expectedCareFlowModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"CShuwen"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"CShuwen"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"CShuwen"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"CShuwen"},"content":"     * - the careflow book, filtered person list and selected person in {@code actualCareFlowModel} remain unchanged","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"CShuwen"},"content":"    public static void assertCommandFailure(Command command, CareFlowModel actualCareFlowModel,","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"CShuwen"},"content":"                                            String expectedMessage) {","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"CShuwen"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"CShuwen"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"CShuwen"},"content":"        CareFlow expectedCareFlow \u003d new CareFlow(actualCareFlowModel.getPatientRecord(),","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"CShuwen"},"content":"                                        actualCareFlowModel.getDrugInventory());","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"CShuwen"},"content":"        List\u003cPatient\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualCareFlowModel.getFilteredPatientList());","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"CShuwen"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualCareFlowModel));","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"CShuwen"},"content":"        // made some amendment to comparing expectedCareflow and actualCareFlowModel","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"CShuwen"},"content":"        assertEquals(expectedCareFlow.getPatientRecord(), actualCareFlowModel.getPatientRecord());","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"CShuwen"},"content":"        assertEquals(expectedCareFlow.getDrugInventory(), actualCareFlowModel.getDrugInventory());","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"CShuwen"},"content":"        assertEquals(expectedCareFlow.getHospitalRecords(), actualCareFlowModel.getHospitalRecords());","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"CShuwen"},"content":"        assertEquals(expectedFilteredList, actualCareFlowModel.getFilteredPatientList());","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"CShuwen"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"CShuwen"},"content":"     * {@code model}\u0027s careflow book.","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"CShuwen"},"content":"    public static void showPatientAtIndex(CareFlowModel model, Index targetIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"CShuwen"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"CShuwen"},"content":"        Patient person \u003d model.getFilteredPatientList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"CShuwen"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"CShuwen"},"content":"        model.updateFilteredPatientList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"CShuwen"},"content":"        assertEquals(1, model.getFilteredPatientList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"CShuwen"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CShuwen":163}},{"path":"src/test/java/seedu/careflow/logic/commands/patientcommands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":14}},{"path":"src/test/java/seedu/careflow/logic/commands/patientcommands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class FindCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":14}},{"path":"src/test/java/seedu/careflow/logic/commands/patientcommands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class ListCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/commands/patientcommands/UpdateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.commands.patientcommands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class UpdateCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":14}},{"path":"src/test/java/seedu/careflow/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//public class AddCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // whitespace only preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        // multiple names - last name accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        // multiple phones - last phone accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        // multiple emails - last email accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        // multiple addresses - last address accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        // multiple tags - all accepted","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        // zero tags","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//                new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//        // missing name prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        // missing phone prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        // missing email prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//        // missing address prefix","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        // all prefixes missing","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//                expectedMessage);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//        // invalid name","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        // invalid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//        // invalid email","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        // invalid address","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//        // invalid tag","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//        // two invalid values, only first invalid value reported","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"//        // non-empty preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"//                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"//                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":141}},{"path":"src/test/java/seedu/careflow/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//public class AddressBookParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_add() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_find() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_help() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_list() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"CShuwen"},"content":"//        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"CShuwen"},"content":"//        HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":100,"CShuwen":2}},{"path":"src/test/java/seedu/careflow/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"cydtseng":1,"-":149}},{"path":"src/test/java/seedu/careflow/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"            throw new IllegalArgumentException(\"Invalid user input.\", pe);","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"cydtseng":4,"-":35}},{"path":"src/test/java/seedu/careflow/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.patientparser.DeleteCommandParser;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"cydtseng":7,"-":26}},{"path":"src/test/java/seedu/careflow/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//public class EditCommandParserTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        // no index specified","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        // no field specified","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        // no index and no field specified","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        // negative index","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        // zero index","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        // invalid arguments being parsed as preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        // invalid prefix being parsed as preamble","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        // invalid phone followed by valid email","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        // parsing it together with a valid tag results in error","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"//    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"//        // name","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"//        // phone","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"//        // email","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"//        // address","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"//        // tags","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"//    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"//                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"//                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"CShuwen"},"content":"//                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND,","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"CShuwen"},"content":"//                      VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"//    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"//        // no other valid values specified","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"//        // other valid values specified","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"Emrysil"},"content":"//        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"//                + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"//        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"Emrysil"},"content":"//                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"//        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"//    public void parse_resetTags_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"Emrysil"},"content":"//        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"Emrysil"},"content":"//        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"Emrysil"},"content":"//        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"Emrysil"},"content":"//        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"Emrysil"},"content":"//        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":210,"CShuwen":2}},{"path":"src/test/java/seedu/careflow/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"//package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"//import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"//import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"//public class FindCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"//    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"//    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"//    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"//        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"//    }","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"//    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"//    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"//        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"//        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"//                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"//        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"//        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"//        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"//    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"//}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"CShuwen":33}},{"path":"src/test/java/seedu/careflow/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"cydtseng":10,"-":186}},{"path":"src/test/java/seedu/careflow/logic/parser/drugparser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class AddCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/parser/drugparser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class DeleteCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/parser/drugparser/DrugParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class DrugParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/parser/drugparser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class FindCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/parser/drugparser/UpdateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.drugparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class UpdateCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/parser/patientparser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.testutil.PatientBuilder;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"class AddCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"    private final AddCommandParser addCommandParser \u003d new AddCommandParser();","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"        Patient expectedPatient \u003d new PatientBuilder().build();","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"        AddCommand addPatientCommand \u003d new AddCommand(expectedPatient);","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"        assertParseSuccess(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph 85355255 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 -dob 01-01-1990 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"                        + \"-g female -ic A7654321B -da penicillin -ec 88888888\",","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"                addPatientCommand);","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"    void parse_invalidPhone_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph abc123 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 -dob 01-01-1990 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"                        + \"-g female -ic A7654321B -da penicillin -ec 88888888\",","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"                \"Phone numbers should only contain numbers, \"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"                        + \"and it should be at least 3 digits long.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"    void parse_invalidGender_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph 85355255 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 -dob 01-01-1990 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"                        + \"-g abc -ic A7654321B -da penicillin -ec 88888888\",","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"                \"Gender should only be either female or male, \"","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"                        + \"it should not be blank\");","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"    void parse_invalidEmergencyContact_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph 85355255 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 -dob 01-01-1990 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"                        + \"-g female -ic A7654321B -da penicillin -ec abc\",","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"                \"Phone numbers should only contain numbers, \"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"                        + \"and it should be at least 3 digits long.\");","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"    void parse_missingDobField_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph 85355255 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"                        + \"-g female -ic A7654321B -da penicillin -ec 88888888\",","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"                \"Invalid command format! \\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"                        + \"add: Adds a patient to patient records.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"                        + \"Parameters: -n NAME -ph PHONE -em EMAIL \"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad ADDRESS -dob DOB -g GENDER -ic IC -da DRUG_ALLERGY \"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"                        + \"-ec EMERGENCY_CONTACT_NUMBER\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"                        + \"Example: add -n Tom Smith -ph 84356788 -em tsmith@gmail.com \"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 969 Lock Street #04-32 -dob 2001-05-28 -g MALE -ic T0278234M \"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"                        + \"-da Aspirin -ec 93746552\");","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"    void parse_missingGender_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph 85355255 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 -dob 01-01-1990 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"                        + \" -ic A7654321B -da penicillin -ec 88888888\",","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"                \"Invalid command format! \\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"                        + \"add: Adds a patient to patient records.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"                        + \"Parameters: -n NAME -ph PHONE -em EMAIL \"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad ADDRESS -dob DOB -g GENDER -ic IC -da DRUG_ALLERGY \"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"                        + \"-ec EMERGENCY_CONTACT_NUMBER\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"                        + \"Example: add -n Tom Smith -ph 84356788 -em tsmith@gmail.com \"","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 969 Lock Street #04-32 -dob 2001-05-28 -g MALE -ic T0278234M \"","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"                        + \"-da Aspirin -ec 93746552\"","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"    void parse_missingDrugAllergy_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph 85355255 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 -dob 01-01-1990 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"                        + \"-g female -ic A7654321B -ec 88888888\",","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"                \"Invalid command format! \\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"                        + \"add: Adds a patient to patient records.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"                        + \"Parameters: -n NAME -ph PHONE -em EMAIL \"","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad ADDRESS -dob DOB -g GENDER -ic IC -da DRUG_ALLERGY \"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"                        + \"-ec EMERGENCY_CONTACT_NUMBER\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"                        + \"Example: add -n Tom Smith -ph 84356788 -em tsmith@gmail.com \"","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 969 Lock Street #04-32 -dob 2001-05-28 -g MALE -ic T0278234M \"","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"                        + \"-da Aspirin -ec 93746552\"","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"    void parse_missingEmergencyContact_failure() {","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(addCommandParser,","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"cydtseng"},"content":"                \" -n Amy Bee -ph 85355255 -em amy@gmail.com \"","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 123, Jurong West Ave 6, #08-111 -dob 01-01-1990 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"cydtseng"},"content":"                        + \"-g female -ic A7654321B -da penicillin\",","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"                \"Invalid command format! \\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"cydtseng"},"content":"                        + \"add: Adds a patient to patient records.\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"cydtseng"},"content":"                        + \"Parameters: -n NAME -ph PHONE -em EMAIL \"","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad ADDRESS -dob DOB -g GENDER -ic IC -da DRUG_ALLERGY \"","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"cydtseng"},"content":"                        + \"-ec EMERGENCY_CONTACT_NUMBER\\n\"","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"cydtseng"},"content":"                        + \"Example: add -n Tom Smith -ph 84356788 -em tsmith@gmail.com \"","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"cydtseng"},"content":"                        + \"-ad 969 Lock Street #04-32 -dob 2001-05-28 -g MALE -ic T0278234M \"","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"cydtseng"},"content":"                        + \"-da Aspirin -ec 93746552\"","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"cydtseng"},"content":"        );","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":123}},{"path":"src/test/java/seedu/careflow/logic/parser/patientparser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.logic.commands.patientcommands.DeleteCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"class DeleteCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"    private final DeleteCommandParser deleteCommandParser \u003d new DeleteCommandParser();","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    public void parse_validIndex_returnsDeleteCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"        assertParseSuccess(deleteCommandParser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"    public void parse_invalidNonNumericalIndex_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(deleteCommandParser, \"a\",","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"    public void parse_validIc_returnsDeleteCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"        Ic ic \u003d new Ic(\"A7654321B\");","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"        assertParseSuccess(deleteCommandParser, \" -ic A7654321B\", new DeleteCommand(ic));","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    public void parse_invalidNumberAsIc_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(deleteCommandParser, \" -ic 123\",","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"    @Test public void parse_invalidLengthIc_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        assertParseFailure(deleteCommandParser, \" -ic A7654321BB\",","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":48}},{"path":"src/test/java/seedu/careflow/logic/parser/patientparser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class FindCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/parser/patientparser/PatientParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class PatientParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/logic/parser/patientparser/UpdateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.logic.parser.patientparser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class UpdateCommandParserTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void parse() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":10}},{"path":"src/test/java/seedu/careflow/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collection;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//public class AddressBookTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        addressBook.resetData(newData);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(newData, addressBook);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        // Two persons with the same identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//     */","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//            this.persons.setAll(persons);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//            return persons;","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":102}},{"path":"src/test/java/seedu/careflow/model/CareFlowModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"class CareFlowModelManagerTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"    void setUserPrefs() {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":"    void getUserPrefs() {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"    void getGuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"    void setGuiSettings() {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"    void getPatientRecordFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"cydtseng"},"content":"    void setPatientRecordFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"    void getDrugInventoryFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"cydtseng"},"content":"    void setDrugInventoryFilePath() {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"    void setPatientRecord() {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"    void setDrugInventory() {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"    void getPatientRecord() {","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"    void getDrugInventory() {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"    void getHospitalRecords() {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"    void hasPatient() {","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"    void hasDrug() {","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"    void deletePatient() {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"    void deleteDrug() {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"    void addPatient() {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"    void addDrug() {","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"cydtseng"},"content":"    void setPatient() {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"cydtseng"},"content":"    void setDrug() {","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"cydtseng"},"content":"    void getFilteredPatientList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"cydtseng"},"content":"    void getFilteredDrugList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"cydtseng"},"content":"    void updateFilteredPatientList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"    void updateFilteredDrugList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"cydtseng"},"content":"    void setFixedHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"cydtseng"},"content":"    void getHospitalList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":114}},{"path":"src/test/java/seedu/careflow/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Path;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import java.nio.file.Paths;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//public class ModelManagerTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//    public void constructor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        modelManager.addPerson(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"//        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"//        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"//        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"//        // different addressBook -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"//        // different filteredList -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"//        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"//        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"//        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"//        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"//        // different userPrefs -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"//        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":132}},{"path":"src/test/java/seedu/careflow/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//public class UserPrefsTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/test/java/seedu/careflow/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"//package seedu.careflow.model.person;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"//import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"//public class AddressTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"//    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"//    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"//    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"//        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"//        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"//    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"//    public void isValidAddress() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"//        // null address","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"//        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"//        // invalid addresses","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"//        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"//        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"//","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"//        // valid addresses","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"//        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"//        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"//        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"//    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"//}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"CShuwen":36}},{"path":"src/test/java/seedu/careflow/model/person/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDate));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidBirthDate() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null address","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfBirth.isValidBirthDate(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // empty string date","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // future date can\u0027t be birth date","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/2023\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.2023\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-2023\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-23\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        // year before 1900 shouldn\u0027t be birth date","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13/11/1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13.11.1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-11-1800\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid date format","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"32-01-2022\")); // invalid day","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DateOfBirth.isValidBirthDate(\"13-13-2022\")); // invalid month","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid date of birth","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13/11/2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13.11.2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13-11-2022\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13/11/22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13.11.22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DateOfBirth.isValidBirthDate(\"13-11-22\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":2,"Jiayan-Lim":53}},{"path":"src/test/java/seedu/careflow/model/person/DrugAllergyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class DrugAllergyTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DrugAllergy(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidDrugAllergy_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidDrugAllergy \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DrugAllergy(invalidDrugAllergy));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e DrugAllergy.isValidDrugAllergy(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"        // assertFalse(DrugAllergy.isValidDrugAllergy(\"With empty blank\"));// no longer true","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"WithSpecialCharacter[\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid drug allergy description","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"Penicillin\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"peanuts\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":2,"CShuwen":1,"Jiayan-Lim":35}},{"path":"src/test/java/seedu/careflow/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cydtseng":2,"-":66}},{"path":"src/test/java/seedu/careflow/model/person/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class GenderTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidGender \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank description","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid gender","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"fm\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Gender.isValidGender(\"no idea\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid gender","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"f\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"feMale\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"M\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Gender.isValidGender(\"Male\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":2,"Jiayan-Lim":38}},{"path":"src/test/java/seedu/careflow/model/person/IcTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"public class IcTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Ic(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Jiayan-Lim"},"content":"        String invalidIc \u003d \"\";","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Ic(invalidIc));","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public void isValidDrugAllergy() {","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"        // null","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Ic.isValidIc(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Jiayan-Lim"},"content":"        // blank description","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"\")); // empty string","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\" \")); // spaces only","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Jiayan-Lim"},"content":"        // invalid ic","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a\")); // length of ic is not 9","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123x\")); // length of ic is not 9","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a12345678\")); // ic is not end with character","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123456bb\")); // ic format is invalid","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123t567b\")); // ic format is invalid","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"        assertFalse(Ic.isValidIc(\"a123456*b\")); // special character show up","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Jiayan-Lim"},"content":"        // valid ic","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"a1234567b\")); // case insensitive","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"A1234567B\")); // case insensitive","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"a1234567z\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"Jiayan-Lim"},"content":"        assertTrue(Ic.isValidIc(\"A7654321Z\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":2,"Jiayan-Lim":42}},{"path":"src/test/java/seedu/careflow/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"//        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"//                                                                     firstPredicateKeywordList);","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        // One keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"//        .singletonList(\"Alice\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//        // Multiple keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//        // Only one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        // Mixed-case keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        // Zero keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":73,"CShuwen":4}},{"path":"src/test/java/seedu/careflow/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cydtseng":2,"-":38}},{"path":"src/test/java/seedu/careflow/model/person/PatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Jiayan-Lim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Jiayan-Lim"},"content":"public class PatientTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Jiayan-Lim"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Jiayan-Lim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Jiayan-Lim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Patient(null, null, null, null, null, null, null));","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Jiayan-Lim"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"Jiayan-Lim"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"cydtseng":2,"Jiayan-Lim":12}},{"path":"src/test/java/seedu/careflow/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//public class PersonTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"//    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Person(null, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Person(null, null, null, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e new Person(null, null, null, null, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"//    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"//        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"//    public void isSamePerson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"//        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"//                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"//        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"//        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"//        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"//        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"//        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"//        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"//    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"//        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"//        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"//        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"//        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"//        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"//        // different type -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"//        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"//        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"//        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"//        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"//        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"//        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"//        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"//        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"//        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":98}},{"path":"src/test/java/seedu/careflow/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cydtseng":2,"-":38}},{"path":"src/test/java/seedu/careflow/model/person/UniquePatientListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"//package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"//import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"//import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"//public class UniquePatientListTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"//    private final UniquePatientList uniquePersonList \u003d new UniquePatientList();","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"//    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"//    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"//        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"//    }","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"////    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"////        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"//","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"////    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"////        uniquePatientList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"////        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"////    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"////        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"////                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"////        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"////    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"////    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"////        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"////                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"////    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"////    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"////    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"////    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.remove(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"////        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"////        uniquePersonList.setPersons(personList);","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"////        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"////        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"////        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"////    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"////        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"////","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"////    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"////    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"////        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"////            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"////    }","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"//}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Emrysil":159}},{"path":"src/test/java/seedu/careflow/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.model.tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"cydtseng":2,"-":24}},{"path":"src/test/java/seedu/careflow/storage/CareFlowStorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.TypicalDrugs.getTypicalDrugInventory;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.TypicalPatients.getTypicalPatientRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"class CareFlowStorageManagerTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    @TempDir","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private CareFlowStorageManager storageManager;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        JsonPatientRecordStorage patientRecordStorage \u003d new JsonPatientRecordStorage(getTempFilePath(\"pr\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        JsonDrugInventoryStorage drugInventoryStorage \u003d new JsonDrugInventoryStorage(getTempFilePath(\"di\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        storageManager \u003d new CareFlowStorageManager(patientRecordStorage, drugInventoryStorage, userPrefsStorage);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        /*","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"         */","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, \"DARK\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    public void patientRecordReadSave() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        /*","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"         * Note: This is an integration test that verifies the CareFlowStorageManager is properly wired to the","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"         * {@link JsonPatientRecordStorage} class.","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"         * More extensive testing of PatientRecord saving/reading is done in {@link JsonPatientRecordStorageTest} class.","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"         */","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        PatientRecord original \u003d getTypicalPatientRecord();","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        storageManager.savePatientRecord(original);","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyPatientRecord retrieved \u003d storageManager.readPatientRecord().get();","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new PatientRecord(retrieved));","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    public void drugInventoryReadSave() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        /*","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"         * Note: This is an integration test that verifies the CareFlowStorageManager is properly wired to the","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"         * {@link JsonDrugInventoryStorage} class.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"         * More extensive testing of DrugInventory saving/reading is done in {@link JsonDrugInventoryStorageTest} class.","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"         */","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        DrugInventory original \u003d getTypicalDrugInventory();","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        storageManager.saveDrugInventory(original);","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyDrugInventory retrieved \u003d storageManager.readDrugInventory().get();","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new DrugInventory(retrieved));","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"cydtseng"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"cydtseng":20,"Emrysil":51,"CShuwen":7}},{"path":"src/test/java/seedu/careflow/storage/JsonAdaptedDrugTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.storage.JsonAdaptedDrug.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.Direction;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.Purpose;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.SideEffect;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.StorageCount;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"public class JsonAdaptedDrugTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_TRADE_NAME \u003d \"$$\";","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_ACTIVE_INGREDIENT \u003d \"-\";","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_DIRECTION \u003d \"%_%\";","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_PURPOSE \u003d \";\";","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_SIDE_EFFECT \u003d \"[]\";","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_STORAGE_COUNT \u003d \"-10\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private static final Drug SAMPLE_DRUG \u003d SampleDataUtil.getSampleDrugs()[0];","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_TRADE_NAME \u003d SAMPLE_DRUG.getTradeName().tradeName;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_ACTIVE_INGREDIENT \u003d SAMPLE_DRUG.getActiveIngredient().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_DIRECTION \u003d SAMPLE_DRUG.getDirection().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_PURPOSE \u003d SAMPLE_DRUG.getPurposes().purpose;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_SIDE_EFFECT \u003d SAMPLE_DRUG.getSideEffects().sideEffect;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_STORAGE_COUNT \u003d SAMPLE_DRUG.getStorageCount().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_validDrugDetails_returnsDrug() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(SAMPLE_DRUG);","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        assertEquals(SAMPLE_DRUG, drug.toModelType());","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidTradeName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(INVALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d TradeName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullTradeName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(null, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, TradeName.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidActiveIngredient_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, INVALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d ActiveIngredient.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullActiveIngredient_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, null, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ActiveIngredient.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidDirection_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, INVALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Direction.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullDirection_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, null,","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Direction.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidPurpose_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"                INVALID_PURPOSE, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Purpose.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullPurpose_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"                null, VALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Purpose.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidSideEffect_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, INVALID_SIDE_EFFECT, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d SideEffect.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullSideEffect_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, null, VALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, SideEffect.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidStorageCount_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, INVALID_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d StorageCount.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullStorageCount_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedDrug drug \u003d new JsonAdaptedDrug(VALID_TRADE_NAME, VALID_ACTIVE_INGREDIENT, VALID_DIRECTION,","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"                VALID_PURPOSE, VALID_SIDE_EFFECT, null);","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StorageCount.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, drug::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":1,"Emrysil":137}},{"path":"src/test/java/seedu/careflow/storage/JsonAdaptedPatientTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.storage.JsonAdaptedPatient.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.testutil.PatientBuilder;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"class JsonAdaptedPatientTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_DOB \u003d \"99-01-1999\";","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_GENDER \u003d \"LOL\";","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_IC \u003d \"Taaaaaaaa\";","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_DRUG_ALLERGY \u003d \"()\";","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    private static final String INVALID_EMERGENCY_CONTACT \u003d \"@11\";","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    private static final Patient SAMPLE_PATIENT \u003d SampleDataUtil.getSamplePatients()[0];","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_NAME \u003d SAMPLE_PATIENT.getName().fullName;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_PHONE \u003d SAMPLE_PATIENT.getPhone().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_EMAIL \u003d SAMPLE_PATIENT.getEmail().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_ADDRESS \u003d SAMPLE_PATIENT.getAddress().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_DOB \u003d SAMPLE_PATIENT.getBirthDate().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_GENDER \u003d SAMPLE_PATIENT.getGender().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_IC \u003d SAMPLE_PATIENT.getIc().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_DRUG_ALLERGY \u003d SAMPLE_PATIENT.getDrugAllergy().toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    private static final String VALID_EMERGENCY_CONTACT \u003d SAMPLE_PATIENT.getEmergencyContact().value;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d new JsonAdaptedPatient(SAMPLE_PATIENT);","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        assertEquals(SAMPLE_PATIENT, patient.toModelType());","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"cydtseng"},"content":"    public void toModelType_invalidDob_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, INVALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d DateOfBirth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"cydtseng"},"content":"    public void toModelType_nullDob_throwsIllegalValueException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, null, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateOfBirth.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB,","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"                        INVALID_GENDER, VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullGender_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, null,","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidIC_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"cydtseng"},"content":"                        INVALID_IC, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Ic.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullIC_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"cydtseng"},"content":"                        null, VALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Ic.class.getSimpleName());","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidDrugAllergy_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, INVALID_DRUG_ALLERGY, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d DrugAllergy.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullDrugAllergy_noException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, null, VALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"            assertTrue((new PatientBuilder(patient.toModelType()).build())","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"CShuwen"},"content":"                    .isSamePatient(new PatientBuilder(SAMPLE_PATIENT).withDrugAllergy(null).build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"            fail();","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidEmergencyContact_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, INVALID_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"Emrysil"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, patient::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":211,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":212,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_nullEmergencyContact_throwsIllegalValueException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":215,"author":{"gitId":"Emrysil"},"content":"        JsonAdaptedPatient patient \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":216,"author":{"gitId":"cydtseng"},"content":"                new JsonAdaptedPatient(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DOB, VALID_GENDER,","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"cydtseng"},"content":"                        VALID_IC, VALID_DRUG_ALLERGY, null);","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":219,"author":{"gitId":"Emrysil"},"content":"            assertTrue((new PatientBuilder(patient.toModelType()).build())","lastModifiedDate":"2023-03-19"},{"lineNumber":220,"author":{"gitId":"CShuwen"},"content":"                    .isSamePatient(new PatientBuilder(SAMPLE_PATIENT).withEmergencyContact(null).build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"Emrysil"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":222,"author":{"gitId":"Emrysil"},"content":"            fail();","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"cydtseng":39,"Emrysil":183,"CShuwen":3}},{"path":"src/test/java/seedu/careflow/storage/JsonDrugInventoryStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalDrugs.ACYCLOVIR;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalDrugs.IBUPROFEN;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalDrugs.IMODIUM;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalDrugs.getTypicalDrugInventory;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.readonly.ReadOnlyDrugInventory;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"class JsonDrugInventoryStorageTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonDrugInventoryStorageTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @TempDir","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public void readDrugInventory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDrugInventory(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    private Optional\u003cReadOnlyDrugInventory\u003e readDrugInventory(String filePath) throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"        return new JsonDrugInventoryStorage(","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"                Paths.get(filePath)).readDrugInventory(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                : null;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        assertFalse(readDrugInventory(\"abc.json\").isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public void read_notJsonFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"                readDrugInventory(\"notJsonFormatDrugInventory.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    public void read_invalidDrugDrugInventory_throwDataConversionException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"                -\u003e readDrugInventory(\"invalidDrugDrugInventory.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    public void read_invalidAndValidDrugDrugInventory_throwDataConversionException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"cydtseng"},"content":"                -\u003e readDrugInventory(\"invalidAndValidDrugDrugInventory.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"    public void read_extraFieldDrugDrugInventory_extraIgnored() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyDrugInventory\u003e actual \u003d readDrugInventory(\"extraFieldDrugDrugInventory.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        Optional\u003cReadOnlyDrugInventory\u003e expected \u003d readDrugInventory(\"validDrugDrugInventory.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        assertEquals(actual, expected);","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    public void read_missingFieldDrugDrugInventory_throwDataConversionException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"cydtseng"},"content":"                -\u003e readDrugInventory(\"missingFieldDrugDrugInventory.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    public void read_nullFieldDrugDrugInventory_throwDataConversionException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"                -\u003e readDrugInventory(\"nullFieldDrugDrugInventory.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    public void readAndSaveDrugInventory_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDrugInventory.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        DrugInventory original \u003d getTypicalDrugInventory();","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        JsonDrugInventoryStorage jsonDrugInventoryStorage \u003d new JsonDrugInventoryStorage(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        // save in and read back","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        jsonDrugInventoryStorage.saveDrugInventory(original, filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyDrugInventory readBack \u003d jsonDrugInventoryStorage.readDrugInventory(filePath).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new DrugInventory(readBack));","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"        original.addDrug(ACYCLOVIR);","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        original.removeDrug(IMODIUM);","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"        jsonDrugInventoryStorage.saveDrugInventory(original, filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        readBack \u003d jsonDrugInventoryStorage.readDrugInventory(filePath).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new DrugInventory(readBack));","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        // save and read without specifying file path","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"        original.addDrug(IBUPROFEN);","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        jsonDrugInventoryStorage.saveDrugInventory(original);","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        readBack \u003d jsonDrugInventoryStorage.readDrugInventory().get();","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new DrugInventory(readBack));","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory_nullDrugInventory_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"cydtseng"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"cydtseng"},"content":"                -\u003e saveDrugInventory(null, \"someFile.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"    private void saveDrugInventory(ReadOnlyDrugInventory drugInventory, String filePath) throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"            new JsonDrugInventoryStorage(Paths.get(filePath)).saveDrugInventory(drugInventory,","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"                    addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"    public void saveDrugInventory_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"cydtseng"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"cydtseng"},"content":"                -\u003e saveDrugInventory(new DrugInventory(), null));","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":22,"Emrysil":109,"CShuwen":3}},{"path":"src/test/java/seedu/careflow/storage/JsonPatientRecordStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalPatients.ALICE;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalPatients.HOON;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalPatients.IDA;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.TypicalPatients.getTypicalPatientRecord;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.readonly.ReadOnlyPatientRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"class JsonPatientRecordStorageTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"            \"JsonPatientRecordStorageTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @TempDir","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public void readPatientRecord_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        assertThrows(NullPointerException.class, () -\u003e readPatientRecord(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    private java.util.Optional\u003cReadOnlyPatientRecord\u003e readPatientRecord(String filePath) throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"        return new JsonPatientRecordStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"                .readPatientRecord(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                : null;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        assertFalse(readPatientRecord(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"                -\u003e readPatientRecord(\"notJsonFormatPatientRecord.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    public void readPatientRecord_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"                -\u003e readPatientRecord(\"invalidPatientPatientRecord.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    public void readPatientRecord_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"                -\u003e readPatientRecord(\"invalidAndValidPatientPatientRecord\"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"                + \".json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    public void readAndSavePatientRecord_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        Path filePath \u003d testFolder.resolve(\"TempPatientRecord.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        PatientRecord original \u003d getTypicalPatientRecord();","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        JsonPatientRecordStorage jsonPatientRecordStorage \u003d new JsonPatientRecordStorage(filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        jsonPatientRecordStorage.savePatientRecord(original, filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        ReadOnlyPatientRecord readBack \u003d jsonPatientRecordStorage.readPatientRecord(filePath).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new PatientRecord(readBack));","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        original.addPatient(HOON);","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        original.removePatient(ALICE);","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        jsonPatientRecordStorage.savePatientRecord(original, filePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        readBack \u003d jsonPatientRecordStorage.readPatientRecord(filePath).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new PatientRecord(readBack));","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        original.addPatient(IDA);","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        jsonPatientRecordStorage.savePatientRecord(original); // file path not specified","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        readBack \u003d jsonPatientRecordStorage.readPatientRecord().get(); // file path not specified","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        assertEquals(original, new PatientRecord(readBack));","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord_nullPatientRecord_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"cydtseng"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"cydtseng"},"content":"                -\u003e savePatientRecord(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    private void savePatientRecord(ReadOnlyPatientRecord patientRecord, String filePath) {","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"            new JsonPatientRecordStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"                    .savePatientRecord(patientRecord, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"    public void savePatientRecord_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"        assertThrows(NullPointerException.class, () -\u003e savePatientRecord(new PatientRecord(), null));","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":9,"Emrysil":84,"CShuwen":15}},{"path":"src/test/java/seedu/careflow/storage/JsonSerializableDrugInventoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.util.JsonUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.testutil.TypicalDrugs;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"class JsonSerializableDrugInventoryTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDrugInventoryTest\");","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    private static final Path TYPICAL_DRUGS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalDrugsDrugInventory.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private static final Path INVALID_DRUG_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidDrugDrugInventory.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private static final Path DUPLICATE_DRUG_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateDrugDrugInventory.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_typicalDrugsFile_success() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        JsonSerializableDrugInventory dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DRUGS_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"                JsonSerializableDrugInventory.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        DrugInventory drugInventoryFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        DrugInventory typicalDrugsDrugInventory \u003d TypicalDrugs.getTypicalDrugInventory();","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        assertEquals(drugInventoryFromFile, typicalDrugsDrugInventory);","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidDrugFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        JsonSerializableDrugInventory dataFromFile \u003d JsonUtil.readJsonFile(INVALID_DRUG_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                JsonSerializableDrugInventory.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_duplicateDrugs_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        JsonSerializableDrugInventory dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_DRUG_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                JsonSerializableDrugInventory.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDrugInventory.MESSAGE_DUPLICATE_DRUG,","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":1,"Emrysil":40,"CShuwen":7}},{"path":"src/test/java/seedu/careflow/storage/JsonSerializablePatientRecordTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.util.JsonUtil;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.testutil.TypicalPatients;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"class JsonSerializablePatientRecordTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializablePatientRecordTest\");","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private static final Path TYPICAL_PATIENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPatientsPatientRecord.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private static final Path INVALID_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPatientPatientRecord.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private static final Path DUPLICATE_PATIENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePatientPatientRecord.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_typicalPatientFile_success() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        JsonSerializablePatientRecord dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PATIENTS_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"                JsonSerializablePatientRecord.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        PatientRecord patientRecordFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        PatientRecord typicalPatientsPatientRecord \u003d TypicalPatients.getTypicalPatientRecord();","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        assertEquals(patientRecordFromFile, typicalPatientsPatientRecord);","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_invalidPatientFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        JsonSerializablePatientRecord dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PATIENT_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"                JsonSerializablePatientRecord.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public void toModelType_duplicatePatients_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        JsonSerializablePatientRecord dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PATIENT_FILE,","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                JsonSerializablePatientRecord.class).get();","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalValueException.class, JsonSerializablePatientRecord.MESSAGE_DUPLICATE_PATIENT,","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Emrysil":36,"CShuwen":7}},{"path":"src/test/java/seedu/careflow/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.storage;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.core.GuiSettings;","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.UserPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"            \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"cydtseng"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"                -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"cydtseng"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500,","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"cydtseng"},"content":"                300, 100, \"DARK\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setPatientRecordFilePath(Paths.get(\"patientRecord.json\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        userPrefs.setDrugInventoryFilePath(Paths.get(\"drugInventory.json\"));","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"cydtseng"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null,","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"cydtseng"},"content":"                \"SomeFile.json\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"cydtseng"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0,","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"cydtseng"},"content":"                2, \"DARK\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"cydtseng"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5,","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"cydtseng"},"content":"                5, \"DARK\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":12,"Emrysil":7,"-":110}},{"path":"src/test/java/seedu/careflow/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"cydtseng":1,"-":33}},{"path":"src/test/java/seedu/careflow/testutil/DrugBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.ActiveIngredient;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.Direction;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.Purpose;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.SideEffect;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.StorageCount;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.TradeName;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":" * A utility class to help with building Drug objects.","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":" *     {@code Drug ab \u003d new DrugBuilder().withTradeName(\"Panadol\").build();}","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public class DrugBuilder {","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static final String DEFAULT_TRADE_NAME \u003d \"Tylenol\";","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public static final String DEFAULT_ACTIVE_INGREDIENT \u003d \"Acetaminophen\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"    public static final String DEFAULT_DIRECTION \u003d \"The usual recommended dose of Tylenol for adults is 325 to \"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"            + \"1000 mg taken every 4 to 6 hours, up to a maximum of 4000 mg per day. Dosage should be adjusted \"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"cydtseng"},"content":"            + \"based on age, weight, and other medical conditions. \";","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"    public static final String DEFAULT_PURPOSE \u003d \"Tylenol is a pain reliever and fever reducer that is \"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"            + \"used to treat mild to moderate pain, such as headaches, toothaches, menstrual cramps, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"            + \"back pain, and arthritis.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"    public static final String DEFAULT_SIDE_EFFECT \u003d \"Common side effects of Tylenol may include nausea, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"            + \"vomiting, stomach pain, and constipation. Less common side effects may include rash, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"cydtseng"},"content":"            + \"itching, and hives. \";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public static final String DEFAULT_STORAGE_COUNT \u003d \"20\";","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    private TradeName tradeName;","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    private ActiveIngredient activeIngredient;","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    private Direction direction;","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    private Purpose purpose;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    private SideEffect sideEffect;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    private StorageCount storageCount;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     * Creates a {@code DrugBuilder} with the default details.","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder() {","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        tradeName \u003d new TradeName(DEFAULT_TRADE_NAME);","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        activeIngredient \u003d new ActiveIngredient(DEFAULT_ACTIVE_INGREDIENT);","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        direction \u003d new Direction(DEFAULT_DIRECTION);","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        purpose \u003d new Purpose(DEFAULT_PURPOSE);","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        sideEffect \u003d new SideEffect(DEFAULT_SIDE_EFFECT);","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        storageCount \u003d new StorageCount(DEFAULT_STORAGE_COUNT);","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     * Initializes the DrugBuilder with the data of {@code drugToCopy}.","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder(Drug drugToCopy) {","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        tradeName \u003d drugToCopy.getTradeName();","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        activeIngredient \u003d drugToCopy.getActiveIngredient();","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        direction \u003d drugToCopy.getDirection();","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        purpose \u003d drugToCopy.getPurposes();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        sideEffect \u003d drugToCopy.getSideEffects();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        storageCount \u003d drugToCopy.getStorageCount();","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code TradeName} of the {@code Drug} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder withTradeName(String tradeName) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        this.tradeName \u003d new TradeName(tradeName);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code ActiveIngredient} of the {@code Drug} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder withActiveIngredient(String activeIngredient) {","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"        this.activeIngredient \u003d new ActiveIngredient(activeIngredient);","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Direction} of the {@code Drug} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder withDirection(String direction) {","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        this.direction \u003d new Direction(direction);","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Purpose} of the {@code Drug} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder withPurpose(String purpose) {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        this.purpose \u003d new Purpose(purpose);","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code SideEffect} of the {@code Drug} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder withSideEffect(String sideEffect) {","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        this.sideEffect \u003d new SideEffect(sideEffect);","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code StorageCount} of the {@code Drug} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    public DrugBuilder withStorageCount(String storageCount) {","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"        this.storageCount \u003d new StorageCount(storageCount);","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"    public Drug build() {","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        return new Drug(tradeName, activeIngredient, direction, purpose, sideEffect, storageCount);","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":9,"Emrysil":98,"CShuwen":5}},{"path":"src/test/java/seedu/careflow/testutil/EditPatientDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.patientcommands.UpdateCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":" * A utility class to help with building EditPatientDescriptor objects.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"public class EditPatientDescriptorBuilder {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"    private EditPatientDescriptor descriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder() {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"        this.descriptor \u003d new EditPatientDescriptor(descriptor);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"     * Returns an {@code EditPatientDescriptor} with fields containing {@code patient}\u0027s details","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"        descriptor \u003d new EditPatientDescriptor();","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"        descriptor.setName(patient.getName());","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"        descriptor.setPhone(patient.getPhone());","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"        descriptor.setEmail(patient.getEmail());","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"        descriptor.setAddress(patient.getAddress());","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code Name} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code Phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code Email} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code Address} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"CShuwen"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code DateOfBirth} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withBirthDate(String birthDate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"CShuwen"},"content":"        descriptor.setDateOfBirth(new DateOfBirth(birthDate));","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code Gender} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CShuwen"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code Ic} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withIc(String ic) {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"CShuwen"},"content":"        descriptor.setIc(new Ic(ic));","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code DrugAllergy} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withDrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CShuwen"},"content":"        descriptor.setDrugAllergy(new DrugAllergy(drugAllergy));","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"CShuwen"},"content":"     * Sets the {@code phone} of the {@code EditPatientDescriptor} that we are building.","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptorBuilder withEmergencyContact(String emergencyContact) {","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"CShuwen"},"content":"        descriptor.setEmergencyContact(new Phone(emergencyContact));","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CShuwen"},"content":"        return this;","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"CShuwen"},"content":"    public EditPatientDescriptor build() {","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"CShuwen"},"content":"        return descriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"CShuwen"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CShuwen":115}},{"path":"src/test/java/seedu/careflow/testutil/PatientBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DateOfBirth;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.DrugAllergy;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Gender;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Ic;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"Jiayan-Lim"},"content":" * A utility class to help with building Patient objects.","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"Jiayan-Lim"},"content":"public class PatientBuilder {","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String DEFAULT_BIRTHDATE \u003d \"01-01-1990\";","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String DEFAULT_GENDER \u003d \"female\";","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"Jiayan-Lim"},"content":"    public static final String DEFAULT_IC \u003d \"A7654321B\";","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public static final String DEFAULT_DRUG_ALLERGY \u003d \"penicillin\";","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public static final String DEFAULT_EMERGENCY_CONTACT \u003d \"88888888\";","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"Jiayan-Lim"},"content":"    private DateOfBirth dateOfBirth;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"Jiayan-Lim"},"content":"    private Gender gender;","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"Jiayan-Lim"},"content":"    private Ic ic;","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    // optional fields","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Jiayan-Lim"},"content":"    private DrugAllergy drugAllergy;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"Jiayan-Lim"},"content":"    private Phone emergencyContact;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Creates a {@code PatientBuilder} with the default details.","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"Jiayan-Lim"},"content":"    public PatientBuilder() {","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"Jiayan-Lim"},"content":"        dateOfBirth \u003d new DateOfBirth(DEFAULT_BIRTHDATE);","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"Jiayan-Lim"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"Jiayan-Lim"},"content":"        ic \u003d new Ic(DEFAULT_IC);","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        drugAllergy \u003d new DrugAllergy(DEFAULT_DRUG_ALLERGY);","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        emergencyContact \u003d new Phone(DEFAULT_EMERGENCY_CONTACT);","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * Initializes the PatientBuilder with the data of {@code patientToCopy}.","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public PatientBuilder(Patient patientToCopy) {","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        name \u003d patientToCopy.getName();","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        phone \u003d patientToCopy.getPhone();","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        email \u003d patientToCopy.getEmail();","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        address \u003d patientToCopy.getAddress();","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        dateOfBirth \u003d patientToCopy.getBirthDate();","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        gender \u003d patientToCopy.getGender();","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        ic \u003d new Ic(DEFAULT_IC);","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        drugAllergy \u003d patientToCopy.getDrugAllergy();","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        emergencyContact \u003d patientToCopy.getEmergencyContact();","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Name} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"Jiayan-Lim"},"content":"    public PatientBuilder withName(String name) {","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Phone} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    public PatientBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Email} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    public PatientBuilder withEmail(String email) {","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Address} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"Jiayan-Lim"},"content":"    public PatientBuilder withAddress(String address) {","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code DateOfBirth} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"cydtseng"},"content":"    public PatientBuilder withDob(String dob) {","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"        this.dateOfBirth \u003d new DateOfBirth(dob);","lastModifiedDate":"2023-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Gender} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    public PatientBuilder withGender(String gender) {","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code Ic} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    public PatientBuilder withIc(String ic) {","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"        this.ic \u003d new Ic(ic);","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code DrugAllergy} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    public PatientBuilder withDrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        if (drugAllergy \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            this.drugAllergy \u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"            this.drugAllergy \u003d new DrugAllergy(drugAllergy);","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"     * Sets the {@code EmergencyContact} of the {@code Patient} that we are building.","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"    public PatientBuilder withEmergencyContact(String emergencyContact) {","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"        if (emergencyContact \u003d\u003d null) {","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"            this.emergencyContact \u003d null;","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"            this.emergencyContact \u003d new Phone(emergencyContact);","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"Jiayan-Lim"},"content":"    public Patient build() {","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"Jiayan-Lim"},"content":"        return new Patient(name, phone, email, address, dateOfBirth, gender, ic, drugAllergy, emergencyContact);","lastModifiedDate":"2023-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"cydtseng":11,"Emrysil":72,"-":51,"Jiayan-Lim":18}},{"path":"src/test/java/seedu/careflow/testutil/PatientUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_EMERGENCY_CONTACT_NUMBER;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_IC;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"import static seedu.careflow.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.patientcommands.AddCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.logic.commands.patientcommands.UpdateCommand.EditPatientDescriptor;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":" * A utility class for Patient.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"public class PatientUtil {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"    public static String getAddCommand(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPatientDetails(patient);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"     * Returns the part of command string for the given {@code patient}\u0027s details.","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"    public static String getPatientDetails(Patient patient) {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_NAME + patient.getName().fullName + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_PHONE + patient.getPhone().value + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_EMAIL + patient.getEmail().value + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_ADDRESS + patient.getAddress().value + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_DOB + patient.getBirthDate().value + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_GENDER + patient.getGender().value + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_IC + patient.getIc().value + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_DRUG_ALLERGY + patient.getDrugAllergy().toString() + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"        sb.append(PREFIX_EMERGENCY_CONTACT_NUMBER + patient.getEmergencyContact().value + \" \");","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"    //TODO the emergency contact can be null;","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"     * Returns the part of command string for the given {@code EditPatientDescriptor}\u0027s details.","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"    public static String getEditPatientDescriptorDetails(EditPatientDescriptor descriptor) {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"CShuwen"},"content":"        descriptor.getDateOfBirth().ifPresent(address -\u003e sb.append(PREFIX_DOB).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"CShuwen"},"content":"        descriptor.getGender().ifPresent(address -\u003e sb.append(PREFIX_GENDER).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"CShuwen"},"content":"        descriptor.getIc().ifPresent(address -\u003e sb.append(PREFIX_IC).append(address.value).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CShuwen"},"content":"        descriptor.getDrugAllergy().ifPresent(address -\u003e sb.append(PREFIX_DRUG_ALLERGY).append(address.toString())","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CShuwen"},"content":"                .append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CShuwen"},"content":"        descriptor.getEmergencyContact().ifPresent(address -\u003e sb.append(PREFIX_EMERGENCY_CONTACT_NUMBER)","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CShuwen"},"content":"                .append(address.value).append(\" \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CShuwen"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"CShuwen"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CShuwen":66}},{"path":"src/test/java/seedu/careflow/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cydtseng":1,"-":71}},{"path":"src/test/java/seedu/careflow/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.CareFlowModel;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":" * A utility class for test cases.","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"public class TestUtil {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"     * Returns the middle index of the person in the {@code careflowModel}\u0027s person list.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"    public static Index getMidIndex(CareFlowModel careflowModel) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"        return Index.fromOneBased(careflowModel.getFilteredPatientList().size() / 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"     * Returns the last index of the person in the {@code careflowModel}\u0027s person list.","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CShuwen"},"content":"    public static Index getLastIndex(CareFlowModel careflowModel) {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CShuwen"},"content":"        return Index.fromOneBased(careflowModel.getFilteredPatientList().size());","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CShuwen"},"content":"     * Returns the person in the {@code careflowModel}\u0027s person list at {@code index}.","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CShuwen"},"content":"    public static Patient getPatient(CareFlowModel careflowModel, Index index) {","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CShuwen"},"content":"        return careflowModel.getFilteredPatientList().get(index.getZeroBased());","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CShuwen"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CShuwen":55}},{"path":"src/test/java/seedu/careflow/testutil/TypicalDrugs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.DrugInventory;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.drug.Drug;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"cydtseng"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"cydtseng"},"content":" * Class for typical drugs","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"cydtseng"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class TypicalDrugs {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"    public static final Drug PROZAC \u003d new DrugBuilder().withTradeName(\"Prozac\").withActiveIngredient(\"Fluoxetine \"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"cydtseng"},"content":"            + \"hydrochloride\").withDirection(\"The usual starting dose for adults is 20 mg once a day, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"            + \"typically taken in the morning.\").withPurpose(\"Prozac is an antidepressant medication \"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"cydtseng"},"content":"            + \"that is used to treat major depressive disorder, obsessive-compulsive disorder (OCD), bulimia nervosa, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"cydtseng"},"content":"            + \"and panic disorder.\").withSideEffect(\"Common side effects of Prozac may include \"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"            + \"nausea, vomiting, diarrhea, dry mouth, headache, dizziness, and nervousness.\")","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"cydtseng"},"content":"            .withStorageCount(\"10\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final Drug ROBITUSSIN \u003d new DrugBuilder().withTradeName(\"Robitussin\").withActiveIngredient(","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"            \"Dextromethorphan\").withDirection(\"The usual recommended dose of Robitussin for adults is 10-20 mg every \"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"cydtseng"},"content":"                    + \"4-6 hours, up to a maximum of 120 mg per day.\").withPurpose(\"Robitussin is a cough \"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"cydtseng"},"content":"                    + \"suppressant that is used to treat coughs caused by the common cold \"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"cydtseng"},"content":"                    + \"or other respiratory illnesses.\")","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            .withSideEffect(\"Common side effects of Robitussin may include dizziness, drowsiness, and upset stomach.\")","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            .withStorageCount(\"100\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public static final Drug SUDAFED \u003d new DrugBuilder().withTradeName(\"Sudafed\").withActiveIngredient(","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"cydtseng"},"content":"            \"Pseudoephedrine\").withDirection(\"The usual recommended dose of Sudafed for adults is 30-60 mg every 4-6 \"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"                    + \"hours, up to a maximum of 240 mg per day.\").withPurpose(\"Sudafed is a \"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"cydtseng"},"content":"                    + \"decongestant that is used to treat\"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"cydtseng"},"content":"                    + \" nasal congestion and a runny nose caused by allergies, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"cydtseng"},"content":"                    + \"the common cold, or other respiratory illnesses.\")","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"            .withSideEffect(\"Common side effects of Sudafed may include headache, dry mouth, nervousness, and \"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"cydtseng"},"content":"                    + \"insomnia.\").withStorageCount(\"22\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    public static final Drug VISINE \u003d new DrugBuilder().withTradeName(\"Visine\").withActiveIngredient(","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"            \"Tetrahydrozoline\").withDirection(\"The usual recommended dose of Visine for adults is 1-2 drops in the \"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"cydtseng"},"content":"            +","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"cydtseng"},"content":"            \"affected eye(s) up to 4 times a day.\").withPurpose(\"Visine is an eye drop that is used to relieve \"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"cydtseng"},"content":"            +","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            \"redness in the eyes caused by minor eye irritations, such as smoke, dust, or wind.\").withSideEffect(","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"cydtseng"},"content":"                    \"Common side effects of Visine may include temporary stinging or burning in the eye(s), dryness, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"cydtseng"},"content":"                            +","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                            \"and blurred vision.\").withStorageCount(\"7\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"cydtseng"},"content":"    public static final Drug METFORMIN \u003d new DrugBuilder().withTradeName(\"Metformin\").withActiveIngredient(\"Metformin\"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"cydtseng"},"content":"                    + \" Hydrochloride\").withDirection(\"The usual recommended dose of Metformin for adults is typically \"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"cydtseng"},"content":"                    + \"500mg-1000mg taken twice daily with meals.\").withPurpose(\"Metformin is an \"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"cydtseng"},"content":"                    + \"oral medication used to manage\"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"cydtseng"},"content":"                    + \" type 2 diabetes by helping to control blood sugar levels.\").withSideEffect(\"Common side \"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"cydtseng"},"content":"                    + \"effects of Metformin may include diarrhea, nausea, vomiting, abdominal pain, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"                    + \"and a metallic taste in the mouth.\")","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            .withStorageCount(\"23\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public static final Drug IMODIUM \u003d new DrugBuilder().withTradeName(\"Imodium\").withActiveIngredient(\"Loperamide\")","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"cydtseng"},"content":"            .withDirection(\"The usual recommended dose of Imodium for adults is 4 mg initially, followed by 2 mg \"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"cydtseng"},"content":"                    + \"after each loose stool, up to a maximum of 16 mg per day.\").withPurpose(\"Imodium is an \"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"cydtseng"},"content":"                    + \"over-the-counter medication used to treat acute diarrhea, including traveler\u0027s diarrhea and \"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"cydtseng"},"content":"                    + \"diarrhea associated with gastroenteritis.\").withSideEffect(\"Common side effects of Imodium may \"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"cydtseng"},"content":"                    + \"include constipation, dizziness, and drowsiness.\").withStorageCount(\"25\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    // Manually added","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    public static final Drug ACYCLOVIR \u003d new DrugBuilder().withTradeName(\"Acyclovir\").withActiveIngredient(\"Acyclovir\")","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"cydtseng"},"content":"            .withDirection(\"The usual recommended dose of Acyclovir for adults is 800mg to be taken orally 5 times \"","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"cydtseng"},"content":"                    + \"per day for 7-10 days.\").withPurpose(\"Acyclovir is an antiviral medication used to treat \"","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"cydtseng"},"content":"                    + \"chickenpox, herpes simplex virus, and shingles.\").withSideEffect(\"Common side effects of \"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"cydtseng"},"content":"                    + \"Acyclovir may include nausea, vomiting, diarrhea, and headache.\").withStorageCount(\"10\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    public static final Drug IBUPROFEN \u003d new DrugBuilder().withTradeName(\"Advil\").withActiveIngredient(\"Ibuprofen\")","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"cydtseng"},"content":"            .withDirection(\"The usual recommended dose of Advil for adults is 200-400 mg every 4-6 hours as needed, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"cydtseng"},"content":"                    + \"up to a maximum of 1200 mg per day.\").withPurpose(\"Advil is a nonsteroidal anti-inflammatory \"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"cydtseng"},"content":"                    + \"drug (NSAID) used to relieve pain and reduce inflammation caused by muscle aches, headaches, \"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"cydtseng"},"content":"                    + \"toothaches and menstrual cramps.\").withSideEffect(\"Common side effects of Advil may include \"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"cydtseng"},"content":"                    + \"stomach upset, nausea, and heartburn.\").withStorageCount(\"27\").build();","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    private TypicalDrugs() {} // prevents instantiation","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"     * Returns an {@code DrugInventory} with all the typical drugs.","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    public static DrugInventory getTypicalDrugInventory() {","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        DrugInventory di \u003d new DrugInventory();","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        for (Drug drug: getTypicalDrugs()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"            di.addDrug(drug);","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        return di;","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    public static List\u003cDrug\u003e getTypicalDrugs() {","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(PROZAC, ROBITUSSIN, SUDAFED, VISINE, METFORMIN, IMODIUM));","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":48,"Emrysil":40,"CShuwen":3}},{"path":"src/test/java/seedu/careflow/testutil/TypicalHospitals.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CShuwen"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CShuwen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CShuwen"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CShuwen"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.HospitalRecord;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CShuwen"},"content":"import seedu.careflow.model.hospital.Hospital;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CShuwen"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CShuwen"},"content":" * A utility class containing a list of {@code Hospital} objects to be used in tests.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CShuwen"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CShuwen"},"content":"public class TypicalHospitals {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CShuwen"},"content":"    public static final Hospital KK_WOMEN_AND_CHILDREN \u003d new Hospital(\"KK Women\u0027s and Children\u0027s Hospital\",","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CShuwen"},"content":"            \"+65 62255554\");","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CShuwen"},"content":"    public static final Hospital CHANGI_GENERAL \u003d new Hospital(\"Changi General Hospital\",","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CShuwen"},"content":"            \"+65 67888833\");","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CShuwen"},"content":"    public static final Hospital KHOO_TECK_PHAT \u003d new Hospital(\"Khoo Teck Puat Hospital\",","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CShuwen"},"content":"            \"+65 65558000\");","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CShuwen"},"content":"    public static final Hospital TAN_TOCK_SENG \u003d new Hospital(\"Tan Tock Seng Hospital\",","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CShuwen"},"content":"            \"+65 62566011\");","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CShuwen"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CShuwen"},"content":"    private TypicalHospitals() {} // prevents instantiation","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CShuwen"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CShuwen"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CShuwen"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CShuwen"},"content":"    public static HospitalRecord getTypicalHospitalRecord() {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CShuwen"},"content":"        HospitalRecord hr \u003d new HospitalRecord();","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CShuwen"},"content":"        for (Hospital hospital : getTypicalHospital()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CShuwen"},"content":"            hr.addHospital(hospital);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CShuwen"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CShuwen"},"content":"        return hr;","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CShuwen"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CShuwen"},"content":"    public static List\u003cHospital\u003e getTypicalHospital() {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CShuwen"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(KK_WOMEN_AND_CHILDREN, CHANGI_GENERAL,","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CShuwen"},"content":"                KHOO_TECK_PHAT, TAN_TOCK_SENG));","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CShuwen"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CShuwen"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CShuwen":43}},{"path":"src/test/java/seedu/careflow/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"cydtseng":2,"-":10}},{"path":"src/test/java/seedu/careflow/testutil/TypicalPatients.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package seedu.careflow.testutil;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.PatientRecord;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import seedu.careflow.model.person.Patient;","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class TypicalPatients {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static final Patient ALICE \u003d new PatientBuilder().withName(\"Alice Pauline\").withPhone(\"94351253\")","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"cydtseng"},"content":"            .withEmail(\"alice@example.com\").withAddress(\"123, Jurong West Ave 6, #08-111\").withDob(\"01-01-1999\")","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"            .withGender(\"female\").withIc(\"T1128899I\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public static final Patient BENSON \u003d new PatientBuilder().withName(\"Benson Meier\").withPhone(\"98765432\")","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"cydtseng"},"content":"            .withEmail(\"johnd@example.com\").withAddress(\"311, Clementi Ave 2, #02-25\").withDob(\"03-06-2000\")","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"            .withGender(\"male\").withIc(\"Y7778899K\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public static final Patient CARL \u003d new PatientBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"cydtseng"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withDob(\"08-08-1998\")","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"            .withGender(\"male\").withIc(\"P0098811H\").withDrugAllergy(\"Aspirin\")","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            .build();","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public static final Patient DANIEL \u003d new PatientBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"cydtseng"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withDob(\"03-05-1971\")","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            .withGender(\"male\").withIc(\"B9965511S\").withDrugAllergy(\"Anticonvulsants\").withEmergencyContact(\"83754333\")","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            .build();","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public static final Patient ELLE \u003d new PatientBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"cydtseng"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withDob(\"09-04-1961\")","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            .withGender(\"female\").withIc(\"I1133113S\").withDrugAllergy(\"Local anesthetics\")","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            .withEmergencyContact(\"81756633\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public static final Patient FIONA \u003d new PatientBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"cydtseng"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withDob(\"03-12-1981\")","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            .withGender(\"female\").withIc(\"W9164411S\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    public static final Patient GEORGE \u003d new PatientBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"cydtseng"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withDob(\"01-08-1991\")","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            .withGender(\"male\").withIc(\"B9965511S\").withEmergencyContact(\"83704433\")","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            .build();","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    // Manually added","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public static final Patient HOON \u003d new PatientBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    public static final Patient IDA \u003d new PatientBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    //    public static final Patient AMY \u003d new PatientBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    //            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    //    public static final Patient BOB \u003d new PatientBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"cydtseng"},"content":"    //            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"cydtseng"},"content":"    //            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    //            .build();","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    private TypicalPatients() {} // prevents instantiation","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    public static PatientRecord getTypicalPatientRecord() {","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        PatientRecord pr \u003d new PatientRecord();","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        for (Patient patient : getTypicalPatients()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            pr.addPatient(patient);","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        return pr;","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    public static List\u003cPatient\u003e getTypicalPatients() {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"cydtseng":9,"Emrysil":64}},{"path":"src/test/java/seedu/careflow/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cydtseng":1,"-":34}},{"path":"src/test/java/seedu/careflow/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cydtseng"},"content":"package seedu.careflow.ui;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cydtseng"},"content":"import static seedu.careflow.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"cydtseng"},"content":"import seedu.careflow.MainApp;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cydtseng":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003c?import seedu.careflow.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cydtseng":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"cydtseng"},"content":"\u003cfx:root type\u003d\"seedu.careflow.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"cydtseng":1,"-":5}}]
